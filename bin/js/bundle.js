var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
var GamePage_1 = require("././view/GamePage");
var LoadingPage_1 = require("./view/LoadingPage");
var SelectPage_1 = require("./view/SelectPage");
var Round_1 = require("./script/Round");
var SelectBoxPage_1 = require("./view/SelectBoxPage");
var PlayerStar_1 = require("./script/PlayerStar");
var RoundPage_1 = require("././view/RoundPage");
var StartGamePage_1 = require("./view/StartGamePage");
/*
* 游戏初始化配置;
*/
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }
    GameConfig.init = function () {
        var reg = Laya.ClassUtils.regClass;
        reg("./view/GamePage.ts", GamePage_1.default);
        reg("view/LoadingPage.ts", LoadingPage_1.default);
        reg("view/SelectPage.ts", SelectPage_1.default);
        reg("script/Round.ts", Round_1.default);
        reg("view/SelectBoxPage.ts", SelectBoxPage_1.default);
        reg("script/PlayerStar.ts", PlayerStar_1.default);
        reg("./view/RoundPage.ts", RoundPage_1.default);
        reg("view/StartGamePage.ts", StartGamePage_1.default);
    };
    GameConfig.width = 750;
    GameConfig.height = 1334;
    GameConfig.scaleMode = "fixedwidth";
    GameConfig.screenMode = "none";
    GameConfig.alignV = "bottom";
    GameConfig.alignH = "center";
    GameConfig.startScene = "Loading.scene";
    GameConfig.sceneRoot = "";
    GameConfig.debug = false;
    GameConfig.stat = false;
    GameConfig.physicsDebug = false;
    GameConfig.exportSceneToJson = true;
    return GameConfig;
}());
exports.default = GameConfig;
GameConfig.init();
},{"././view/GamePage":26,"././view/RoundPage":28,"./script/PlayerStar":21,"./script/Round":22,"./view/LoadingPage":27,"./view/SelectBoxPage":29,"./view/SelectPage":30,"./view/StartGamePage":32}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var PlayerData_1 = require("./view/Config/PlayerData");
var ShopDialog_1 = require("./view/ShopDialog");
var Main = /** @class */ (function () {
    function Main() {
        //根据IDE设置初始化引擎		
        if (window["Laya3D"])
            Laya3D.init(GameConfig_1.default.width, GameConfig_1.default.height);
        else
            Laya.init(GameConfig_1.default.width, GameConfig_1.default.height, Laya["WebGL"]);
        Laya["Physics"] && Laya["Physics"].enable();
        Laya["DebugPanel"] && Laya["DebugPanel"].enable();
        Laya.stage.scaleMode = GameConfig_1.default.scaleMode;
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        //兼容微信不支持加载scene后缀场景
        Laya.URL.exportSceneToJson = GameConfig_1.default.exportSceneToJson;
        //打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
        if (GameConfig_1.default.debug || Laya.Utils.getQueryString("debug") == "true")
            Laya.enableDebugPanel();
        if (GameConfig_1.default.physicsDebug && Laya["PhysicsDebugDraw"])
            Laya["PhysicsDebugDraw"].enable();
        if (GameConfig_1.default.stat)
            Laya.Stat.show();
        // Laya.alertGlobalError = true;
        //激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
        Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
    }
    Main.prototype.onVersionLoaded = function () {
        //激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
        Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
    };
    Main.prototype.onConfigLoaded = function () {
        //加载IDE指定的场景
        // Laya.URL.basePath = "https://testcdn.chinaxwz.cn/game/gsz/";
        var src = [
            { url: "config/selectConfig.json" },
            { url: "config/playerDataTest.json" },
            { url: "config/mapConfig.json" },
            ///
            { url: "res/atlas/loadingView.atlas" },
            { url: "unpackage/loadingBg.jpg" }
        ];
        Laya.loader.load(src, Laya.Handler.create(this, this.onLoad));
    };
    Main.prototype.onLoad = function () {
        this.keepPlayerData();
        GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene);
    };
    Main.prototype.keepPlayerData = function () {
        //数据保存
        var object = Laya.loader.getRes("config/selectConfig.json");
        this.keepLimit(object.limitList);
        Laya.WeakObject.I.set("boxSkin", object.boxSkin);
        var userData = Laya.loader.getRes("config/playerDataTest.json");
        this.keepUserData(userData);
        //--------------------------
        Laya.loader.clearRes("config/selectConfig.json");
        Laya.loader.clearRes("config/playerDataTest.json");
    };
    /**保存 关卡限制信息*/
    Main.prototype.keepLimit = function (object) {
        for (var i = 0; i < object.length; i++) {
            PlayerData_1.PlayerData.ins.arr_LimitSelect.push(object[i].selectLimit);
            // Laya.WeakObject.__init__();
            Laya.WeakObject.I.set(i, object[i]);
            // PlayerData.ins.boxLimtDic.set(i,object[i]);
        }
    };
    /**保存用户信息 */
    Main.prototype.keepUserData = function (userData) {
        PlayerData_1.PlayerData.ins.starNum = userData.playerStars;
        PlayerData_1.PlayerData.ins.super = userData.playerSuper;
        PlayerData_1.PlayerData.ins.teach = userData.PlayerTeach;
        for (var i = 0; i < userData.playerCard.length; i++) {
            Laya.WeakObject.I.set(userData.playerCard[i].card, userData.playerCard[i].stars);
        }
        //保存dilog
        Laya.WeakObject.I.set("dialog", new ShopDialog_1.default());
        // console.log(Laya.WeakObject.I);		
    };
    return Main;
}());
//激活启动类
new Main();
},{"./GameConfig":1,"./view/Config/PlayerData":25,"./view/ShopDialog":31}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 *
 * new -> init ->setSingle -> start
 *
 * 鼠标拖尾 【1】圆形拖尾 图片拼贴  测试图片skin:assate/suca2.png
 */
var Tail = /** @class */ (function () {
    /**
     * view:可拖尾sprite层
     * 先init 再set 再Start
     * */
    function Tail(view) {
        this.view = view;
    }
    /**
     *
     * *createTime:生成间隙
     * *destoryTime:完全消失所需时间
     *
     * */
    Tail.prototype.Init = function (createTime, destoryTime) {
        this.createDic = createTime;
        this.destoryTime = destoryTime;
        this.arr_RodePos = new Array();
        this.arr_Imgs = new Array();
        this.rem_LastPos = { x: null, y: null };
        this.spriteImgs = new Laya.Sprite();
        this.view.addChild(this.spriteImgs);
        this.index_Img = 0;
        this.index_ImgUsed = 0;
        this._x = 0;
        this._y = 0;
    };
    /**
     * 【1】设置 单图片圆形拖尾
     * *skin : 图片的地址
     *
     * */
    Tail.prototype.setSingle = function (skinType, skin) {
        switch (skinType) {
            case "cirle":
                this.skinCirle = skin;
                break;
        }
    };
    Tail.prototype.addEvents = function () {
        this.view.on(Laya.Event.MOUSE_DOWN, this, this.onMouseDow);
        this.view.on(Laya.Event.MOUSE_UP, this, this.onMouseUp);
        Laya.timer.loop(1, this, this.tailRun);
    };
    Tail.prototype.removeEvens = function () {
        this.view.off(Laya.Event.MOUSE_DOWN, this, this.onMouseDow);
        this.view.off(Laya.Event.MOUSE_UP, this, this.onMouseUp);
        Laya.timer.clear(this, this.tailRun);
    };
    /**
     * 鼠标侦测 按下
     * */
    Tail.prototype.onMouseDow = function () {
        this.isDown = true;
    };
    /**
     * 鼠标侦测 抬起
     *
     * */
    Tail.prototype.onMouseUp = function () {
        this.isDown = false;
        this.rem_LastPos.x = null;
        this.rem_LastPos.y = null;
    };
    /**
     * 拖尾 run
     *
     * */
    Tail.prototype.tailRun = function () {
        //运行单图圆形拖尾
        if (this.skinCirle)
            this.cirleTailRun();
    };
    /**
     * 开始拖尾效果
     *
     * */
    Tail.prototype.start = function () {
        this.addEvents();
    };
    /**
     * 取消拖尾效果
     *
     * */
    Tail.prototype.stop = function () {
        this.removeEvens();
    };
    /////////////////////////////////////////////单图片圆形拖尾逻辑↓
    Tail.prototype.cirleTailRun = function () {
        var mX = Laya.stage.mouseX;
        var mY = Laya.stage.mouseY;
        // console.log("拖尾");
        if (this.isDown) {
            // console.log("记录");
            //记录
            this.rem_Pos(mX, mY);
        }
        // console.log("显示");
        this.changeStyle();
    };
    /////////////////////////////////////////////单图片圆形拖尾逻辑↑
    /////////////////////////////////////////////公用处理方法
    /**
     * 改变状态
     */
    Tail.prototype.changeStyle = function () {
        if (this.arr_Imgs.length > 0) {
            this.index_Img = this.index_ImgUsed; //
            var len = void 0;
            var img = void 0;
            while (this.arr_Imgs[this.index_Img] != undefined) {
                len = this.arr_Imgs.length - this.index_Img;
                // console.log("【下标】：" + this.index_Img + "  【最近位置】：" + this.index_ImgUsed);
                img = this.arr_Imgs[this.index_Img];
                img.scaleX += -this.getScale(len, (len - (this.index_Img - this.index_ImgUsed)) / len);
                img.scaleY += -this.getScale(len, (len - (this.index_Img - this.index_ImgUsed)) / len);
                img.alpha += -this.getScale(len, (len - (this.index_Img - this.index_ImgUsed)) / len);
                this.index_Img++;
                if (img.scaleX < 0.05) {
                    Laya.Pool.recover("cirleTail", img);
                    // console.log("收入对象池");
                    this.index_ImgUsed++;
                }
            }
        }
        if (this.arr_Imgs.length == this.index_ImgUsed && this.arr_Imgs.length != 0) {
            this.arr_RodePos = [];
            this.arr_Imgs = [];
            this.index_Img = 0;
            this.index_ImgUsed = 0;
        }
    };
    /**缩放逻辑  number是 每个图片的特殊标量*/
    Tail.prototype.getScale = function (len, scale_number) {
        var num = 0.1;
        if (len > 8) {
            //加速
            return num * scale_number;
        }
        else {
            return 0.05;
        }
    };
    /**
     * 位置差
     */
    Tail.prototype.setPosX = function (x, y) {
        this._x = x;
        this._y = y;
    };
    /**
     * 队列记录坐标点
     * mX 鼠标当前X坐标
     * mY鼠标当前Y坐标
     * */
    Tail.prototype.rem_Pos = function (mX, mY) {
        if (this.rem_LastPos.x == null || this.rem_LastPos.y == null) //初始记录
         {
            this.rem_LastPos.x = mX;
            this.rem_LastPos.y = mY;
        }
        else {
            var dic = this.countDic_Point(mX, mY, this.rem_LastPos.x, this.rem_LastPos.y);
            if (dic > this.createDic) {
                var pos = {};
                //空隙补全
                var count = void 0;
                // if(dic > 50)
                // {
                //     count  = Math.floor(dic/50);
                //     let cos = this.rotationDeal(this.rem_LastPos.x,this.rem_LastPos.y,mX,mY,"cos");
                //     let sin = this.rotationDeal(this.rem_LastPos.x,this.rem_LastPos.y,mX,mY,"sin");
                //     for(let i = 1; i<=count ; i++)
                //     {
                //         let pos : any= {};
                //         this.arr_RodePos.push({x:this.rem_LastPos.x + 50 * i * cos,y:this.rem_LastPos.y + 50 * i * sin});
                //         if(this.skinCirle) this.showSingleCirle();
                //     }
                // }
                pos.x = mX + this._x;
                pos.y = mY + this._y;
                this.arr_RodePos.push(pos);
                if (this.skinCirle)
                    this.showSingleCirle();
                this.rem_LastPos.x = mX;
                this.rem_LastPos.y = mY;
                // console.log(this.arr_RodePos);
                //显示
                //  console.log(this.arr_RodePos);
            }
        }
    };
    /**角度处理函数
     *
     *  传入 碰撞物体
     *
     *  获取正选 或余弦  或正切
     *
     *  返回 对应值
     *
     *  sin  对边/斜边
     *  cos  临边/斜边
     *  tan  对边/临边
     * */
    Tail.prototype.rotationDeal = function (x1, y1, x2, y2, getString) {
        /**斜边 */
        var c = Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2));
        /**临边 */
        var a = x1 - x2;
        /**对边 */
        var b = y1 - y2;
        if (getString == "sin") {
            //console.log("#sin ==" + (b/c));
            return (b / c);
        }
        else if (getString == "cos") {
            //console.log("#cos ==" + (a/c));
            return (a / c);
        }
        else {
            //console.log("#tan ==" + (b/a));//对边 比 临边 
            return (b / a);
        }
    };
    /***
     * 距离计算
     * 两点之间
     * pos1点1
     * pos2点2
     */
    Tail.prototype.countDic_Object = function (pos1, pos2) {
        return Math.sqrt(Math.pow(pos1.x - pos2.x, 2) + Math.pow(pos1.y - pos2.y, 2));
    };
    /***
     * 距离计算
     * 两点之间
     */
    Tail.prototype.countDic_Point = function (x1, y1, x2, y2) {
        return Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2));
    };
    /**显示逻辑 */
    Tail.prototype.showSingleCirle = function () {
        this.getTail();
    };
    /**获取尾巴 */
    Tail.prototype.getTail = function () {
        var img = Laya.Pool.getItem("cirleTail");
        if (!img) {
            img = this.newImage();
        }
        else {
            if (img.parent != this.spriteImgs) {
                img.removeSelf();
                this.spriteImgs.addChild(img);
            }
        }
        //加入队列
        this.arr_Imgs.push(img);
        // console.log("【arr_img】::" + this.arr_Imgs.length);
        this.initImage(img);
    };
    /**
     * 初始化尾巴
     */
    Tail.prototype.initImage = function (img) {
        img.x = this.arr_RodePos[this.arr_RodePos.length - 1].x;
        img.y = this.arr_RodePos[this.arr_RodePos.length - 1].y;
        img.scale(1, 1);
        img.alpha = 1;
        // (this.view as Laya.Sprite).cacheAsBitmap = true;
    };
    /**
     * 新建 拖尾图片
     *
     * */
    Tail.prototype.newImage = function () {
        var img;
        img = new Laya.Image();
        img.zOrder = 10;
        this.spriteImgs.addChild(img);
        if (this.skinCirle)
            img.skin = this.skinCirle;
        img.pivotX = img.width / 2,
            img.pivotY = img.height / 2;
        return img;
    };
    return Tail;
}());
exports.default = Tail;
},{}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Tool = /** @class */ (function () {
    function Tool() {
    }
    //获取三角函数值
    Tool.rotationDeal = function (fx, fy, sx, sy, getString) {
        /**斜边 */
        var c = Math.sqrt(Math.pow(fx - sx, 2) + Math.pow(fy - sy, 2));
        /**临边 */
        var a = sx - fx;
        /**对边 */
        var b = sy - fy;
        if (getString == "sin") {
            //console.log("#sin ==" + (b/c));
            return (b / c);
        }
        else if (getString == "cos") {
            //console.log("#cos ==" + (a/c));
            return (a / c);
        }
        else {
            //console.log("#tan ==" + (b/a));//对边 比 临边 
            return (b / a);
        }
    };
    /**碰撞检测 dicNum ：预设距离 object1和object2传入sprite,是按照每个sprite的锚点在中心位置来计算的  */
    Tool.collisionCheck = function (object1, object2) {
        if (Math.abs(object1.x - object2.x) < object1.width / 2 + object2.width / 2 &&
            Math.abs(object1.y - object2.y) < object1.height / 2 + object2.height / 2) {
            console.log("true");
            return true;
        }
        else {
            console.log("false");
            return false;
        }
    };
    Tool.rotateRopePoint_2 = function (x, y, X, Y) {
        var cos = Tool.rotationDeal(x, y, X, Y, "cos");
        var sin = Tool.rotationDeal(x, y, X, Y, "sin");
        var rotation;
        if (cos >= 0 && sin > 0) {
            rotation = 180 / Math.PI * Math.acos(cos) - 90;
        }
        else if (cos < 0 && sin >= 0) {
            rotation = 180 / Math.PI * Math.acos(cos) - 90;
        }
        else if (cos <= 0 && sin < 0) {
            rotation = 90 - 180 / Math.PI * Math.acos(cos);
        }
        else if (cos > 0 && sin <= 0) {
            rotation = 90 - 180 / Math.PI * Math.acos(cos);
        }
        return rotation;
    };
    return Tool;
}());
exports.default = Tool;
},{}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Dic = /** @class */ (function () {
    function Dic() {
    }
    Dic.rotationDeal = function (fx, fy, sx, sy, getString) {
        /**斜边 */
        var c = Math.sqrt(Math.pow(fx - sx, 2) + Math.pow(fy - sy, 2));
        /**临边 */
        var a = sx - fx;
        /**对边 */
        var b = sy - fy;
        if (getString == "sin") {
            //console.log("#sin ==" + (b/c));
            return (b / c);
        }
        else if (getString == "cos") {
            //console.log("#cos ==" + (a/c));
            return (a / c);
        }
        else {
            //console.log("#tan ==" + (b/a));//对边 比 临边 
            return (b / a);
        }
    };
    /**
     * 距离计算
     * 2 对象
     * first
     * second
     */
    Dic.countDic_Object = function (f, s) {
        return Math.sqrt(Math.pow(f.x - s.x, 2) + Math.pow(f.y - s.y, 2));
    };
    return Dic;
}());
exports.default = Dic;
},{}],6:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * 游戏配置 属性设置
 * */
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }
    /////////////////////////////////绳子
    /**绳子生成像素间隔 */
    GameConfig.ROPE_DIC = 8;
    /**绳子节点转动阻力 */
    GameConfig.ROPE_POINT_ANGULARDAMPING = 100000;
    /**绳子线性阻力 */
    GameConfig.ROPE_POINT_LINEARDAMOING = 0.001;
    /**绳子密度 */
    GameConfig.ROPE_POINT_DENSITY = 1;
    /**绳子自动靠近糖果速度 */
    GameConfig.ROPE_TO_CANDY_SPEED = 20;
    /**绳子粗细 */
    GameConfig.ROPE_WIDTH = 7;
    ////////////////////////////////弹力绳子
    /**绳子生成像素间隔*/
    GameConfig.ROPE_JUMP_DIC = 1;
    /**绳子节点转动阻力 */
    GameConfig.ROPE_JUMP__POINT_ANGULARDAMPING = 80;
    /**绳子线性阻力 */
    GameConfig.ROPE_JUMP__POINT_LINEARDAMOING = 0.001;
    /**绳子密度 */
    GameConfig.ROPE_JUMP__POINT_DENSITY = 2;
    /**绳子自动靠近糖果速度 */
    GameConfig.ROPE_JUMP__TO_CANDY_SPEED = 30;
    ///////////////////////////////糖果
    /**糖果转动阻力 */
    GameConfig.CANDY_ANGULARDAMPING = 0;
    /**糖果线性转动阻力 */
    GameConfig.CANDY_LINEARDAMPING = 0;
    /**糖果密度 */
    GameConfig.CANDY_DENSITY = 200;
    /**糖果重力洗漱 */
    GameConfig.CANDY_GRAVITY = 1.5;
    /////////////////////////////////怪物
    /**吃糖果距离 */
    GameConfig.MONSTER_EAT_DIC = 60;
    /**张大嘴距离 */
    GameConfig.MONSTER_OPEN_MOUSE = 200;
    //////////////////////////////////////
    /**[monster]糖果丢失， 伤心 15*/
    GameConfig.ANI_MONSTER_SAD = "no";
    /**[monster]糖果吃到，咀嚼 9 LOOP*/
    GameConfig.ANI_MONSTER_EAT = "eat";
    /**[monster]吃到星星，开心 19*/
    GameConfig.ANI_MONSTER_HAPPYE = "getStar";
    /**[monster]糖果靠近 张嘴 13*/
    GameConfig.ANI_MONSTER_OPEN = "open";
    /**[monster]动作 给我吃 26*/
    GameConfig.ANI_MONSTER_GIVE_ME = "giveMe";
    /**[monster]动作 随机 29*/
    GameConfig.ANI_MONSTER_GIVE_ME2 = "giveMe2_";
    /**[monster]站立 不动 17*/
    GameConfig.ANI_MONSTER_STAND = "stand";
    /**[monster]动作 翘脚 43*/
    GameConfig.ANI_MONSTER_ACTION = "ation";
    ////////////////////////////超能力
    GameConfig.SUPER_V = 7;
    //////////////////////////////////////////////蜘蛛动画
    /**【蜘蛛】 糖果接近 */
    GameConfig.ANI_FOUND_CANDY = "spiderfond";
    /** 【蜘蛛】爬向糖果 */
    GameConfig.ANI_TOWORD_CANDY = "spider";
    /** 【蜘蛛】得到糖果 */
    GameConfig.ANI_GET_CANDY = "spiderget";
    //////////////////////////////////////////////蜘蛛
    /**蜘蛛的移动速度 */
    GameConfig.SPIDER_SPEED = 0.03;
    /**蜘蛛下掉速度 */
    GameConfig.SPIDER_SPEEDX = 0.0008;
    /////////////////////////////////////////////世界
    /***重力系数 世界 */
    GameConfig.WOLDE_G = 14;
    /////////////////////////////////////////////层级配置
    /**hook顶部 */
    GameConfig.ZORDER_HOOK_TOP = 3;
    /**ropePoint */
    GameConfig.ZORDER_ROPEPOINT = 2;
    /**糖果 */
    GameConfig.ZORDER_CANDY = 50;
    /**气泡 */
    GameConfig.ZORDER_BALLON = 51;
    /////////////////////////////////////////////////坐标差记录
    GameConfig.CaX = 0;
    GameConfig.CaY = 0;
    return GameConfig;
}());
exports.default = GameConfig;
},{}],7:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * 地图配置 ， 纯数据
 */
var Config;
(function (Config) {
    var ConfigManger = /** @class */ (function () {
        function ConfigManger() {
        }
        /**获取地图配置MapConfig getMapConfig("0-0",0)  */
        ConfigManger.prototype.getMapConfig = function (mapWhere, mapId) {
            var object = Laya.loader.getRes("config/mapConfig.json");
            var objectMapConfig;
            for (var i = 0; i < object.length; i++) {
                console.log("获取得长度" + object.length);
                if (object[i].mapWhere == mapWhere) {
                    for (var h = 0; h < object[i].mapList.length; h++) {
                        if (mapId == object[i].mapList[h].mapId) {
                            objectMapConfig = object[i].mapList[h];
                            // Laya.loader.clearRes(x"config/mapConfig.json");
                            return new MapConfig(objectMapConfig);
                        }
                    }
                    break;
                }
            }
            // Laya.loader.clearRes("config/mapConfig.json");
            console.log("没有此配置 mapId = " + mapId);
            return null;
        };
        ConfigManger.ins = new ConfigManger();
        return ConfigManger;
    }());
    Config.ConfigManger = ConfigManger;
    var MapConfig = /** @class */ (function () {
        function MapConfig(data) {
            this.screenRoad = [];
            this.arr_MapSkinPos = [];
            this.arr_MapSkin = [];
            this.arr_Hook = [];
            this.arr_Rope = [];
            this.arr_Rope2 = [];
            this.arr_Star = [];
            this.arr_MapSkin = [];
            this.arr_Balloon = [];
            this.arr_MagicHat = [];
            this.arr_Knife = [];
            this.arr_Forceball = [];
            this.arr_Laser = [];
            this.arr_Spider = [];
            this.arr_bounceDrum = [];
            this.parseConfigData(data);
        }
        /**解析读取数组 */
        MapConfig.prototype.parseConfigData = function (data) {
            var _this = this;
            //地图本身配置
            this.mapId = data.mapId;
            this.width = data.width;
            this.height = data.height;
            this.screenRoad = data.screenRoad;
            //皮肤读取
            data.mapSkins.forEach(function (skin) {
                _this.arr_MapSkin.push(skin.skin);
                _this.arr_MapSkinPos.push({ x: skin.x, y: skin.y, height: skin.height, width: skin.width });
            });
            /**星星 */
            this.parseStar(data.star);
            /**糖果 */
            this.parseCandy(data.candy, data.candy2);
            /**怪物 */
            this.parseMonster(data.monster);
            /**Hook  锚点*/
            this.parseHook(data.hook);
            /**绳子 */
            this.parseRope(data.rope);
            /**绳子2 */
            this.parseRope2(data.rope2);
            /**泡泡解析 */
            this.parseBalloon(data.balloon);
            /**解析帽子 */
            this.parseMagicHat(data.magicHat);
            /**锥子解析 */
            this.parseKnife(data.knife);
            /**推力球解析 */
            this.parseForceBall(data.forceball);
            /**激光解析 */
            this.parseLaser(data.laser);
            /**蜘蛛解析 */
            this.parseSpider(data.spider);
            /**弹力鼓解析 */
            this.parseBounceDrum(data.bounceDrum);
        };
        /**蜘蛛 */
        MapConfig.prototype.parseSpider = function (spiderObject) {
            var _this = this;
            if (spiderObject) {
                var spiderConfig_1;
                spiderObject.forEach(function (obj) {
                    spiderConfig_1 = new SpiderConfig();
                    spiderConfig_1.spider_X = obj.x;
                    spiderConfig_1.spider_Y = obj.y;
                    _this.arr_Spider.push(spiderConfig_1);
                });
                console.log("spider -解析");
            }
        };
        /**弹力鼓解析 */
        MapConfig.prototype.parseBounceDrum = function (bounceDrumObject) {
            if (!bounceDrumObject)
                return;
            var bounceDrumConfig;
            for (var i = 0; i < bounceDrumObject.length; i++) {
                bounceDrumConfig = new BounceDrumConfig();
                bounceDrumConfig.bounceDrum_X = bounceDrumObject[i].x;
                bounceDrumConfig.bounceDrum_Y = bounceDrumObject[i].y;
                bounceDrumConfig.rotation = bounceDrumObject[i].rotation;
                bounceDrumConfig.size = bounceDrumObject[i].size;
                if (bounceDrumObject[i].moveTo)
                    bounceDrumConfig.moveTo = bounceDrumObject[i].moveTo;
                if (bounceDrumObject[i].rotationV)
                    bounceDrumConfig.rotationV = bounceDrumObject[i].rotationV;
                if (bounceDrumObject[i].power)
                    bounceDrumConfig.power = bounceDrumObject[i].power;
                this.arr_bounceDrum.push(bounceDrumConfig);
            }
        };
        /**绳子节点2解析 */
        MapConfig.prototype.parseRope2 = function (rope2) {
            if (!rope2)
                return;
            var ropeConfig;
            for (var i = 0; i < rope2.length.length; i++) {
                ropeConfig = new RopeConfig();
                ropeConfig.num = rope2.length[i];
                ropeConfig.hookIndex = -1;
                if (rope2.hookIndex) {
                    if (rope2.hookIndex[i] || rope2.hookIndex[i] == 0)
                        ropeConfig.hookIndex = rope2.hookIndex[i];
                }
                this.arr_Rope2.push(ropeConfig);
            }
        };
        /**绳子节点解析 */
        MapConfig.prototype.parseRope = function (rope) {
            var ropeConfig;
            for (var i = 0; i < rope.length.length; i++) {
                ropeConfig = new RopeConfig();
                ropeConfig.num = rope.length[i];
                ropeConfig.hookIndex = -1;
                if (rope.hookIndex) {
                    if (rope.hookIndex[i] || rope.hookIndex[i] == 0)
                        ropeConfig.hookIndex = rope.hookIndex[i];
                }
                this.arr_Rope.push(ropeConfig);
            }
            console.log("rope -解析");
        };
        /**钩子hook */
        MapConfig.prototype.parseHook = function (hookObject) {
            var _this = this;
            var hookConfig;
            hookObject.forEach(function (obj) {
                hookConfig = new HookConfig();
                hookConfig.style = obj.style;
                hookConfig.hook_X = obj.x;
                hookConfig.hook_Y = obj.y;
                if (obj.size) {
                    hookConfig.size = obj.size;
                }
                if (obj.length) {
                    hookConfig.rotation = obj.rotation;
                    hookConfig.length = obj.length;
                    hookConfig.percent = obj.percent;
                }
                _this.arr_Hook.push(hookConfig);
            });
            console.log("hook -解析");
        };
        /**怪物 */
        MapConfig.prototype.parseMonster = function (monster) {
            this.monster = new MonsterConfig();
            this.monster.monster_X = monster.x;
            this.monster.monster_Y = monster.y;
            console.log("monster -解析");
        };
        /**糖果 */
        MapConfig.prototype.parseCandy = function (candy, candy2) {
            this.candyConfig = new CandyConfig();
            this.candyConfig.candy_X = candy.x;
            this.candyConfig.candy_Y = candy.y;
            this.candyConfig.style = candy.style;
            console.log("candy -解析");
            if (candy2) {
                this.candyConfig2 = new CandyConfig();
                this.candyConfig2.candy_X = candy2.x;
                this.candyConfig2.candy_Y = candy2.y;
                this.candyConfig2.style = candy2.style;
            }
        };
        /**解析星星 */
        MapConfig.prototype.parseStar = function (starObject) {
            var _this = this;
            var starConfig;
            starObject.forEach(function (obj) {
                starConfig = new StarConfig();
                starConfig.style = obj.style;
                starConfig.star_X = obj.x;
                starConfig.star_Y = obj.y;
                starConfig.interval = obj.interval;
                starConfig.move = obj.move;
                starConfig.rotateLength = obj.rotateLength;
                starConfig.v = obj.v;
                _this.arr_Star.push(starConfig);
            });
            console.log("star -解析");
        };
        /**泡泡 */
        MapConfig.prototype.parseBalloon = function (balloonObject) {
            var _this = this;
            if (balloonObject) {
                var balloonConfig_1;
                balloonObject.forEach(function (obj) {
                    balloonConfig_1 = new BalloonConfig();
                    balloonConfig_1.balloon_X = obj.x;
                    balloonConfig_1.balloon_Y = obj.y;
                    _this.arr_Balloon.push(balloonConfig_1);
                });
                console.log("balloon -解析");
            }
        };
        /**锥子 */
        MapConfig.prototype.parseKnife = function (knifeObject) {
            var _this = this;
            if (knifeObject) {
                var knifeConfig_1;
                knifeObject.forEach(function (obj) {
                    knifeConfig_1 = new KnifeConfig();
                    knifeConfig_1.knife_X = obj.x;
                    knifeConfig_1.knife_Y = obj.y;
                    knifeConfig_1.style = obj.style;
                    knifeConfig_1.rotation = obj.rotation;
                    knifeConfig_1.v = obj.v;
                    knifeConfig_1.move = obj.move;
                    _this.arr_Knife.push(knifeConfig_1);
                });
                console.log("knife -解析");
            }
        };
        /**推力球 */
        MapConfig.prototype.parseForceBall = function (forceballObject) {
            var _this = this;
            if (forceballObject) {
                var forceballConfig_1;
                forceballObject.forEach(function (obj) {
                    forceballConfig_1 = new ForceBallConfig();
                    forceballConfig_1.forceball_X = obj.x;
                    forceballConfig_1.forceball_Y = obj.y;
                    forceballConfig_1.rotation = obj.rotation;
                    _this.arr_Forceball.push(forceballConfig_1);
                });
                console.log("forceball -解析");
            }
        };
        /**魔术帽 */
        MapConfig.prototype.parseMagicHat = function (magicHatObject) {
            var _this = this;
            if (magicHatObject) {
                var magicHatConfig_1;
                magicHatObject.forEach(function (magicHat) {
                    magicHatConfig_1 = new MagicHatConfig();
                    magicHatConfig_1.magicHat_X1 = magicHat.x1;
                    magicHatConfig_1.magicHat_Y1 = magicHat.y1;
                    magicHatConfig_1.rotation1 = magicHat.rotation1;
                    magicHatConfig_1.magicHat_X2 = magicHat.x2;
                    magicHatConfig_1.magicHat_Y2 = magicHat.y2;
                    magicHatConfig_1.rotation2 = magicHat.rotation2;
                    magicHatConfig_1.color = magicHat.color;
                    magicHatConfig_1.move1 = magicHat.move1;
                    magicHatConfig_1.move2 = magicHat.move2;
                    magicHatConfig_1.rotate1 = magicHat.rotate1;
                    magicHatConfig_1.rotate2 = magicHat.rotate2;
                    magicHatConfig_1.v1 = magicHat.v1;
                    magicHatConfig_1.v2 = magicHat.v2;
                    _this.arr_MagicHat.push(magicHatConfig_1);
                });
            }
        };
        /**激光 */
        MapConfig.prototype.parseLaser = function (laserObject) {
            var _this = this;
            if (laserObject) {
                var laserConfig_1;
                laserObject.forEach(function (obj) {
                    laserConfig_1 = new LaserConfig();
                    laserConfig_1.laser_X = obj.x;
                    laserConfig_1.laser_Y = obj.y;
                    laserConfig_1.isAdvanceLaser = obj.isAdvanceLaser;
                    laserConfig_1.time = obj.time;
                    laserConfig_1.move = obj.move;
                    laserConfig_1.rotation = obj.rotation;
                    _this.arr_Laser.push(laserConfig_1);
                });
                console.log("spider -解析");
            }
        };
        return MapConfig;
    }());
    Config.MapConfig = MapConfig;
    /**candy */
    var CandyConfig = /** @class */ (function () {
        /** */
        function CandyConfig() {
        }
        return CandyConfig;
    }());
    Config.CandyConfig = CandyConfig;
    /**star */
    var StarConfig = /** @class */ (function () {
        function StarConfig() {
        }
        return StarConfig;
    }());
    Config.StarConfig = StarConfig;
    /**怪物 */
    var MonsterConfig = /** @class */ (function () {
        function MonsterConfig() {
        }
        return MonsterConfig;
    }());
    Config.MonsterConfig = MonsterConfig;
    /**钩子*/
    var HookConfig = /** @class */ (function () {
        function HookConfig() {
        }
        return HookConfig;
    }());
    Config.HookConfig = HookConfig;
    /**绳子 */
    var RopeConfig = /** @class */ (function () {
        function RopeConfig() {
        }
        return RopeConfig;
    }());
    Config.RopeConfig = RopeConfig;
    /**泡泡 balloon*/
    var BalloonConfig = /** @class */ (function () {
        function BalloonConfig() {
        }
        return BalloonConfig;
    }());
    Config.BalloonConfig = BalloonConfig;
    /**锥子 balloon*/
    var KnifeConfig = /** @class */ (function () {
        function KnifeConfig() {
        }
        return KnifeConfig;
    }());
    Config.KnifeConfig = KnifeConfig;
    /**推力球 balloon*/
    var ForceBallConfig = /** @class */ (function () {
        function ForceBallConfig() {
        }
        return ForceBallConfig;
    }());
    Config.ForceBallConfig = ForceBallConfig;
    /**帽子 */
    var MagicHatConfig = /** @class */ (function () {
        function MagicHatConfig() {
        }
        return MagicHatConfig;
    }());
    Config.MagicHatConfig = MagicHatConfig;
    /**激光 laser*/
    var LaserConfig = /** @class */ (function () {
        function LaserConfig() {
        }
        return LaserConfig;
    }());
    Config.LaserConfig = LaserConfig;
    /**蜘蛛 balloon*/
    var SpiderConfig = /** @class */ (function () {
        function SpiderConfig() {
        }
        return SpiderConfig;
    }());
    Config.SpiderConfig = SpiderConfig;
    /**弹力鼓 */
    var BounceDrumConfig = /** @class */ (function () {
        function BounceDrumConfig() {
        }
        return BounceDrumConfig;
    }());
    Config.BounceDrumConfig = BounceDrumConfig;
})(Config = exports.Config || (exports.Config = {}));
},{}],8:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("../config/GameConfig");
var Balloon = /** @class */ (function () {
    function Balloon(view) {
        this.view = view;
    }
    //初始化泡泡
    Balloon.prototype.init = function (data) {
        this.isToOne = false;
        this.isFirst = false;
        this.isCollision = false;
        this.isSlow = false;
        this.balloon_CreateSprite(data.balloon_X, data.balloon_Y);
        this.balloon_FloatAnim(data.balloon_X, data.balloon_Y);
        this.balloon_BoomAnim(data.balloon_X, data.balloon_Y);
    };
    //更新状态
    Balloon.prototype.update = function (data) {
        this.isToOne = false;
        this.isFirst = false;
        this.isCollision = false;
        this.isSlow = false;
        var randNum = Math.ceil(Math.random() * 3);
        this.spBg.loadImage("gameView/paopao/balloonBg" + randNum + ".png");
        this.spBg.pos(data.balloon_X, data.balloon_Y);
        this.spBg.visible = true;
        this.sp.pos(data.balloon_X, data.balloon_Y);
        this.sp.alpha = 1;
        this.sp.visible = true;
        this.sp.zOrder = GameConfig_1.default.ZORDER_BALLON;
        this.anim1.visible = false;
        this.anim1.stop();
        this.anim1.pos(data.balloon_X, data.balloon_Y);
        // this.anim1.x -= this.sp.width/2;
        // this.anim1.y -= this.sp.height/2; 
        this.anim2.visible = false;
        this.anim2.stop();
        this.anim2.pos(data.balloon_X, data.balloon_Y);
        // this.anim2.x -= this.sp.width/2;
        // this.anim2.y -= this.sp.height/2; 
    };
    //创建泡泡精灵
    Balloon.prototype.balloon_CreateSprite = function (x, y) {
        this.sp = new Laya.Sprite();
        this.sp.loadImage("gameView/paopao/balloon.png");
        this.sp.pos(x, y);
        this.sp.pivot(this.sp.width / 2, this.sp.height / 2);
        this.view.addChild(this.sp);
        this.spBg = new Laya.Sprite();
        var randNum = Math.ceil(Math.random() * 3);
        this.spBg.loadImage("gameView/paopao/balloonBg" + randNum + ".png");
        this.spBg.pivot(this.spBg.width / 2, this.spBg.height / 2);
        this.spBg.pos(x, y);
        this.view.addChild(this.spBg);
    };
    //创建漂浮动画
    Balloon.prototype.balloon_FloatAnim = function (x, y) {
        this.anim1 = new Laya.Animation();
        this.anim1.loadAnimation("GameView/ani/Balloon.ani");
        this.anim1.pos(x, y);
        this.anim1.x -= this.sp.width / 2;
        this.anim1.y -= this.sp.height / 2;
        this.anim1.visible = false;
        this.anim1.zOrder = GameConfig_1.default.ZORDER_BALLON;
        this.view.addChild(this.anim1);
    };
    //创建爆炸动画
    Balloon.prototype.balloon_BoomAnim = function (x, y) {
        this.anim2 = new Laya.Animation();
        this.anim2.loadAnimation("GameView/ani/BalloonBoom.ani");
        this.anim2.pos(x, y);
        this.anim2.x -= this.sp.width / 2;
        this.anim2.y -= this.sp.height / 2;
        this.anim2.visible = false;
        this.anim2.zOrder = 4;
        this.view.addChild(this.anim2);
    };
    //漂浮功能
    Balloon.prototype.balloon_Float = function (candySp, arr_Body, candy2, isToOne) {
        //追踪糖果位置
        this.sp.pos(candySp.x, candySp.y);
        this.anim1.pos(candySp.x, candySp.y);
        this.anim1.x -= this.sp.width / 2;
        this.anim1.y -= this.sp.height / 2;
        //设置速度
        for (var i = 0; i < arr_Body.length; i++) {
            if (!arr_Body[i].owner) {
                continue;
            }
        }
        //如果碎糖果2
        if (candy2) {
            if (this.isFirst == true) {
                this.isFirst = false;
                this.isSlow = false;
            }
        }
        if (!this.isSlow) {
            for (var i = 0; i < arr_Body.length; i++) {
                if (Math.abs(arr_Body[i].linearVelocity.y) <= 1) {
                    this.isSlow = true;
                    arr_Body[i].linearDamping = 0.03;
                    this.candy2NeedGo(candy2, isToOne, 0.03);
                    // console.log("中立");
                }
                else if (Math.abs(arr_Body[i].linearVelocity.y) > 1 && Math.abs(arr_Body[i].linearVelocity.y) <= 4.5) {
                    arr_Body[i].linearDamping = 25;
                    this.candy2NeedGo(candy2, isToOne, 25);
                }
                else {
                    arr_Body[i].linearDamping = 18;
                    this.candy2NeedGo(candy2, isToOne, 18);
                }
            }
        }
        else {
            for (var i = 0; i < arr_Body.length; i++) {
                if (arr_Body[i].owner)
                    arr_Body[i].setVelocity({ x: arr_Body[i].linearVelocity.x * 0.9, y: -3 });
                // console.log("失败");
                if (candy2 && this.isToOne == true) {
                    var arr_Body_1 = candy2.arr_Body;
                    for (var i_1 = 0; i_1 < arr_Body_1.length; i_1++) {
                        arr_Body_1[i_1].setVelocity({ x: arr_Body_1[i_1].linearVelocity.x * 0.9, y: -3 });
                    }
                }
            }
        }
    };
    /**判断是否是融合之后的candy 进入气泡 */
    Balloon.prototype.candy2NeedGo = function (candy2, isToOne, num) {
        if (candy2 && this.isToOne == true) {
            var arr_Body = candy2.arr_Body;
            for (var i = 0; i < arr_Body.length; i++) {
                arr_Body[i].linearDamping = num;
            }
        }
    };
    //为泡泡添加点击事件，点击到则泡泡爆炸
    Balloon.prototype.balloon_ClickBoom = function (candy) {
        Laya.timer.clear(this, this.balloon_Float);
        this.sp.off(Laya.Event.MOUSE_DOWN, this, this.balloon_Boom);
        candy.arr_Body.forEach(function (body) {
            body.linearDamping = 0;
        });
        //播放戳破动画 
        this.anim1.stop();
        this.anim1.visible = false;
        this.anim2.visible = true;
        this.anim2.pos(candy.arr_Sp[0].x, candy.arr_Sp[0].y);
        this.anim2.x -= this.sp.width / 2;
        this.anim2.y -= this.sp.height / 2;
        this.anim2.play(0, false);
        this.anim2.on(Laya.Event.COMPLETE, this, this.completeBoom);
        this.sp.x = -10;
        this.sp.y = -10;
        this.isSlow = false;
        this.isToOne = false;
        candy.isExistBalloon = false;
        console.log("出现了几次泡泡爆炸");
    };
    //直接爆炸
    Balloon.prototype.balloon_Boom = function () {
        Laya.timer.clear(this, this.balloon_Float);
        this.anim2.visible = true;
        this.anim2.play(0, false);
        this.sp.visible = false;
        this.anim2.on(Laya.Event.COMPLETE, this, this.completeBoom);
    };
    //爆炸完成后设置为不可见
    Balloon.prototype.completeBoom = function () {
        this.anim2.visible = false;
    };
    Balloon.prototype.removeEvent = function () {
        this.sp.off(Laya.Event.MOUSE_DOWN, this, this.balloon_ClickBoom);
        this.anim2.off(Laya.Event.COMPLETE, this, this.completeBoom);
    };
    Balloon.prototype.clearTimer = function () {
        this.anim1.visible = false;
        this.anim2.visible = false;
        this.spBg.visible = false;
        this.sp.visible = false;
        this.sp.x = 1000;
        Laya.timer.clearAll(this);
        this.removeEvent();
    };
    /**同步移动 x,y上自加*/
    Balloon.prototype.moveTogether = function () {
        this.sp.x += 0;
        this.sp.y += 0;
        this.anim1.x += 0;
        this.anim1.y += 0;
        this.anim2.x += 0;
        this.anim2.y += 0;
    };
    return Balloon;
}());
exports.default = Balloon;
},{"../config/GameConfig":6}],9:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("../config/GameConfig");
var dic_1 = require("../Tool/dic");
var Candy = /** @class */ (function () {
    function Candy(view) {
        this.view = view;
        this.candy_JointArray = new Array();
        this.arr_Body = new Array();
        this.arr_Colider = new Array();
        this.arr_Sp = new Array();
        /**---------------糖果碎片------------------ */
        this.arr_ApartSp = new Array();
        this.arr_ApartBody = new Array();
    }
    //初始化,糖果仅有图片的更换  count绳子数量
    Candy.prototype.init = function (data, count) {
        this.isExistBalloon = false;
        this.count = count;
        this.candy_X = data.x;
        this.candy_Y = data.y;
        this.style = data.style;
        this.balloonIndex = -1;
        this.candy_CreateSprite(data.x, data.y, data.style);
        this.candy_AddBody();
        this.candy_AddCom();
        this.set("nog");
    };
    //更新状态
    Candy.prototype.update = function (data, count) {
        this.isExistBalloon = false;
        this.count = count;
        this.candy_X = data.x;
        this.candy_Y = data.y;
        this.balloonIndex = -1;
        this.style = data.style;
        this.candy_CreateSprite(data.x, data.y, data.style);
        this.arr_Sp[0].visible = true;
        this.candy_AddBody();
        // this.candy_AddColider();
        this.candy_AddCom();
        this.set("nog");
        // console.log(this.arr_Sp);
        // console.log(this.arr_Body);
    };
    //创建糖果精灵
    Candy.prototype.candy_CreateSprite = function (x, y, style) {
        for (var i = 0; i < this.count; i++) {
            if (!this.arr_Sp[i])
                this.arr_Sp[i] = new Laya.Sprite(); //不存在 才新创建
            this.arr_Sp[i].loadImage("gameView/" + this.style + ".png");
            //图片区分
            this.arr_Sp[i].zOrder = GameConfig_1.default.ZORDER_CANDY;
            this.arr_Sp[i].scaleX = 1;
            this.arr_Sp[i].scaleY = 1;
            this.arr_Sp[i].pivot(this.arr_Sp[i].width / 2, this.arr_Sp[i].height / 2);
            this.arr_Sp[i].pos(x, y);
            //没有加上舞台i
            if (i != 0)
                this.arr_Sp[i].visible = false;
            this.view.addChild(this.arr_Sp[i]);
        }
        //
        this.mouseJoint();
    };
    //添加RigidBody组件,设置刚体属性
    Candy.prototype.candy_AddBody = function () {
        var body;
        for (var i = 0; i < this.count; i++) {
            body = new Laya.RigidBody();
            body.type = "kinematic";
            body.allowSleep = false;
            body.allowRotation = true;
            body.gravityScale = GameConfig_1.default.CANDY_GRAVITY;
            body.angularDamping = GameConfig_1.default.CANDY_ANGULARDAMPING;
            body.linearDamping = GameConfig_1.default.CANDY_LINEARDAMPING;
            this.arr_Sp[i].addComponentIntance(body);
            this.arr_Body.push(body);
        }
    };
    //添加Joint组件,设置关节属性
    Candy.prototype.candy_AddJoint = function (body) {
        for (var i = 0; i < this.count; i++) {
            if (!this.arr_Sp[i].getComponent(Laya.RevoluteJoint)) {
                var joint = new Laya.RevoluteJoint();
                joint.otherBody = body;
                joint.anchor = [this.arr_Sp[i].width / 2, this.arr_Sp[i].height];
                this.arr_Sp[i].addComponentIntance(joint);
            }
        }
        // let joint = new Laya.RevoluteJoint();
        //     joint.otherBody = body;
        //     joint.anchor = [this.sp.width/2,this.sp.height/2];
        // this.sp.addComponentIntance(joint);
        // this.candy_JointArray.push(joint);
    };
    //添加colider
    Candy.prototype.candy_AddColider = function () {
        var colider = Laya.BoxCollider;
        for (var i = 0; i < this.count; i++) {
            if (!this.arr_Colider[i])
                this.arr_Colider[i] = new Laya.BoxCollider();
            this.arr_Colider[i].width = this.arr_Sp[i].width;
            this.arr_Colider[i].height = this.arr_Sp[i].height;
            this.arr_Colider[i].isSensor = true;
            this.arr_Colider[i].density = GameConfig_1.default.CANDY_DENSITY;
            // this.arr_Colider[i].density = 1000000;
            this.arr_Sp[i].addComponentIntance(this.arr_Colider[i]);
        }
    };
    //**创建结合体 需要“销毁”*/
    Candy.prototype.candy_AddCom = function () {
        var weldJoint;
        for (var i = 1; i < this.count; i++) {
            weldJoint = new Laya.WeldJoint();
            weldJoint.otherBody = this.arr_Body[i - 1];
            weldJoint.selfBody = this.arr_Body[i];
            weldJoint.anchor = [this.arr_Sp[i].width / 2, this.arr_Sp[i].height / 2];
            weldJoint.collideConnected = false;
            this.arr_Sp[i].addComponentIntance(weldJoint);
        }
    };
    /**得到糖果结合体 sprite*/
    Candy.prototype.getCandySprite = function (index) {
        var sp = this.arr_Sp[index];
        return sp;
    };
    /**得到糖果结合体 body*/
    Candy.prototype.getCandyBody = function (index) {
        var body = this.arr_Body[index];
        return body;
    };
    /**给糖果添加mouseJoint */
    Candy.prototype.mouseJoint = function () {
        var mouseJoint = new Laya.MouseJoint();
        mouseJoint.selfBody = this.arr_Body[0];
        mouseJoint.maxForce = 2000000;
        this.arr_Sp[0].addComponentIntance(mouseJoint);
    };
    /**临时创建结合体 */
    Candy.prototype.createBody = function () {
        var sp = new Laya.Sprite();
        sp.x = this.arr_Sp[0].x;
        sp.y = this.arr_Sp[0].y;
        sp.width = this.arr_Sp[0].width;
        sp.height = this.arr_Sp[0].height;
        sp.visible = false;
        sp.pivot(sp.width / 2, sp.height / 2);
        this.arr_Sp.push(sp);
        this.view.addChild(sp);
        //
        var body = new Laya.RigidBody();
        body.type = "dynamic";
        body.allowRotation = true;
        body.angularDamping = GameConfig_1.default.CANDY_ANGULARDAMPING;
        body.linearDamping = GameConfig_1.default.CANDY_LINEARDAMPING;
        sp.addComponentIntance(body);
        this.arr_Body.push(body);
        //
        var colider = new Laya.BoxCollider();
        colider.width = this.arr_Sp[this.arr_Sp.length - 1].width;
        colider.height = this.arr_Sp[this.arr_Sp.length - 1].height;
        colider.isSensor = true;
        colider.density = GameConfig_1.default.CANDY_DENSITY / 10;
        this.arr_Colider.push(colider);
        this.arr_Sp[this.arr_Sp.length - 1].addComponentIntance(colider);
        //
        var weldJoint = new Laya.WeldJoint();
        weldJoint.otherBody = this.arr_Body[this.arr_Body.length - 2];
        weldJoint.selfBody = this.arr_Body[this.arr_Body.length - 1];
        weldJoint.anchor = [this.arr_Sp[this.arr_Sp.length - 1].width / 2, this.arr_Sp[this.arr_Sp.length - 1].height / 2];
        weldJoint.collideConnected = false;
        this.arr_Sp[this.arr_Sp.length - 1].addComponentIntance(weldJoint);
    };
    /**string= nog 表示无重力   string= useg 表示有重力*/
    Candy.prototype.set = function (string) {
        this.arr_Body.forEach(function (body) {
            if (string == "nog") {
                body.gravityScale = 0;
            }
            if (string == "useg") {
                body.gravityScale = 1;
                body.type = "dynamic";
            }
        });
        ////
    };
    /**糖果合并 动画 */
    Candy.prototype.ToOneAnimation = function () {
        this.aniToOne = new Laya.Animation();
        var url = [];
        for (var i = 0; i < 6; i++) {
            url.push("gameView/toOne/" + (i + 1) + ".png");
        }
        this.aniToOne.pivot(313 / 2, 298 / 2);
        this.aniToOne.loadImages(url);
        this.aniToOne.interval = 60;
        this.aniToOne.x = -500;
        this.aniToOne.y = -500;
        this.view.addChild(this.aniToOne);
    };
    Candy.prototype.playAni = function (x, y) {
        this.aniToOne.x = x;
        this.aniToOne.y = y;
        this.aniToOne.play(0, false);
        this.aniToOne.on(Laya.Event.COMPLETE, this, this.aniOver);
    };
    Candy.prototype.aniOver = function () {
        this.aniToOne.x = -500;
        this.aniToOne.y = -500;
    };
    /** 糖果 被吃*/
    Candy.prototype.candyDestroy = function (x, y) {
        var rigidBody;
        console.log(this.arr_Sp);
        this.arr_Sp.forEach(function (sp) {
            // console.log(sp);
            rigidBody = sp.getComponents(Laya.RigidBody);
            if (rigidBody)
                rigidBody[0].destroy();
            rigidBody = sp.getComponents(Laya.RevoluteJoint);
            if (rigidBody)
                rigidBody[0].destroy();
        });
        Laya.timer.loop(1, this, this.nearMonster, [x, y]);
    };
    /**糖果断开 */
    Candy.prototype.candyDestroyJoint = function () {
        var rigidBody;
        console.log(this.arr_Sp);
        this.arr_Sp.forEach(function (sp) {
            rigidBody = sp.getComponents(Laya.RevoluteJoint);
            if (rigidBody)
                rigidBody[0].destroy();
        });
    };
    /**靠近怪物 */
    Candy.prototype.nearMonster = function (x, y) {
        var dic = dic_1.default.countDic_Object({ "x": this.arr_Sp[0].x, "y": this.arr_Sp[0].y }, { x: x, y: y });
        var addx = 5 * dic_1.default.rotationDeal(this.arr_Sp[0].x, this.arr_Sp[0].y, x, y, "cos");
        var addy = 5 * dic_1.default.rotationDeal(this.arr_Sp[0].x, this.arr_Sp[0].y, x, y, "sin");
        this.arr_Sp.forEach(function (sp) {
            sp.x += addx;
            sp.y += addy;
            sp.scaleX -= 0.01;
            sp.scaleY -= 0.01;
        });
        if (dic < 4) {
            this.arr_Sp.forEach(function (sp) {
                sp.visible = false;
                sp.x = 10000;
            });
        }
    };
    Candy.prototype.clearTimer = function () {
        Laya.timer.clear(this, this.nearMonster);
        this.arr_Sp.forEach(function (sp) {
            sp.removeSelf();
            var body = sp.getComponents(Laya.RigidBody);
            var joint = sp.getComponents(Laya.RevoluteJoint);
            var jointW = sp.getComponents(Laya.WeldJoint);
            if (body && body[0]) {
                body[0].destroy();
            }
            if (joint && joint[0]) {
                joint[0].destroy();
            }
            if (jointW && jointW[0]) {
                jointW[0].destroy();
            }
        });
        this.arr_Body = [];
        this.candy_JointArray = [];
        this.arr_Sp = [];
        /**----------------糖果碎片--------- */
        if (this.arr_ApartSp != []) {
            this.arr_ApartSp.forEach(function (apartsp) {
                apartsp.removeSelf();
                var body = apartsp.getComponents(Laya.RigidBody);
                if (body && body[0]) {
                    body[0].destroy();
                }
            });
            this.arr_ApartSp = [];
            this.arr_ApartBody = [];
        }
    };
    //初始化糖果碎片
    Candy.prototype.createCandyApart = function () {
        for (var i = 0; i < 5; i++) {
            //精灵
            var sprite = new Laya.Sprite();
            sprite.loadImage("gameView/becomeApart" + (i + 1) + ".png");
            sprite.pivot(sprite.width / 2, sprite.height / 2);
            sprite.visible = false;
            sprite.zOrder = 3;
            this.view.addChild(sprite);
            this.arr_ApartSp.push(sprite);
            //刚体
            var body = new Laya.RigidBody();
            body.type = "static";
            sprite.addComponentIntance(body);
            this.arr_ApartBody.push(body);
        }
    };
    //糖果变成碎片
    Candy.prototype.becomeApart = function (x, y) {
        for (var i = 0; i < 5; i++) {
            this.arr_ApartSp[i].pos(x, y);
            this.arr_ApartSp[i].visible = true;
            this.arr_ApartBody[i].type = "dynamic";
            var currX = void 0;
            if (Math.random() < 0.5) {
                currX = Math.random() * (-3);
            }
            else {
                currX = Math.random() * 5;
            }
            this.arr_ApartBody[i].setVelocity({ x: currX, y: -Math.random() * 3 - 2 });
            //销毁糖果
            this.arr_Body.forEach(function (body) {
                body.destroy();
            });
            this.arr_Sp.forEach(function (sp) {
                sp.x = 1000;
            });
            this.arr_Body = [];
        }
    };
    //////////////////////////////超能力调用方法
    Candy.prototype.superSetV = function (vX, vY) {
        this.arr_Body.forEach(function (body) {
            body.setVelocity({ x: vX, y: vY });
        });
    };
    /**同步移动方法 */
    Candy.prototype.moveTogether = function () {
        this.arr_Sp.forEach(function (sp) {
            sp.x += 0;
            sp.y += 0;
        });
        if (this.arr_ApartSp) {
            this.arr_ApartSp.forEach(function (sp) {
                sp.x += 0;
                sp.y += 0;
            });
        }
    };
    /**碎糖果接近 融合 candyOneSp是 arr_sp[0]   sprite*/
    Candy.prototype.CandytoOne = function (candyOneSp) {
        var weldJoint = new Laya.WeldJoint();
        weldJoint.otherBody = candyOneSp.getComponents(Laya.RigidBody)[0];
        weldJoint.selfBody = this.arr_Body[0];
        weldJoint.anchor = [candyOneSp.width / 2, candyOneSp.height / 2];
        weldJoint.collideConnected = false;
        candyOneSp.loadImage("gameView/candy.png");
        this.arr_Sp[0].pos(candyOneSp.x, candyOneSp.y);
        this.arr_Sp[0].visible = false;
        this.arr_Sp[0].addComponentIntance(weldJoint);
    };
    /**给糖果赋值速度 */
    Candy.prototype.setApplyForce = function (obj1, obj2) {
        console.log(this.arr_Body.length);
        this.arr_Body.forEach(function (body) {
            body.applyForce(obj1, obj2);
        });
    };
    /**给糖果赋值速度 */
    Candy.prototype.setApplyV = function (obj2) {
        this.arr_Body.forEach(function (body) {
            body.applyLinearImpulseToCenter(obj2);
        });
    };
    return Candy;
}());
exports.default = Candy;
},{"../Tool/dic":5,"../config/GameConfig":6}],10:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ForceBall = /** @class */ (function () {
    function ForceBall(view) {
        this.view = view;
    }
    //初始化推力球,根据当前关调整旋转得角度
    ForceBall.prototype.init = function (data) {
        this.isApplyForce_candy2 = false;
        this.isApplyForce = false;
        this.forceball_CreateSprite(data.forceball_X, data.forceball_Y, data.rotation);
        this.forceball_ApplyForceAnim(data.forceball_X, data.forceball_Y, data.rotation);
        this.Rotation = data.rotation;
        this.isPlayAnim2_1 = true;
    };
    //更新状态
    ForceBall.prototype.update = function (data) {
        this.isApplyForce_candy2 = false;
        this.isApplyForce = false;
        this.sp.visible = true;
        this.sp.rotation = data.rotation;
        this.sp.pos(data.forceball_X, data.forceball_Y);
        this.anim1.rotation = data.rotation;
        this.Rotation = data.rotation;
        this.anim1.visible = true;
        this.anim1.pos(data.forceball_X, data.forceball_Y);
        this.isPlayAnim2_1 = true;
    };
    //创建推力球精灵,作为点击模板
    ForceBall.prototype.forceball_CreateSprite = function (x, y, rotation) {
        this.sp = new Laya.Sprite();
        this.sp.loadImage("gameView/forceballBg.png");
        this.sp.pos(x, y);
        this.sp.pivot(this.sp.width / 2, this.sp.height / 2);
        this.sp.visible = true;
        this.view.addChild(this.sp);
        this.spRect = new Laya.Sprite();
        this.spRect.graphics.drawRect(0, -250, this.sp.width, 250, "#a24");
        this.spRect.alpha = 0.2;
        this.sp.addChild(this.spRect);
        this.sp.rotation = rotation;
    };
    //创建推力球动画
    ForceBall.prototype.forceball_ApplyForceAnim = function (x, y, rotation) {
        this.anim1 = new Laya.Animation();
        this.anim1.pos(x, y);
        this.anim1.loadAnimation("GameView/ani/ForceBall.ani");
        this.anim1.rotation = rotation;
        this.anim1.visible = true;
        this.view.addChild(this.anim1);
        this.anim2_1 = new Laya.Animation();
        this.anim2_1.loadAnimation("GameView/ani/ForceBalloon1.ani");
        this.anim2_1.visible = true;
        this.anim1.addChild(this.anim2_1);
        this.anim2_2 = new Laya.Animation();
        this.anim2_2.loadAnimation("GameView/ani/ForceBalloon2.ani");
        this.anim2_2.visible = true;
        this.anim1.addChild(this.anim2_2);
    };
    //发动推力功能，给糖果施加一个力
    ForceBall.prototype.forceball_applyForce = function (candy, balloonArray, candy2) {
        this.anim1.play(0, false);
        if (this.isPlayAnim2_1) {
            this.anim2_1.play(0, false);
            this.isPlayAnim2_1 = false;
        }
        else {
            this.anim2_2.play(0, false);
            this.isPlayAnim2_1 = true;
        }
        this.publicApplyForce(candy, balloonArray, 1);
        if (candy2)
            this.publicApplyForce(candy2, balloonArray, 2);
    };
    //**施加力 1 是主糖果 2是副糖果*/
    ForceBall.prototype.publicApplyForce = function (candy, balloonArray, index) {
        var isApplyForce = this.isApplyForce;
        if (index == 2)
            isApplyForce = this.isApplyForce_candy2;
        if (isApplyForce) {
            for (var i = 0; i < candy.arr_Body.length; i++) {
                var Vx = Math.sin(this.Rotation / 180 * Math.PI) / Math.abs(candy.arr_Sp[0].x - this.sp.x) * 1200;
                var Vy = -Math.cos(this.Rotation / 180 * Math.PI) / Math.abs(candy.arr_Sp[0].y - this.sp.y) * 1200;
                var currVx = candy.arr_Body[0].linearVelocity.x;
                var currVy = candy.arr_Body[0].linearVelocity.y;
                candy.arr_Body[i].setVelocity({ x: Vx + currVx, y: Vy + currVy });
                if (candy.isExistBalloon) {
                    for (var i_1 = 0; i_1 < balloonArray.length; i_1++) {
                        if (balloonArray[i_1].isCollision) {
                            balloonArray[i_1].isSlow = false;
                        }
                    }
                }
            }
        }
    };
    //移除事件
    ForceBall.prototype.removeEvent = function () {
        this.sp.off(Laya.Event.MOUSE_DOWN, this, this.forceball_applyForce);
    };
    /**假销毁 */
    ForceBall.prototype.destroy = function () {
        this.sp.visible = false;
        this.sp.x = 100000;
        this.anim1.visible = false;
        this.anim1.x = 100000;
    };
    return ForceBall;
}());
exports.default = ForceBall;
},{}],11:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("../config/GameConfig");
var Hook = /** @class */ (function () {
    function Hook(view) {
        this.view = view;
    }
    //初始化,"hook1"为钩子风格1，"hook2"为钩子风格2，检测糖果是否在设定范围内，如果在就生成新的绳子
    Hook.prototype.init = function (data, size) {
        this.isDown = false;
        this.isCreate = false;
        this.setValue(data, size);
        this.hook_CreateSprite(data.hook_X, data.hook_Y, data.style);
        if (data.style == "hook2") /////////没有图片
         {
            this.createSpp();
        }
        this.createSilder();
    };
    //更新状态
    Hook.prototype.update = function (data, size) {
        this.isCreate = false;
        this.sp.visible = true;
        this.imgTop.visible = true;
        this.setValue(data, size);
        this.setHookTop(data.hook_X, data.hook_Y);
        if (data.style == "hook2") /////////没有图片
         {
            if (this.spp) {
                this.spp.visible = true;
                this.spp.width = this.size * 2;
                this.spp.height = this.size * 2;
                this.spp.pivot(this.spp.width / 2, this.spp.height / 2);
                this.spp.pos(0, 0);
            }
            else {
                this.createSpp();
            }
        }
        else {
            if (this.spp) {
                this.spp.visible = false;
            }
        }
        this.sp.pos(data.hook_X, data.hook_Y);
        this.createSilder();
    };
    //创建圈
    Hook.prototype.createSpp = function () {
        this.spp = new Laya.Image();
        this.spp.loadImage("gameView/ropeRage.png");
        this.spp.width = this.size * 2;
        this.spp.height = this.size * 2;
        this.spp.pivot(this.spp.width / 2, this.spp.height / 2);
        this.sp.addChild(this.spp);
    };
    Hook.prototype.setValue = function (data, size) {
        this.hook_X = data.hook_X;
        this.hook_Y = data.hook_Y;
        this.style = data.style;
        this.size = size;
        this.rotation = data.rotation;
        this.length = data.length;
        this.percent = data.percent;
    };
    //创建钩子精灵
    Hook.prototype.hook_CreateSprite = function (x, y, style) {
        this.sp = new Laya.Sprite();
        //hook图片
        this.setHookBottom();
        //Hook顶部
        this.setHookTop(x, y);
        this.sp.pivot(this.sp.width / 2, this.sp.height / 2);
        // this.sp.loadImage("gameView/"+"hook1"+".png");
        // this.sp.loadImage("gameView/"+style+".png");
        this.sp.zOrder = GameConfig_1.default.ZORDER_ROPEPOINT;
        this.sp.pos(x, y);
        this.view.addChild(this.sp);
    };
    Hook.prototype.setHookBottom = function () {
        var img = new Laya.Image();
        img.loadImage("gameView/" + "hook1" + ".png");
        img.pivot(50 / 2, 43 / 2);
        img.pos(0, 0);
        this.sp.width = img.width;
        this.sp.height = img.height;
        this.sp.addChild(img);
        return img;
    };
    Hook.prototype.setHookTop = function (x, y) {
        if (!this.imgTop) {
            this.imgTop = new Laya.Image();
            this.view.addChild(this.imgTop);
        }
        this.imgTop.skin = "gameView/hookTop.png";
        this.imgTop.size(20, 19);
        this.imgTop.pivot(20 / 2, 10 / 2);
        this.imgTop.zOrder = GameConfig_1.default.ZORDER_HOOK_TOP;
        this.imgTop.pos(0, 0);
        this.imgTop.pos(x + 2, y - 3);
    };
    /**创建滑动条 */
    Hook.prototype.createSilder = function () {
        if (this.length) {
            if (!this.sp_Silder)
                this.createImage();
            else {
                this.arr_img[0].visible = true;
                this.arr_img[1].visible = true;
                this.arr_img[2].visible = true;
                this.setSilder();
                this.setImgValue();
            }
            this.addEvent();
            // this.addMouseJoint();
        }
    };
    /**创建滑动图片 */
    Hook.prototype.createImage = function () {
        this.sp_Silder = new Laya.Sprite();
        this.arr_img = new Array();
        this.arr_img[0] = new Laya.Image();
        this.arr_img[1] = new Laya.Image();
        this.arr_img[2] = new Laya.Image();
        //左
        this.arr_img[0].loadImage("gameView/hookslider_root1.png");
        this.arr_img[0].width = 24;
        this.arr_img[0].height = 49;
        //中
        this.arr_img[1].loadImage("gameView/hooksliderbg.png");
        //右
        this.arr_img[2].loadImage("gameView/hookslider_root2.png");
        this.arr_img[2].width = 24;
        //属性设置
        this.setImgValue();
        //
        this.view.addChild(this.sp_Silder);
        this.setSilder();
    };
    /**设置属性值 */
    Hook.prototype.setImgValue = function () {
        var len = this.length - this.arr_img[0].width * 2; //滑动背景
        var x = 0;
        this.arr_img[1].width = len;
        for (var i = 0; i < this.arr_img.length; i++) {
            this.sp_Silder.addChild(this.arr_img[i]);
            if (this.arr_img[i - 1]) {
                x += this.arr_img[i - 1].width - 3;
                this.arr_img[i].x = x;
            }
            else {
                this.arr_img[i].x = 0;
            }
        }
    };
    /***只是滚动条属性 */
    Hook.prototype.setSilder = function () {
        this.sp_Silder.pivot(this.arr_img[0].width, this.arr_img[0].height / 2);
        this.sp_Silder.pos(this.sp.x, this.sp.y);
        this.sp_Silder.rotation = this.rotation;
        this.imgTop.size(68, 68);
        this.imgTop.pivot(this.imgTop.width / 2 + 2, this.imgTop.height / 2 - 4);
        this.imgTop.skin = "gameView/hookslider.png";
        if (this.rotation == 0) {
            this.sp.x += ((this.length - this.arr_img[0].width * 2) * this.percent);
            this.imgTop.x += ((this.length - this.arr_img[0].width * 2) * this.percent);
        }
        else {
            this.sp.y -= (this.length - this.arr_img[0].width * 2) * (this.percent);
            this.imgTop.y -= (this.length - this.arr_img[0].width * 2) * (this.percent);
        }
    };
    /**设置绑定绳子 */
    Hook.prototype.setRopePoint = function (ropePoint) {
        this.ropePoint = ropePoint;
        Laya.timer.loop(1, this, this.followHook);
    };
    Hook.prototype.followHook = function () {
        if (this.ropePoint.sp.alpha < 1) {
            Laya.timer.clear(this, this.followHook);
        }
        // this.ropePoint.sp.x = this.imgTop.x;
        // this.ropePoint.sp.y = this.imgTop.y;
        if (this.rotation == 0) {
            // console.log(Math.abs(this.ropePoint.sp.x - this.imgTop.x));
            if (Math.abs(this.ropePoint.sp.x - this.imgTop.x) > 5) {
                var dic = this.ropePoint.sp.x - this.imgTop.x;
                if (dic > 0) { //左
                    this.ropePoint.sp.getComponents(Laya.RigidBody)[0].linearVelocity = { x: -20, y: 0 };
                }
                else { //右
                    this.ropePoint.sp.getComponents(Laya.RigidBody)[0].linearVelocity = { x: 20, y: 0 };
                }
            }
            else {
                this.ropePoint.sp.getComponents(Laya.RigidBody)[0].linearVelocity = { x: 0, y: 0 };
            }
        }
        else {
            if (Math.abs(this.ropePoint.sp.y - this.imgTop.y) > 5) {
                var dic = this.ropePoint.sp.y - this.imgTop.y;
                if (dic > 0) { //上
                    this.ropePoint.sp.getComponents(Laya.RigidBody)[0].linearVelocity = { x: 0, y: -20 };
                }
                else { //下
                    this.ropePoint.sp.getComponents(Laya.RigidBody)[0].linearVelocity = { x: 0, y: 20 };
                }
            }
            else {
                this.ropePoint.sp.getComponents(Laya.RigidBody)[0].linearVelocity = { x: 0, y: 0 };
            }
        }
    };
    /**添加事件 */
    Hook.prototype.addEvent = function () {
        this.imgTop.on(Laya.Event.MOUSE_DOWN, this, this.imgDown);
        Laya.stage.on(Laya.Event.MOUSE_MOVE, this, this.followMouse);
        Laya.stage.on(Laya.Event.MOUSE_UP, this, this.mouseUp);
    };
    /**跟随鼠标 */
    Hook.prototype.followMouse = function () {
        if (!this.isDown)
            return;
        // console.log(this.imgTop.y);
        var mX = Laya.stage.mouseX - GameConfig_1.default.CaX;
        var mY = Laya.stage.mouseY - GameConfig_1.default.CaY;
        var dicX = mX - this.hook_X;
        var dicY = mY - this.hook_Y;
        if (this.rotation == -90 || this.rotation == 0) {
            dicX = dicX * Math.cos(this.rotation / 360 * 2 * Math.PI);
            dicY = -dicY * Math.sin(this.rotation / 360 * 2 * Math.PI);
            if (mX >= this.hook_X && mX <= this.hook_X + this.length - this.arr_img[0].width * 2) {
                this.imgTop.x = this.hook_X + dicX + 3;
                this.sp.x = this.hook_X + dicX;
            }
            if (mY <= this.hook_Y && mY >= this.hook_Y - this.length + this.arr_img[0].width * 2) {
                this.imgTop.y = this.hook_Y + dicY - 3;
                this.sp.y = this.hook_Y + dicY;
            }
        }
        else {
            // if(this.rem_x == undefined || this.rem_y == undefined)
            // {
            //     this.rem_x = mX;
            //     this.rem_y = mY;
            //     return ;
            // }
            // if(Math.pow(mX - this.rem_x,2) > Math.pow(mY - this.rem_y,2))
            // {
            //     dicX = dicX * Math.cos(this.rotation/360*2*Math.PI);
            //     dicY = dicX * Math.tan(this.rotation/360*2*Math.PI);
            //     if()   
            //     {
            //         this.imgTop.x = this.hook_X + dicX;
            //         this.sp.x = this.hook_X + dicX;
            //         this.imgTop.y = this.hook_Y + dicY;
            //         this.sp.y = this.hook_Y + dicY;
            //     }
            // }   
            // else
            // {
            //     dicY = dicY * Math.sin(this.rotation/360*2*Math.PI);
            //     dicX = dicY / Math.tan(this.rotation/360*2*Math.PI);
            //     this.imgTop.x = this.hook_X + dicX;
            //     this.sp.x = this.hook_X + dicX;
            //     this.imgTop.y = this.hook_Y + dicY;
            //     this.sp.y = this.hook_Y + dicY; 
            // }
        }
    };
    /**鼠标抬起*/
    Hook.prototype.mouseUp = function () {
        this.isDown = false;
        this.rem_x = undefined;
        this.rem_y = undefined;
    };
    /**图片被点下 */
    Hook.prototype.imgDown = function () {
        this.isDown = true;
    };
    /**销毁处理 */
    Hook.prototype.hookDestroy = function () {
        this.sp.visible = false;
        this.isCreate = false;
        this.sp.x = 10000;
        this.imgTop.visible = false;
        this.isDown = false;
        this.length = undefined;
        this.rotation = undefined;
        this.imgTop.skin = "gameView/hookTop.png";
        this.imgTop.size(20, 19);
        // this.spp.pos(0,0);
        if (this.arr_img)
            this.arr_img.forEach(function (img) {
                img.visible = false;
            });
        Laya.timer.clear(this, this.followMouse);
        Laya.timer.clear(this, this.followHook);
    };
    return Hook;
}());
exports.default = Hook;
},{"../config/GameConfig":6}],12:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Tool_1 = require("../Tool/Tool");
var Knife = /** @class */ (function () {
    function Knife(view) {
        this.view = view;
    }
    //初始化锥子,根据当前关调整旋转得角度
    Knife.prototype.init = function (data) {
        this.isCollision = false;
        this.knife_CreateSprite(data.knife_X, data.knife_Y, data.style, data.rotation);
        if (data.v != 0) {
            Laya.timer.frameLoop(1, this, this.knife_RotateBySelf, [data.v]);
        }
        if (data.move[0]) {
            this.knife_X = this.sp.x;
            this.knife_Y = this.sp.y;
            this.isGoing = true;
            Laya.timer.frameLoop(1, this, this.knife_MoveBySelf, [data.move]);
        }
    };
    //更新状态
    Knife.prototype.update = function (data) {
        this.isCollision = false;
        this.knife.skin = "gameView/" + data.style + ".png";
        this.knife.pivot(this.knife.width / 2, this.knife.height / 2);
        this.knife.pos(0, 0);
        this.sp.pos(data.knife_X, data.knife_Y);
        this.sp.rotation = data.rotation;
        this.sp.visible = true;
        if (data.v != 0) {
            Laya.timer.frameLoop(1, this, this.knife_RotateBySelf, [data.v]);
        }
        if (data.move.length != 0) {
            this.knife_X = this.sp.x;
            this.knife_Y = this.sp.y;
            this.isGoing = true;
            Laya.timer.frameLoop(1, this, this.knife_MoveBySelf, [data.move]);
        }
    };
    //创建锥子精灵
    Knife.prototype.knife_CreateSprite = function (x, y, style, rotation) {
        this.sp = new Laya.Sprite();
        this.knife = new Laya.Image();
        this.sp.width = this.knife.width;
        this.sp.height = this.sp.height;
        this.sp.visible = true;
        this.sp.pos(x, y);
        this.sp.pivot(this.sp.width / 2, this.sp.height / 2);
        this.knife.skin = "gameView/" + style + ".png";
        this.knife.pivot(this.knife.width / 2, this.knife.height / 2);
        this.knife.pos(0, 0);
        this.sp.rotation = rotation;
        this.sp.addChild(this.knife);
        this.view.addChild(this.sp);
    };
    //锥子一直自转
    Knife.prototype.knife_RotateBySelf = function (v) {
        this.sp.rotation += v;
    };
    //锥子来回移动
    Knife.prototype.knife_MoveBySelf = function (move) {
        var x_Add = Tool_1.default.rotationDeal(this.knife_X, this.knife_Y, move[0], move[1], "cos");
        var y_Add = Tool_1.default.rotationDeal(this.knife_X, this.knife_Y, move[0], move[1], "sin");
        if (this.isGoing) {
            this.sp.x += x_Add;
            this.sp.y += y_Add;
            if (x_Add == 0) {
                if (this.sp.y == move[1]) {
                    this.isGoing = false;
                }
            }
            else if (y_Add == 0) {
                if (this.sp.x == move[0]) {
                    this.isGoing = false;
                }
            }
            else {
                if (Math.abs(this.sp.x - move[0]) < 0.3) {
                    this.sp.x = move[0];
                    this.sp.y = move[1];
                    this.isGoing = false;
                }
            }
        }
        else {
            this.sp.x -= x_Add;
            this.sp.y -= y_Add;
            if (x_Add == 0) {
                if (this.sp.y == this.knife_Y) {
                    this.isGoing = true;
                }
            }
            else if (y_Add == 0) {
                if (this.sp.x == this.knife_X) {
                    this.isGoing = true;
                }
            }
            else {
                if (Math.abs(this.sp.x - this.knife_X) < 0.3) {
                    this.sp.x = this.knife_X;
                    this.sp.y = this.knife_Y;
                    this.isGoing = true;
                }
            }
        }
    };
    Knife.prototype.clearTimer = function () {
        Laya.timer.clearAll(this);
    };
    /**假销毁 */
    Knife.prototype.destroy = function () {
        this.sp.visible = false;
        this.sp.x = -1000;
    };
    /** 移动同步 */
    Knife.prototype.moveTogether = function () {
        this.sp.x += 0;
        this.sp.y += 0;
    };
    return Knife;
}());
exports.default = Knife;
},{"../Tool/Tool":4}],13:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Tool_1 = require("../Tool/Tool");
var Laser = /** @class */ (function () {
    function Laser(view) {
        this.view = view;
    }
    //初始化激光
    Laser.prototype.init = function (data) {
        this.isCollision = false;
        this.isAdvanceLaser = data.isAdvanceLaser;
        this.laser_CreateLaser(data.laser_X, data.laser_Y, data.time, data.rotation);
        if (data.move[0]) {
            this.laser_X = this.spRect.x;
            this.laser_Y = this.spRect.y;
            this.isGoing = true;
            Laya.timer.frameLoop(1, this, this.laser_MoveBySelf, [data.move]);
        }
    };
    //更新
    Laser.prototype.update = function (data) {
        this.isCollision = false;
        this.spRect.visible = true;
        this.isAdvanceLaser = data.isAdvanceLaser;
        this.spRect.rotation = data.rotation;
        this.spRect.pos(data.laser_X, data.laser_Y);
        if (this.isAdvanceLaser) {
            this.anim.visible = true;
            this.anim.play(0, true);
            this.isAdvanceLaser = false;
        }
        else {
            this.anim.visible = false;
            this.anim.stop();
            this.isAdvanceLaser = true;
        }
        Laya.timer.frameLoop(data.time * 60, this, this.laser_startLaser);
        if (data.move[0]) {
            this.laser_X = this.spRect.x;
            this.laser_Y = this.spRect.y;
            this.isGoing = true;
            Laya.timer.frameLoop(1, this, this.laser_MoveBySelf, [data.move]);
        }
    };
    //创建激光范围和激光动画
    Laser.prototype.laser_CreateLaser = function (x, y, time, rotation) {
        this.spRect = new Laya.Sprite();
        this.spRect.loadImage("gameView/laser1.png");
        this.spRect.pivot(this.spRect.width / 2, this.spRect.height / 2);
        this.spRect.rotation = rotation;
        this.spRect.pos(x, y);
        this.view.addChild(this.spRect);
        this.anim = new Laya.Animation();
        this.anim.loadAnimation("GameView/ani/Laser.ani");
        this.spRect.addChild(this.anim);
        if (this.isAdvanceLaser) {
            this.anim.visible = true;
            this.anim.play(0, true);
            this.isAdvanceLaser = false;
        }
        else {
            this.anim.visible = false;
            this.anim.stop();
            this.isAdvanceLaser = true;
        }
        Laya.timer.frameLoop(time * 60, this, this.laser_startLaser);
    };
    //开始发射激光
    Laser.prototype.laser_startLaser = function () {
        if (this.isAdvanceLaser) {
            this.anim.visible = true;
            this.anim.play(0, true);
            this.isAdvanceLaser = false;
        }
        else {
            this.anim.visible = false;
            this.anim.stop();
            this.isAdvanceLaser = true;
        }
    };
    //激光来回移动
    Laser.prototype.laser_MoveBySelf = function (move) {
        var x_Add = Tool_1.default.rotationDeal(this.laser_X, this.laser_Y, move[0], move[1], "cos");
        var y_Add = Tool_1.default.rotationDeal(this.laser_X, this.laser_Y, move[0], move[1], "sin");
        if (this.isGoing) {
            this.spRect.x += x_Add;
            this.spRect.y += y_Add;
            if (x_Add == 0) {
                if (this.spRect.y == move[1]) {
                    this.isGoing = false;
                }
            }
            else if (y_Add == 0) {
                if (this.spRect.x == move[0]) {
                    this.isGoing = false;
                }
            }
            else {
                if (Math.abs(this.spRect.x - move[0]) < 0.3) {
                    this.spRect.x = move[0];
                    this.spRect.y = move[1];
                    this.isGoing = false;
                }
            }
        }
        else {
            this.spRect.x -= x_Add;
            this.spRect.y -= y_Add;
            if (x_Add == 0) {
                if (this.spRect.y == this.laser_Y) {
                    this.isGoing = true;
                }
            }
            else if (y_Add == 0) {
                if (this.spRect.x == this.laser_X) {
                    this.isGoing = true;
                }
            }
            else {
                if (Math.abs(this.spRect.x - this.laser_X) < 0.3) {
                    this.spRect.x = this.laser_X;
                    this.spRect.y = this.laser_Y;
                    this.isGoing = true;
                }
            }
        }
    };
    Laser.prototype.clearTimer = function () {
        Laya.timer.clearAll(this);
    };
    /**假销毁 */
    Laser.prototype.destroy = function () {
        this.spRect.visible = false;
        this.spRect.x = 100000;
        this.anim.stop();
        this.anim.visible = false;
    };
    return Laser;
}());
exports.default = Laser;
},{"../Tool/Tool":4}],14:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Tool_1 = require("../Tool/Tool");
/**
 * 魔术帽
 */
var MagicHat = /** @class */ (function () {
    function MagicHat(view) {
        this.view = view;
    }
    /***帽子初始化 */
    MagicHat.prototype.init = function (data) {
        //更新旋转点
        this.rotate1 = data.rotate1;
        this.rotate2 = data.rotate2;
        //更新图片旋转角度
        this.rotation1 = data.rotation1;
        this.rotation2 = data.rotation2;
        //创建帽子精灵
        this.createSprite1(data.magicHat_X1, data.magicHat_Y1, data.color, data.rotation1, data.rotate1);
        this.createSprite2(data.magicHat_X2, data.magicHat_Y2, data.color, data.rotation2, data.rotate2);
        //判断移动是否为空
        if (data.move1[0]) {
            this.magicHat_X1 = this.sp1.x;
            this.magicHat_Y1 = this.sp1.y;
            this.isGoing1 = true;
            Laya.timer.frameLoop(1, this, this.magicHat1_MoveBySelf, [data.move1, this.magicHat_X1, this.magicHat_Y1, this.sp1]);
        }
        //判断移动是否为空
        if (data.move2[0]) {
            this.magicHat_X2 = this.sp2.x;
            this.magicHat_Y2 = this.sp2.y;
            this.isGoing2 = true;
            Laya.timer.frameLoop(1, this, this.magicHat2_MoveBySelf, [data.move2, this.magicHat_X2, this.magicHat_Y2, this.sp2]);
        }
        //判断旋转点是否为空
        if (data.rotate1 != 0) {
            Laya.timer.frameLoop(1, this, this.magicHat_RotateFollowPoint, [this.sp1, data.v1]);
        }
        //判断旋转点是否为空
        if (data.rotate2 != 0) {
            Laya.timer.frameLoop(1, this, this.magicHat_RotateFollowPoint, [this.sp2, data.v2]);
        }
    };
    /**帽子更新 */
    MagicHat.prototype.update = function (data) {
        //更新旋转点
        this.rotate1 = data.rotate1;
        this.rotate2 = data.rotate2;
        //更新图片旋转角度
        this.rotation1 = data.rotation1;
        this.rotation2 = data.rotation2;
        //更新帽子1
        this.sp1.visible = true;
        this.sp1.loadImage("gameView/" + data.color + ".png");
        this.sp1.pos(data.magicHat_X1, data.magicHat_Y1);
        this.sp1.rotation = data.rotation1;
        if (data.rotate1 != 0) {
            this.sp1.pivot(this.sp1.width / 2, data.rotate1);
            //this.sp1.scaleY=-1;
        }
        else {
            this.sp1.pivot(this.sp1.width / 2, this.sp1.height / 2);
        }
        //更新帽子2
        this.sp2.visible = true;
        this.sp2.loadImage("gameView/" + data.color + ".png");
        this.sp2.pos(data.magicHat_X2, data.magicHat_Y2);
        this.sp2.rotation = data.rotation2;
        if (data.rotate2 != 0) {
            this.sp2.pivot(this.sp2.width / 2, data.rotate2);
            //this.sp2.scaleY=-1;
        }
        else {
            this.sp2.pivot(this.sp2.width / 2, this.sp2.height / 2);
        }
        //判断移动是否为空
        if (data.move1[0]) {
            this.magicHat_X1 = this.sp1.x;
            this.magicHat_Y1 = this.sp1.y;
            this.isGoing1 = true;
            Laya.timer.frameLoop(1, this, this.magicHat1_MoveBySelf, [data.move1, this.magicHat_X1, this.magicHat_Y1, this.sp1]);
        }
        //判断移动是否为空
        if (data.move2[0]) {
            this.magicHat_X2 = this.sp2.x;
            this.magicHat_Y2 = this.sp2.y;
            this.isGoing2 = true;
            Laya.timer.frameLoop(1, this, this.magicHat2_MoveBySelf, [data.move2, this.magicHat_X2, this.magicHat_Y2, this.sp2]);
        }
        //判断旋转点是否为空
        if (data.rotate1 != 0) {
            Laya.timer.frameLoop(1, this, this.magicHat_RotateFollowPoint, [this.sp1, data.v1]);
        }
        //判断旋转点是否为空
        if (data.rotate2 != 0) {
            Laya.timer.frameLoop(1, this, this.magicHat_RotateFollowPoint, [this.sp2, data.v2]);
        }
        console.log(this.sp1);
    };
    //创建帽子1
    MagicHat.prototype.createSprite1 = function (x, y, color, rotation, rotate) {
        this.sp1 = new Laya.Sprite();
        this.sp1.loadImage("gameView/" + color + ".png");
        this.sp1.rotation = rotation;
        this.sp1.pos(x, y);
        if (rotate != 0) {
            this.sp1.pivot(this.sp1.width / 2, rotate);
            //this.sp1.scaleY=-1;
        }
        else {
            this.sp1.pivot(this.sp1.width / 2, this.sp1.height / 2);
        }
        this.view.addChild(this.sp1);
    };
    //创建帽子2
    MagicHat.prototype.createSprite2 = function (x, y, color, rotation, rotate) {
        this.sp2 = new Laya.Sprite();
        this.sp2.loadImage("gameView/" + color + ".png");
        this.sp2.rotation = rotation;
        this.sp2.pos(x, y);
        this.sp2.pivot(this.sp2.width / 2, this.sp2.height / 2);
        if (rotate != 0) {
            this.sp2.pivot(this.sp2.width / 2, rotate);
            //this.sp2.scaleY=-1;
        }
        else {
            this.sp2.pivot(this.sp2.width / 2, this.sp2.height / 2);
        }
        this.view.addChild(this.sp2);
    };
    //帽子1来回移动
    MagicHat.prototype.magicHat1_MoveBySelf = function (move, x, y, sp) {
        var x_Add = Tool_1.default.rotationDeal(x, y, move[0], move[1], "cos");
        var y_Add = Tool_1.default.rotationDeal(x, y, move[0], move[1], "sin");
        if (this.isGoing1) {
            sp.x += x_Add;
            sp.y += y_Add;
            if (x_Add == 0) {
                if (sp.y == move[1]) {
                    this.isGoing1 = false;
                }
            }
            else if (y_Add == 0) {
                if (sp.x == move[0]) {
                    this.isGoing1 = false;
                }
            }
            else {
                if (Math.abs(sp.x - move[0]) < 0.3) {
                    sp.x = move[0];
                    sp.y = move[1];
                    this.isGoing1 = false;
                }
            }
        }
        else {
            sp.x -= x_Add;
            sp.y -= y_Add;
            if (x_Add == 0) {
                if (sp.y == y) {
                    this.isGoing1 = true;
                }
            }
            else if (y_Add == 0) {
                if (sp.x == x) {
                    this.isGoing1 = true;
                }
            }
            else {
                if (Math.abs(sp.x - x) < 0.3) {
                    sp.x = x;
                    sp.y = y;
                    this.isGoing1 = true;
                }
            }
        }
    };
    //帽子2来回移动
    MagicHat.prototype.magicHat2_MoveBySelf = function (move, x, y, sp) {
        var x_Add = Tool_1.default.rotationDeal(x, y, move[0], move[1], "cos");
        var y_Add = Tool_1.default.rotationDeal(x, y, move[0], move[1], "sin");
        if (this.isGoing2) {
            sp.x += x_Add;
            sp.y += y_Add;
            if (x_Add == 0) {
                if (sp.y == move[1]) {
                    this.isGoing2 = false;
                }
            }
            else if (y_Add == 0) {
                if (sp.x == move[0]) {
                    this.isGoing2 = false;
                }
            }
            else {
                if (Math.abs(sp.x - move[0]) < 0.3) {
                    sp.x = move[0];
                    sp.y = move[1];
                    this.isGoing2 = false;
                }
            }
        }
        else {
            sp.x -= x_Add;
            sp.y -= y_Add;
            if (x_Add == 0) {
                if (sp.y == y) {
                    this.isGoing2 = true;
                }
            }
            else if (y_Add == 0) {
                if (sp.x == x) {
                    this.isGoing2 = true;
                }
            }
            else {
                if (Math.abs(sp.x - x) < 0.3) {
                    sp.x = x;
                    sp.y = y;
                    this.isGoing2 = true;
                }
            }
        }
    };
    //帽子旋转
    MagicHat.prototype.magicHat_RotateFollowPoint = function (sp, v) {
        sp.rotation += v;
    };
    /**清除定时器 */
    MagicHat.prototype.clearTimer = function () {
        Laya.timer.clearAll(this);
    };
    /**假销毁 */
    MagicHat.prototype.destroy = function () {
        this.sp1.visible = false;
        this.sp1.x = 100000;
        this.sp1.scaleY = 1;
        this.sp2.visible = false;
        this.sp2.x = 100000;
        this.sp2.scaleY = 1;
    };
    return MagicHat;
}());
exports.default = MagicHat;
},{"../Tool/Tool":4}],15:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("../config/GameConfig");
var Monster = /** @class */ (function () {
    function Monster(monsterConfig, view) {
        this.ani = new Laya.Animation();
        this.view = view;
        this.init(monsterConfig);
        this.monsterAction(GameConfig_1.default.ANI_MONSTER_STAND, true);
        this.ani.on(Laya.Event.COMPLETE, this, this.aniChange);
        this.sp.addChild(this.ani);
    }
    /**动画状态转化 */
    Monster.prototype.aniChange = function () {
        if (this.aniStr == GameConfig_1.default.ANI_MONSTER_HAPPYE) {
            this.monsterAction(GameConfig_1.default.ANI_MONSTER_STAND, true);
        }
    };
    Monster.prototype.init = function (monsterConfig) {
        this.x = monsterConfig.monster_X;
        this.y = monsterConfig.monster_Y;
        this.monster_CreateSprite(this.x, this.y);
    };
    Monster.prototype.update = function (monsterConfig) {
        this.x = monsterConfig.monster_X;
        this.y = monsterConfig.monster_Y;
        this.sp.x = this.x;
        this.sp.y = this.y;
        this.monsterAction(GameConfig_1.default.ANI_MONSTER_STAND, true);
    };
    Monster.prototype.monster_CreateSprite = function (x, y) {
        this.sp = new Laya.Sprite();
        this.sp.width = 150;
        this.sp.height = 200;
        this.sp.pivot(this.sp.width / 2, this.sp.height / 2);
        this.sp.pos(x, y);
        this.view.addChild(this.sp);
    };
    /***
     * 怪物行为
     *
     */
    Monster.prototype.monsterAction = function (aName, isLoop) {
        if (!isLoop)
            isLoop = false;
        this.aniStr = aName;
        this.ani.loadImages(this.aniUrls(aName, this.getAniLength(aName)));
        this.ani.interval = 50;
        this.ani.play(0, isLoop);
    };
    /**
     * 创建一组动画的url数组（美术资源地址数组）
     * @param aniName  动作的名称，用于生成url
     * @param length   动画最后一帧的索引值，
     */
    Monster.prototype.aniUrls = function (aniName, length) {
        var urls = [];
        for (var i = 1; i <= length; i++) {
            //动画资源路径要和动画图集打包前的资源命名对应起来
            urls.push("gameView/monster/" + aniName + i + ".png");
        }
        return urls;
    };
    Monster.prototype.getAniLength = function (aName) {
        switch (aName) {
            case GameConfig_1.default.ANI_MONSTER_STAND: return 17;
            case GameConfig_1.default.ANI_MONSTER_SAD: return 15;
            case GameConfig_1.default.ANI_MONSTER_EAT: return 9;
            case GameConfig_1.default.ANI_MONSTER_HAPPYE: return 19;
            case GameConfig_1.default.ANI_MONSTER_OPEN: return 10;
            case GameConfig_1.default.ANI_MONSTER_GIVE_ME: return 26;
            case GameConfig_1.default.ANI_MONSTER_ACTION: return 43;
            case GameConfig_1.default.ANI_MONSTER_GIVE_ME2: return 20;
        }
    };
    return Monster;
}());
exports.default = Monster;
},{"../config/GameConfig":6}],16:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var RopePoint_1 = require("./RopePoint");
var GameConfig_1 = require("../config/GameConfig");
var dic_1 = require("../Tool/dic");
var Rope = /** @class */ (function () {
    function Rope(view) {
        this.isCuted = false;
        this.view = view;
        this.ropeView = new Laya.Sprite();
        //         // //测试
        // let img = new Laya.Sprite();
        // img.loadImage('gameView/gameBtn/regame.png');
        // img.pos(240,400);
        // let RigidBody = new Laya.RigidBody();
        // RigidBody.type = "kinematic";
        // // RigidBody.allowSleep = false;
        // RigidBody.allowRotation = true;
        // img.addComponentIntance(RigidBody);
        // this.ropeView.addChild(img);
        view.addChild(this.ropeView);
        this.arr_ImgRope = new Array();
        this.ropePointsArray = new Array();
        this.jointsArray = new Array();
        this.arr_RemPos = new Array();
    }
    //创建一根绳子，根据位置和长度创建
    Rope.prototype.init = function (hookX, HookY, ropeLength, hookStyle) {
        this.hookStyle = hookStyle;
        this.createMultiRopePoint(hookX, HookY, ropeLength, hookStyle);
    };
    //自动连接绳子
    Rope.prototype.initRopeHook2 = function (hookX, hookY, candyX, candyY, hookStyle) {
        this.hookStyle = hookStyle;
        this.createRopeHook2(hookX, hookY, candyX, candyY);
    };
    /**碎开的糖果才需要 */
    Rope.prototype.setHookIndex = function (arr) {
        this.hookIndex = arr;
    };
    Rope.prototype.createRopeHook2 = function (hookX, hookY, candyX, candyY) {
        var dic = dic_1.default.countDic_Object({ "x": hookX, "y": hookY }, { "x": candyX, "y": candyY });
        var count = Math.floor(dic / GameConfig_1.default.ROPE_DIC);
        var x_Add = GameConfig_1.default.ROPE_DIC * this.rotationDeal(hookX, hookY, candyX, candyY, "cos");
        var y_Add = GameConfig_1.default.ROPE_DIC * this.rotationDeal(hookX, hookY, candyX, candyY, "sin");
        for (var i = 0; i < count + 1; i++) {
            var ropePoint = void 0;
            if (i == 0) {
                ropePoint = new RopePoint_1.default(hookX + x_Add * i, hookY + i * y_Add, "kinematic", i, null, this.rotateRopePoint_2(hookX, hookY, candyX, candyY));
                // this.rotateRopePoint_2(ropePoint);
                ropePoint.addView(this.ropeView);
            }
            else {
                ropePoint = new RopePoint_1.default(hookX + x_Add * (i - 1), hookY + (i - 1) * y_Add, "dynamic", i, null, this.rotateRopePoint_2(hookX, hookY, candyX, candyY));
                //**添加Joint */
                ropePoint.ropePoint_AddJoint(this.ropePointsArray[i - 1]);
                // this.rotateRopePoint_2(ropePoint);
                ropePoint.addView(this.ropeView);
            }
            if (ropePoint.sp.getComponent(Laya.RevoluteJoint)) {
                this.jointsArray.push(ropePoint.sp.getComponent(Laya.RevoluteJoint));
            }
            this.ropePointsArray.push(ropePoint);
        }
        // this.rotateRopePoint();
    };
    /**记录位置 */
    Rope.prototype.remPos = function (x, y, rotation) {
        var Pos;
        Pos = {};
        Pos.x = x;
        Pos.y = y;
        Pos.rotation = rotation;
        this.arr_RemPos.push(Pos);
    };
    // update(hookX,HookY,ropeLength):void{
    //     // this.init(hookX,HookY,ropeLength);
    // }
    Rope.prototype.createMultiRopePoint = function (hookX, hookY, ropeLength, hookStyle) {
        var ropeDic;
        if (hookStyle == "hook3") { //弹力剩
            ropeDic = GameConfig_1.default.ROPE_JUMP_DIC;
        }
        else {
            ropeDic = GameConfig_1.default.ROPE_DIC;
        }
        //第一个节点与最后 一个节点的距离
        //创建多少个节点 30个像素一个间隔
        var disPer = ropeLength / ropeDic;
        //每一个节点水平方向偏移量
        var x_Add = ropeDic * this.rotationDeal(hookX, hookY, hookX, hookY + ropeLength, "cos");
        //每一个节点竖直方向偏移量
        var y_Add = ropeDic * this.rotationDeal(hookX, hookY, hookX, hookY + ropeLength, "sin");
        // if(disPer >= 60) {console.log("距离不够");}   
        for (var i = 0; i < disPer + 1; i++) {
            var ropePoint = void 0;
            if (i == 0) {
                ropePoint = new RopePoint_1.default(hookX + x_Add * i, hookY + i * y_Add, "kinematic", i, hookStyle);
                ropePoint.addView(this.ropeView);
            }
            else {
                ropePoint = new RopePoint_1.default(hookX + x_Add * (i - 1), hookY + (i - 1) * y_Add, "dynamic", i, hookStyle);
                ropePoint.ropePoint_AddJoint(this.ropePointsArray[i - 1]);
                ropePoint.addView(this.ropeView);
                this.view.addChild(ropePoint.sp);
            }
            if (ropePoint.sp.getComponent(Laya.RevoluteJoint)) {
                this.jointsArray.push(ropePoint.sp.getComponent(Laya.RevoluteJoint));
            }
            this.ropePointsArray.push(ropePoint);
        }
    };
    Rope.prototype.rotateRopePoint = function () {
        for (var i = 1; i < this.ropePointsArray.length; i++) {
            var cos = this.rotationDeal(this.ropePointsArray[i - 1].sp.x, this.ropePointsArray[i - 1].sp.y, this.ropePointsArray[i].sp.x, this.ropePointsArray[i].sp.y, "cos");
            var sin = this.rotationDeal(this.ropePointsArray[i - 1].sp.x, this.ropePointsArray[i - 1].sp.y, this.ropePointsArray[i].sp.x, this.ropePointsArray[i].sp.y, "sin");
            var rotation = void 0;
            if (cos >= 0 && sin > 0) {
                rotation = 180 / Math.PI * Math.acos(cos) - 90;
            }
            else if (cos < 0 && sin >= 0) {
                rotation = 180 / Math.PI * Math.acos(cos) - 90;
            }
            else if (cos <= 0 && sin < 0) {
                rotation = 90 - 180 / Math.PI * Math.acos(cos);
            }
            else if (cos > 0 && sin <= 0) {
                rotation = 90 - 180 / Math.PI * Math.acos(cos);
            }
            this.ropePointsArray[i].sp.rotation = rotation;
        }
    };
    /**重开 */
    Rope.prototype.rePlay = function (arr_rem, style) {
        // if(disPer >= 60) {console.log("距离不够");}   
        for (var i = 0; i < arr_rem.length; i++) {
            var ropePoint = void 0;
            if (i == 0) {
                ropePoint = new RopePoint_1.default(arr_rem[i].x, arr_rem[i].y, "kinematic", i, style, arr_rem[i].rotation);
                ropePoint.addView(this.ropeView);
            }
            else {
                ropePoint = new RopePoint_1.default(arr_rem[i].x, arr_rem[i].y, "dynamic", i, style, arr_rem[i].rotation);
                ropePoint.ropePoint_AddJoint(this.ropePointsArray[i - 1]);
                ropePoint.addView(this.ropeView);
            }
            if (ropePoint.sp.getComponent(Laya.RevoluteJoint)) {
                this.jointsArray.push(ropePoint.sp.getComponent(Laya.RevoluteJoint));
            }
            this.ropePointsArray.push(ropePoint);
        }
    };
    Rope.prototype.getRemRope = function () {
        var x;
        var y;
        var rotation;
        for (var i = 0; i < this.ropePointsArray.length; i++) {
            x = this.ropePointsArray[i].sp.x;
            y = this.ropePointsArray[i].sp.y;
            rotation = this.ropePointsArray[i].sp.rotation;
            this.remPos(x, y, rotation);
        }
        return this.arr_RemPos;
    };
    Rope.prototype.rotateRopePoint_2 = function (x, y, X, Y) {
        var cos = this.rotationDeal(x, y, X, Y, "cos");
        var sin = this.rotationDeal(x, y, X, Y, "sin");
        var rotation;
        if (cos >= 0 && sin > 0) {
            rotation = 180 / Math.PI * Math.acos(cos) - 90;
        }
        else if (cos < 0 && sin >= 0) {
            rotation = 180 / Math.PI * Math.acos(cos) - 90;
        }
        else if (cos <= 0 && sin < 0) {
            rotation = 90 - 180 / Math.PI * Math.acos(cos);
        }
        else if (cos > 0 && sin <= 0) {
            rotation = 90 - 180 / Math.PI * Math.acos(cos);
        }
        return rotation;
    };
    /**连接糖果 */
    Rope.prototype.connectCandy = function (candy, index) {
        var ropePoint = this.ropePointsArray[this.ropePointsArray.length - 1];
        var joint = new Laya.RevoluteJoint();
        joint.otherBody = ropePoint.sp.getComponents(Laya.RigidBody)[0];
        if (index == -1) {
            candy.createBody();
            index = candy.arr_Sp.length - 1;
        }
        joint.selfBody = candy.getCandyBody(index);
        // if(!joint.selfBody)
        // {
        //     joint.selfBody = candy.getCandyBody(index);
        // }
        joint.anchor = [candy.getCandySprite(index).width / 2, candy.getCandySprite(index).height / 2];
        candy.getCandySprite(index).addComponentIntance(joint);
        // console.log("-------------------");
        // console.log("maxlen::" + (this.ropePointsArray.length-1)*6);
        // console.log("ropePont::" + this.ropePointsArray.length);
        // console.log("spHeight::" + this.ropePointsArray[0].sp.height);
        //测试
        if (this.hookStyle == "hook3") {
            this.ropePointsArray[0].ropeJoint_Last(candy, (this.ropePointsArray.length - 3) * (GameConfig_1.default.ROPE_DIC) / 2.2);
            return;
        }
        this.ropePointsArray[0].ropeJoint_Last(candy, (this.ropePointsArray.length - 3) * (GameConfig_1.default.ROPE_DIC + 3));
        // console.log(this.ropePointsArray[0].sp);
    };
    /**角度处理函数
     *
     *  传入 fx,fy,sx,sy
     *
     *  获取正选 或余弦  或正切
     *
     *  返回 对应值
     *
     *  sin  对边/斜边
     *  cos  临边/斜边
     *  tan  对边/临边
     *
     *  方向注释
     *  以f为中心，
     *  获取 与s连线和水平线正方向的夹角的
     *      cos
     *      sin
     *
     * */
    Rope.prototype.rotationDeal = function (fx, fy, sx, sy, getString) {
        /**斜边 */
        var c = Math.sqrt(Math.pow(fx - sx, 2) + Math.pow(fy - sy, 2));
        /**临边 */
        var a = sx - fx;
        /**对边 */
        var b = sy - fy;
        if (getString == "sin") {
            //console.log("#sin ==" + (b/c));
            return (b / c);
        }
        else if (getString == "cos") {
            //console.log("#cos ==" + (a/c));
            return (a / c);
        }
        else {
            //console.log("#tan ==" + (b/a));//对边 比 临边 
            return (b / a);
        }
    };
    /**绳子断掉 */
    Rope.prototype.ropeCuted = function () {
        this.isCuted = true;
        this.ropePointsArray.forEach(function (point) {
            point.sp.getComponents(Laya.BoxCollider)[0].density = 1;
        });
        Laya.timer.loop(16, this, this.pointDestroy);
    };
    /**渐变 */
    Rope.prototype.pointDestroy = function () {
        this.ropePointsArray.forEach(function (point) {
            point.sp.alpha -= 0.03;
        });
        if (this.ropePointsArray[0].sp.alpha <= 0) {
            this.ropePointsArray.forEach(function (RopePoint) {
                RopePoint.sp.getComponents(Laya.RigidBody)[0].destroy(); //对断掉的绳子进行优化
            });
            Laya.timer.clear(this, this.pointDestroy);
        }
    };
    /**断开 */
    Rope.prototype.ropeJointDestroy = function () {
        var joint = this.ropePointsArray[0].sp.getComponents(Laya.RopeJoint);
        if (joint) {
            joint[0].destroy();
        }
    };
    Rope.prototype.clearTimer = function () {
        Laya.timer.clear(this, this.pointDestroy);
        this.ropePointsArray.forEach(function (point) {
            point.sp.removeSelf();
            var body = point.sp.getComponents(Laya.RigidBody);
            var joint = point.sp.getComponents(Laya.RevoluteJoint);
            var colider = point.sp.getComponents(Laya.BoxCollider);
            if (body && body[0]) {
                body[0].destroy();
            }
            if (joint && joint[0]) {
                joint[0].destroy();
            }
        });
        this.ropePointsArray = [];
        this.jointsArray = [];
        this.isCuted = false;
    };
    // /**跟随节点*/
    // public followPoint() : void 
    // {
    //     let nextPoint : RopePoint;
    //     let lastPoint : RopePoint;
    //     let index;
    //     let dic;
    //     for(let i=0;i<this.arr_ImgRope.length;i++)
    //     {
    //         index = i+1;
    //         lastPoint = this.ropePointsArray[index];
    //         nextPoint = this.ropePointsArray[index+1];
    //         dic = Dic.countDic_Object(lastPoint.sp,nextPoint.sp);
    //         this.arr_ImgRope[i].x = 0 + dic*this.rotationDeal(lastPoint.sp.x,lastPoint.y,nextPoint.x,nextPoint.y,"cos");
    //         this.arr_ImgRope[i].y = 0 + dic*this.rotationDeal(lastPoint.sp.x,lastPoint.y,nextPoint.x,nextPoint.y,"sin");
    //     }
    // }
    /**绳子同步移动 */
    Rope.prototype.moveTogether = function () {
        this.ropePointsArray.forEach(function (RopePoint) {
            RopePoint.sp.x += 0;
            RopePoint.sp.y += 0;
        });
    };
    return Rope;
}());
exports.default = Rope;
},{"../Tool/dic":5,"../config/GameConfig":6,"./RopePoint":17}],17:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("../config/GameConfig");
var RopePoint = /** @class */ (function () {
    function RopePoint(x, y, type, index, style, rotation) {
        this.style = style;
        this.index = index;
        this.init({ "x": x, "y": y, "type": type, "rotation": rotation });
    }
    //初始化,创建绳子节点
    RopePoint.prototype.init = function (data) {
        this.x = data.x;
        this.y = data.y;
        this.ropePoint_CreateSprite(data.x, data.y, data.rotation);
        this.ropePoint_AddBody(data.type);
        this.ropePoint_AddCollider();
    };
    //更新状态
    RopePoint.prototype.update = function (data) {
        this.x = data.x;
        this.y = data.y;
        this.sp.pos(data.x, data.y);
    };
    RopePoint.prototype.isCanMove = function (hook) {
        if (hook.length > 0) {
            this.ropePoint_AddMouseJoint();
        }
    };
    //创建节点精灵
    RopePoint.prototype.ropePoint_CreateSprite = function (x, y, rotation) {
        this.sp = new Laya.Sprite();
        this.sp.width = GameConfig_1.default.ROPE_WIDTH;
        this.sp.height = 12;
        if (this.index != 0)
            this.sp.mouseThrough = true;
        // this.sp.zOrder = 10;
        // this.sp.loadImage("gameView/candy.png");
        if (rotation) {
            this.sp.rotation = rotation;
        }
        if (this.index == 0) {
            this.sp.width = 5;
            this.sp.height = 5;
        }
        else if (this.index < 2) {
            this.sp.visible = false;
        }
        if (this.index != 0)
            this.sp.loadImage("gameView/rope" + (Math.floor(this.index % 16 / 8) + 1) + ".png");
        this.sp.pivot(this.sp.width / 2, this.sp.height / 2);
        this.sp.pos(x, y);
        // Laya.stage.addChild(this.sp);
    };
    /**
        * 添加到舞台
     */
    RopePoint.prototype.addView = function (view) {
        view.addChild(this.sp);
    };
    //添加RigidBody组件,设置刚体属性
    RopePoint.prototype.ropePoint_AddBody = function (type) {
        var ropePoint_A = GameConfig_1.default.ROPE_POINT_ANGULARDAMPING;
        var ropePoint_L = GameConfig_1.default.ROPE_POINT_LINEARDAMOING;
        if (this.style == "hook3") {
            ropePoint_A = GameConfig_1.default.ROPE_JUMP__POINT_ANGULARDAMPING;
            ropePoint_L = GameConfig_1.default.ROPE_JUMP__POINT_LINEARDAMOING;
        }
        this.body = new Laya.RigidBody();
        this.body.type = type;
        this.body.allowSleep = false;
        this.body.allowRotation = true;
        this.body.angularDamping = ropePoint_A;
        this.body.linearDamping = ropePoint_L;
        this.sp.addComponentIntance(this.body);
    };
    //添加Collider组件,设置碰撞体属性
    RopePoint.prototype.ropePoint_AddCollider = function () {
        var density = GameConfig_1.default.ROPE_POINT_DENSITY;
        if (this.style == "hook3") {
            density = GameConfig_1.default.ROPE_JUMP__POINT_DENSITY;
        }
        var colider = new Laya.BoxCollider();
        colider.width = this.sp.width;
        colider.height = this.sp.height;
        colider.density = density;
        colider.isSensor = false;
        if (this.index == 0) {
            colider.width = 2;
            colider.height = 2;
            colider.isSensor = false;
        }
        this.sp.addComponentIntance(colider);
    };
    //添加Joint组件,设置关节属性
    RopePoint.prototype.ropePoint_AddJoint = function (lastRopePoint) {
        if (!lastRopePoint)
            return;
        var joint = new Laya.RevoluteJoint();
        joint.otherBody = lastRopePoint.sp.getComponent(Laya.RigidBody);
        joint.anchor = [this.sp.width / 2, this.sp.height / 2];
        joint.collideConnected = false;
        this.sp.addComponentIntance(joint);
    };
    ///////////////测试
    RopePoint.prototype.ropeJoint_Last = function (candys, maxLeng) {
        var index;
        for (var i = 0; i < candys.arr_Sp.length; i++) {
            if (!candys.arr_Sp[i].getComponents(Laya.RopeJoint)) {
                index = i;
                break;
            }
        }
        var joint = new Laya.RopeJoint();
        joint.otherBody = candys.arr_Sp[index].getComponents(Laya.RigidBody)[0];
        joint.otherAnchor = [candys.arr_Sp[index].width / 2, candys.arr_Sp[index].height / 2];
        joint.selfBody = this.body;
        joint.selfAnchor = [this.sp.width / 2, this.sp.height / 2];
        joint.maxLength = maxLeng;
        this.sp.addComponentIntance(joint);
    };
    /**添加鼠标JOint */
    RopePoint.prototype.ropePoint_AddMouseJoint = function () {
        var mouseJoint = new Laya.MouseJoint();
        mouseJoint.anchor = [this.sp.width / 2, this.sp.height / 2];
        mouseJoint.maxForce = 1000000;
        mouseJoint.frequency = 10;
        mouseJoint.damping = 0;
        this.sp.addComponentIntance(mouseJoint);
        this.addEvent();
    };
    RopePoint.prototype.addEvent = function () {
        this.sp.on(Laya.Event.MOUSE_DOWN, this, this.mouseDown);
        this.sp.on(Laya.Event.CLICK, this, function (e) {
            console.log(e);
        });
        // Laya.stage.on(Laya.Event.MOUSE_UP,this,this.mouseUp);
        // Laya.stage.on(Laya.Event.CLICK,this,function(e){
        // 	console.log(e);
        // });
    };
    RopePoint.prototype.mouseUp = function () {
        this.body.type = "kinematic";
    };
    RopePoint.prototype.mouseDown = function () {
        this.body.type = "dynamic";
    };
    return RopePoint;
}());
exports.default = RopePoint;
},{"../config/GameConfig":6}],18:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("../config/GameConfig");
var Tool_1 = require("../Tool/Tool");
var dic_1 = require("../Tool/dic");
var Spider = /** @class */ (function () {
    function Spider(view) {
        this.view = view;
        this.speedX = GameConfig_1.default.SPIDER_SPEEDX;
    }
    //初始化蜘蛛
    Spider.prototype.init = function (data, call, callBack) {
        this.ani = new Laya.Animation();
        this.ropeIndex = 1;
        this.call = call;
        this.callBack = callBack;
        this.spider_CreateSprite(data.spider_X, data.spider_Y);
    };
    //更新状态
    Spider.prototype.update = function (data) {
        this.initStatus();
        this.sp.pos(data.spider_X, data.spider_Y);
        this.sp.visible = true;
        Laya.timer.clear(this, this.followCandy);
    };
    //创建蜘蛛精灵
    Spider.prototype.spider_CreateSprite = function (x, y) {
        this.sp = new Laya.Sprite();
        this.img = new Laya.Image();
        this.img.loadImage("gameView/spider/spider1.png");
        this.sp.pos(x, y);
        this.sp.width = 65;
        this.sp.height = 62;
        this.sp.pivot(this.sp.width / 2, this.sp.height / 2);
        this.sp.addChild(this.img);
        this.sp.addChild(this.ani);
        this.sp.zOrder = 100;
        this.view.addChild(this.sp);
    };
    //停止寻找
    Spider.prototype.stopEatCandy = function () {
        this.img.visible = true;
        this.ani.visible = false;
        Laya.timer.clear(this, this.spider_FollowRope);
        Laya.timer.loop(16, this, this.down);
    };
    //**糖凋落 */
    Spider.prototype.down = function () {
        this.sp.y += this.speedX;
        this.speedX += 0.098;
        if (this.sp.y > 1600) {
            this.sp.x = 10000;
            this.initStatus();
        }
    };
    Spider.prototype.initStatus = function () {
        this.speedX = GameConfig_1.default.SPIDER_SPEEDX;
        this.ropeIndex = 0;
        this.ani.stop();
        this.ani.visible = false;
        this.img.visible = true;
        Laya.timer.clear(this, this.down);
    };
    /**发现糖果 isnow true*/
    Spider.prototype.foundCandy = function (rope, candy, isNo) {
        this.ropeIndex = 1;
        this.mov = 0;
        this.candy = candy;
        this.rope = rope;
        this.currentPoint = rope.ropePointsArray[this.ropeIndex];
        this.nextPoint = rope.ropePointsArray[this.ropeIndex + 1];
        if (!isNo)
            this.starMove();
        // Laya.timer.loop(10,this,this.spider_FollowRope);
    };
    Spider.prototype.starMove = function () {
        this.monsterAction(GameConfig_1.default.ANI_FOUND_CANDY, false);
        this.ani.on(Laya.Event.COMPLETE, this, this.moveStart);
    };
    Spider.prototype.moveStart = function () {
        if (this.ropeIndex == 1) {
            this.monsterAction(GameConfig_1.default.ANI_TOWORD_CANDY, true);
            Laya.timer.loop(10, this, this.spider_FollowRope);
        }
    };
    //蜘蛛爬绳
    Spider.prototype.spider_FollowRope = function () {
        this.countSpPos();
        this.mov += GameConfig_1.default.SPIDER_SPEED;
        if (this.mov >= 1) {
            this.mov = 0;
            ++this.ropeIndex;
            if (this.ropeIndex == this.rope.ropePointsArray.length) {
                Laya.timer.clear(this, this.spider_FollowRope);
                //偷取糖果
                //绳子断裂
                if (this.rope.ropePointsArray[this.rope.ropePointsArray.length - 1].sp.getComponents(Laya.RevoluteJoint))
                    this.rope.ropePointsArray[this.rope.ropePointsArray.length - 1].sp.getComponents(Laya.RevoluteJoint)[0].destroy();
                this.rope.ropeCuted();
                var ropejoint = this.rope.ropePointsArray[0].sp.getComponents(Laya.RopeJoint);
                if (ropejoint)
                    ropejoint[0].destroy();
                //
                this.candy.arr_Body[0].applyLinearImpulseToCenter({ x: 0, y: -8 });
                this.monsterAction(GameConfig_1.default.ANI_GET_CANDY, false);
                Laya.timer.loop(16, this, this.followCandy);
                this.callBack.call(this.call);
                // this.ropeIndex = 1;
                return;
            }
            this.currentPoint = this.rope.ropePointsArray[this.ropeIndex];
            if (this.rope.ropePointsArray[this.ropeIndex + 1])
                this.nextPoint = this.rope.ropePointsArray[this.ropeIndex + 1];
        }
    };
    /**计算当前位置 */
    Spider.prototype.countSpPos = function () {
        var current = {};
        var next = {};
        current.x = this.currentPoint.sp.x;
        current.y = this.currentPoint.sp.y;
        if (this.currentPoint == this.nextPoint) {
            next.x = this.candy.arr_Sp[0].x;
            next.y = this.candy.arr_Sp[0].y;
        }
        else {
            next.x = this.nextPoint.sp.x;
            next.y = this.nextPoint.sp.y;
        }
        var sin = Tool_1.default.rotationDeal(current.x, current.y, next.x, next.y, "sin");
        var cos = Tool_1.default.rotationDeal(current.x, current.y, next.x, next.y, "cos");
        var rotation = Tool_1.default.rotateRopePoint_2(current.x, current.y, next.x, next.y);
        var dic = dic_1.default.countDic_Object({ x: current.x, y: current.y }, { x: next.x, y: next.y });
        //复制
        dic = Math.floor(dic) * this.mov;
        this.sp.rotation = rotation;
        this.sp.x = current.x + dic * cos;
        this.sp.y = current.y + dic * sin;
    };
    /**跟随糖果 */
    Spider.prototype.followCandy = function () {
        this.sp.x = this.candy.arr_Sp[0].x;
        this.sp.y = this.candy.arr_Sp[0].y;
        if (this.candy.arr_Sp[0].y > 1330)
            Laya.timer.clear(this, this.followCandy);
    };
    Spider.prototype.hookDestroy = function () {
        this.sp.visible = false;
        this.sp.x = 10000;
    };
    /**清楚定时器  扫尾*/
    Spider.prototype.clearTimer = function () {
        Laya.timer.clear(this, this.spider_FollowRope);
        Laya.timer.clear(this, this.down);
        Laya.timer.clear(this, this.followCandy);
        //数据初始化
        this.sp.visible = false;
        this.ropeIndex = 0;
        this.rope = null;
    };
    /***
     * 蜘蛛行为
     *
     */
    Spider.prototype.monsterAction = function (aName, isLoop) {
        if (!isLoop)
            isLoop = false;
        this.ani.loadImages(this.aniUrls(aName, this.getAniLength(aName)));
        this.ani.play(0, isLoop);
        this.img.visible = false;
        this.ani.visible = true;
        // this.sp.visible = false;
    };
    /**
     * 创建一组动画的url数组（美术资源地址数组）
     * @param aniName  动作的名称，用于生成url
     * @param length   动画最后一帧的索引值，
     */
    Spider.prototype.aniUrls = function (aniName, length) {
        var urls = [];
        for (var i = 1; i <= length; i++) {
            //动画资源路径要和动画图集打包前的资源命名对应起来
            urls.push("gameView/spider/" + aniName + i + ".png");
        }
        return urls;
    };
    Spider.prototype.getAniLength = function (aName) {
        switch (aName) {
            case GameConfig_1.default.ANI_FOUND_CANDY: return 7;
            case GameConfig_1.default.ANI_TOWORD_CANDY: return 4;
            case GameConfig_1.default.ANI_GET_CANDY: return 2;
        }
    };
    return Spider;
}());
exports.default = Spider;
},{"../Tool/Tool":4,"../Tool/dic":5,"../config/GameConfig":6}],19:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Star = /** @class */ (function () {
    function Star(view) {
        this.view = view;
    }
    //初始化,"star1"为普通星星，"star2"为有时间寿命得星星
    Star.prototype.init = function (data) {
        this.rotation = 0;
        this.isDestroy = false;
        this.sp = new Laya.Sprite();
        this.sp.width = 40;
        this.sp.height = 40;
        this.interval = data.interval;
        this.sp.pivot(this.sp.width / 2, this.sp.height / 2);
        this.sp.zOrder = 100;
        this.star_CreateAnim(data.star_X, data.star_Y, data.style, data.interval);
        this.sp.x = data.star_X;
        this.sp.y = data.star_Y;
        this.sp.zOrder = 100;
        this.style = data.style;
        /* if(data.move[0]){
             this.star_X=this.sp.x;
             this.star_Y=this.sp.y;
             this.isGoing=true;
             Laya.timer.frameLoop(1,this,this.star_MoveBySelf,[data.move]);
         }*/
    };
    //更新状态
    Star.prototype.update = function (data) {
        this.rotation = 0;
        this.isDestroy = false;
        this.sp.visible = true;
        this.sp.x = data.star_X;
        this.sp.y = data.star_Y;
        this.style = data.style;
        this.anim.visible = true;
        this.anim.play(0, true);
        this.anim.interval = data.interval;
        this.anim2.visible = false;
        this.startToCount();
        if (data.style != "star2") {
            this.anim3.visible = false;
        }
    };
    //创建星星动画
    Star.prototype.star_CreateAnim = function (x, y, style, interval) {
        this.anim = new Laya.Animation();
        this.anim.loadAnimation("GameView/ani/Star.ani");
        this.anim.interval = interval;
        this.anim.play(0, true);
        this.anim.width = this.sp.width;
        this.anim.height = this.sp.height;
        this.anim.x = this.sp.width / 2;
        this.anim.y = this.sp.height / 2;
        this.anim2 = new Laya.Animation();
        this.anim2.loadAnimation("GameView/ani/StarDestroy.ani");
        this.anim2.on(Laya.Event.COMPLETE, this, this.destroyed);
        this.anim2.width = this.sp.width;
        this.anim2.height = this.sp.height;
        this.anim2.x = this.sp.width / 2;
        this.anim2.y = this.sp.height / 2;
        this.anim2.visible = false;
        //创建时间寿命动画1
        this.anim3 = new Laya.Animation();
        this.anim3.width = this.sp.width;
        this.anim3.height = this.sp.height;
        this.anim3.x = this.sp.width / 2;
        this.anim3.y = this.sp.height / 2;
        this.anim3.loadAnimation("GameView/ani/StarTime1.ani");
        this.anim3.visible = false;
        this.sp.addChild(this.anim);
        this.sp.addChild(this.anim2);
        this.sp.addChild(this.anim3);
        this.view.addChild(this.sp);
    };
    Star.prototype.startToCount = function () {
        if (this.style == "star2") {
            this.anim3.play(0, false);
            this.anim3.interval = this.interval;
            this.anim3.on(Laya.Event.COMPLETE, this, this.destroyed);
            this.anim3.visible = true;
        }
    };
    //星星来回移动
    Star.prototype.star_MoveBySelf = function () {
        console.log("成没");
        /*let x_Add=Tool.rotationDeal(this.star_X,this.star_Y,move[0],move[1],"cos");
        let y_Add=Tool.rotationDeal(this.star_X,this.star_Y,move[0],move[1],"sin");
        if(this.isGoing){
            this.sp.x+=x_Add;
            this.sp.y+=y_Add;
            if(x_Add==0){
                if(this.sp.y==move[1]){
                    this.isGoing=false;
                }
            }
            else if(y_Add==0){
                if(this.sp.x==move[0]){
                    this.isGoing=false;
                }
            }
            else
            {
                if(Math.abs(this.sp.x-move[0])<0.3){
                    this.sp.x=move[0];
                    this.sp.y=move[1];
                    this.isGoing=false;
                    
                }
            }
        }else{
            this.sp.x-=x_Add;
            this.sp.y-=y_Add;
            if(x_Add==0){
                if(this.sp.y==this.star_Y){
                    this.isGoing=true;
                }
            }
            else if(y_Add==0){
                if(this.sp.x==this.star_X){
                    this.isGoing=true;
                }
            }else {
                if(Math.abs(this.sp.x-this.star_X)<0.3){
                this.sp.x=this.star_X;
                this.sp.y=this.star_Y;
                this.isGoing=true;
            }
        }
    }*/
    };
    /**Star消失 */
    Star.prototype.starDestroy = function (style) {
        this.anim.stop();
        this.anim.visible = false;
        this.anim2.visible = true;
        this.anim2.play(0, false);
        if (style == "star2") {
            this.anim3.stop();
            this.anim3.visible = false;
        }
        this.isDestroy = true;
    };
    /**星星消失 */
    Star.prototype.destroyed = function (style) {
        this.sp.x = 100000;
        this.sp.visible = false;
        this.anim3.visible = false;
    };
    return Star;
}());
exports.default = Star;
},{}],20:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * bouceDrum 弹力鼓
 */
var BouceDrum = /** @class */ (function () {
    function BouceDrum(view) {
        this.view = view;
    }
    /**初始化 */
    BouceDrum.prototype.init = function (data) {
        this.setData(data);
        this.setSprite();
    };
    /**更新 */
    BouceDrum.prototype.updata = function (data) {
        this.setData(data);
        this.setSprite();
    };
    /**设置数据 */
    BouceDrum.prototype.setData = function (data) {
        this.x = data.bounceDrum_X;
        this.y = data.bounceDrum_Y;
        this.size = data.size;
        this.rotation = data.rotation;
        if (data.power)
            this.power = data.power;
        else
            this.power = 1;
        if (data.rotationV)
            this.rotationV = data.rotationV;
        ;
        if (data.moveTo) {
            this.moveTo = data.moveTo;
            this.change = 1;
            if (this.moveTo[0] < this.x && this.moveTo[1] == this.y)
                this.change = -1;
            if (this.moveTo[1] < this.y && this.moveTo[0] == this.x)
                this.change = -1;
        }
    };
    /**创建刚体 和碰撞 */
    BouceDrum.prototype.createBodyColider = function () {
        var body = new Laya.RigidBody();
        body.allowRotation = false;
        body.type = "kinematic";
        this.sp.addComponentIntance(body);
        var colider = new Laya.BoxCollider();
        colider.restitution = 1;
        this.sp.addComponentIntance(colider);
    };
    /**创建精灵 */
    BouceDrum.prototype.setSprite = function () {
        if (!this.sp) {
            this.sp = new Laya.Sprite();
            this.img = new Laya.Image();
            this.img.skin = "gameView/bounceDrum/bounceDrum.png";
            this.img.width = 110;
            this.img.height = 75;
            this.up = new Laya.Sprite();
            this.down = new Laya.Sprite();
            this.sp.addChild(this.img);
            this.sp.addChild(this.up);
            this.sp.addChild(this.down);
            this.view.addChild(this.sp);
        }
        this.isBounce = false;
        this.sp.visible = true;
        //设置up down
        this.up.width = this.img.width;
        this.up.height = this.img.height / 2;
        this.down.height = this.img.height / 2;
        this.down.width = this.img.width;
        this.down.y = this.img.height / 2;
        this.sp.rotation = this.rotation;
        this.sp.width = this.img.width;
        this.sp.height = this.img.height;
        // this.img.pivot(this.img.width/2,this.img.height/2);
        this.sp.scale(this.size, 1);
        this.sp.pivot(this.sp.width / 2, this.sp.height / 2);
        this.img.pos(0, 0);
        this.sp.pos(this.x, this.y);
    };
    /**设置向量 */
    BouceDrum.prototype.setVector = function () {
        var half_h = this.sp.height / 2;
        var centerPoint = {};
        centerPoint.y = this.sp.y - half_h;
        centerPoint.x = this.sp.x;
        var Ca_X = half_h * Math.sin(this.rotation / 180 * Math.PI);
        var Ca_Y = half_h - half_h * Math.cos(this.rotation / 180 * Math.PI);
        centerPoint.y = centerPoint.y + Ca_Y;
        centerPoint.x = centerPoint.x + Ca_X;
        this.vector = {};
        this.vector.x = centerPoint.x - this.sp.x;
        this.vector.y = centerPoint.y - this.sp.y;
    };
    /**检测糖果 */
    BouceDrum.prototype.testBounceDrum = function (candy, candy2, x, y) {
        this.testCount(candy, x, y);
        if (candy2)
            this.testCount(candy2, x, y);
    };
    /**检测方法 */
    BouceDrum.prototype.testCount = function (candy, xC, yC) {
        var candySp = candy.getCandySprite(0);
        var line;
        if ((this.up.hitTestPoint(candySp.x + xC, candySp.y + yC))) {
            var body = candySp.getComponents(Laya.RigidBody)[0];
            if (this.isBounce)
                return;
            console.log("up");
            this.isBounce = true;
            line = Math.abs(Math.cos(this.rotation / 180 * 3.14) * body.linearVelocity.y) + Math.abs(Math.sin(this.rotation / 180 * 3.14) * body.linearVelocity.x);
            // console.log("y[" + Math.floor(Math.cos(this.rotation/180*3.14)*body.linearVelocity.y) + "]    x:[" + Math.floor(Math.sin(this.rotation/180*3.14)*body.linearVelocity.x) + "]");            
            console.log("速度[" + line + "]");
            //减掉速度
            if (line < 10) {
                candy.setApplyV({ x: -Math.floor(Math.abs(Math.cos(this.rotation / 180 * 3.14) * body.linearVelocity.x) * Math.cos(this.rotation / 180 * 3.14) + Math.abs(Math.cos(this.rotation / 180 * 3.14) * body.linearVelocity.x) * Math.sin(this.rotation / 180 * 3.14)), y: -Math.floor(Math.abs(Math.cos(this.rotation / 180 * 3.14) * body.linearVelocity.y) * Math.cos(this.rotation / 180 * 3.14) + Math.abs(Math.cos(this.rotation / 180 * 3.14) * body.linearVelocity.y) * Math.sin(this.rotation / 180 * 3.14)) });
                line = 7 * this.power;
                console.log("速度[" + Math.abs(Math.cos(this.rotation / 180 * 3.14) * body.linearVelocity.y) + Math.abs(Math.sin(this.rotation / 180 * 3.14) * body.linearVelocity.x) + "]");
            }
            candy.setApplyForce({ x: candySp.width / 2, y: candySp.height / 2 }, { x: 110 * line * Math.sin(this.rotation / 180 * Math.PI), y: -110 * line * Math.cos(this.rotation / 180 * Math.PI) });
            this.playAni();
        }
        else if ((this.down.hitTestPoint(candySp.x + xC, candySp.y + yC))) {
            var body = candySp.getComponents(Laya.RigidBody)[0];
            var rotation = this.rotation + 180;
            if (this.isBounce)
                return;
            console.log("down");
            this.isBounce = true;
            line = Math.abs(Math.cos(rotation / 180 * 3.14) * body.linearVelocity.y) + Math.abs(Math.sin(rotation / 180 * 3.14) * body.linearVelocity.x);
            // console.log("y[" + Math.floor(Math.cos(rotation/180*3.14)*body.linearVelocity.y) + "]    x:[" + Math.floor(Math.sin(rotation/180*3.14)*body.linearVelocity.x) + "]");            
            console.log("速度[" + line + "]");
            //减掉速度
            if (line < 10) {
                candy.setApplyV({ x: -Math.floor(Math.abs(Math.cos(rotation / 180 * 3.14) * body.linearVelocity.x) * Math.cos(rotation / 180 * 3.14) + Math.abs(Math.cos(rotation / 180 * 3.14) * body.linearVelocity.x) * Math.sin(rotation / 180 * 3.14)), y: -Math.floor(Math.abs(Math.cos(rotation / 180 * 3.14) * body.linearVelocity.y) * Math.cos(rotation / 180 * 3.14) + Math.abs(Math.cos(rotation / 180 * 3.14) * body.linearVelocity.y) * Math.sin(rotation / 180 * 3.14)) });
                line = 7 * this.power;
                console.log("速度[" + Math.abs(Math.cos(rotation / 180 * 3.14) * body.linearVelocity.y) + Math.abs(Math.sin(rotation / 180 * 3.14) * body.linearVelocity.x) + "]");
            }
            candy.setApplyForce({ x: candySp.width / 2, y: candySp.height / 2 }, { x: 110 * line * Math.sin(rotation / 180 * Math.PI), y: -110 * line * Math.cos(rotation / 180 * Math.PI) });
            this.playAni();
        }
        else {
            this.isBounce = false;
        }
        //自转
        if (this.rotationV !== undefined) {
            this.sp.rotation += this.rotationV;
        }
        //移动
        if (!this.moveTo)
            return;
        if (this.moveTo.length > 0) {
            if (this.sp.x == this.moveTo[0]) {
                this.sp.y += 1.5 * this.change;
                if (this.moveTo[1] + 1 >= this.sp.y && this.moveTo[1] - 1 < this.sp.y) {
                    this.change = this.change * -1;
                }
                if (this.sp.y >= this.y - 1 && this.sp.y < this.y + 1) {
                    this.change = this.change * -1;
                }
            }
            if (this.sp.y == this.moveTo[1]) {
                this.sp.x += 1.5 * this.change;
                if (this.moveTo[0] + 1 >= this.sp.x && this.moveTo[0] - 1 < this.sp.x) {
                    this.change = this.change * -1;
                }
                if (this.sp.x >= this.x - 1 && this.sp.x < this.x + 1) {
                    this.change = this.change * -1;
                }
            }
        }
    };
    /**向量点乘 */
    BouceDrum.prototype.vectorX = function (vector) {
        var num = vector.x * this.vector.x + vector.y * this.vector.y;
        return num;
    };
    /**动画 */
    BouceDrum.prototype.playAni = function () {
        this.sp.visible = false;
        var bounceDrumAni = Laya.Pool.getItem("bounceDrum");
        if (bounceDrumAni) {
            this.ani = bounceDrumAni;
            this.ani.on(Laya.Event.COMPLETE, this, this.onOk);
            this.ani.play(0, false);
            this.ani.visible = true;
            this.ani.scale(this.size, 1);
            this.ani.pivot(this.sp.width / 2, this.sp.height / 2);
            this.ani.rotation = this.rotation;
            this.ani.x = this.sp.x;
            this.ani.y = this.sp.y;
            Laya.Pool.recover("bounceDrum", this.ani);
        }
        else {
            this.ani = new Laya.Animation();
            this.ani.width = this.sp.width;
            this.ani.height = this.sp.height;
            this.ani.visible = true;
            this.ani.scale(this.size, 1);
            this.ani.pivot(this.sp.width / 2, this.sp.height / 2);
            this.ani.on(Laya.Event.COMPLETE, this, this.onOk);
            this.view.addChild(this.ani);
            this.ani.interval = 30;
            var arr = [];
            for (var i = 0; i < 5; i++) {
                arr.push("gameView/bounceDrum/" + (i + 1) + ".png");
            }
            this.ani.loadImages(arr);
            this.ani.play(0, false);
            this.ani.rotation = this.rotation;
            this.ani.x = this.sp.x;
            this.ani.y = this.sp.y;
            Laya.Pool.recover("bounceDrum", this.ani);
        }
    };
    /***播放完成 */
    BouceDrum.prototype.onOk = function () {
        this.ani.visible = false;
        this.sp.visible = true;
        this.ani.off(Laya.Event.COMPLETE, this, this.onOk);
    };
    /**销毁 */
    BouceDrum.prototype.clearTimer = function () {
        if (this.sp)
            this.sp.visible = false;
        this.sp.y = -500;
        this.sp.y = -500;
        this.rotationV = undefined;
        this.moveTo = undefined;
        this.change = 1;
        this.isBounce = false;
        Laya.timer.clear(this, this.testBounceDrum);
    };
    return BouceDrum;
}());
exports.BouceDrum = BouceDrum;
},{}],21:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var PlayerData_1 = require("../view/Config/PlayerData");
/**
 * 用户的星星数量
 */
var PlayerStar = /** @class */ (function (_super) {
    __extends(PlayerStar, _super);
    function PlayerStar() {
        return _super.call(this) || this;
    }
    PlayerStar.prototype.onAwake = function () {
        this.playerStarNum = PlayerData_1.PlayerData.ins.starNum;
        this.init();
    };
    PlayerStar.prototype.init = function () {
        var ge = this.owner.getChildByName("ge");
        var shi = this.owner.getChildByName("shi");
        var bai = this.owner.getChildByName("bai");
        //逻辑
        var count_ge;
        var count_shi = -1;
        var count_bai = -1;
        count_ge = this.playerStarNum % 10;
        count_shi = (Math.floor(this.playerStarNum / 10) % 10);
        count_bai = (Math.floor(this.playerStarNum / 100) % 10);
        shi.visible = false;
        bai.visible = false;
        ge.skin = "publicAssets/" + count_ge + ".png";
        if (this.playerStarNum >= 10) {
            shi.skin = "publicAssets/" + count_shi + ".png";
            shi.visible = true;
        }
        if (this.playerStarNum >= 100) {
            bai.skin = "publicAssets/" + count_bai + ".png";
            bai.visible = true;
        }
    };
    return PlayerStar;
}(Laya.Script));
exports.default = PlayerStar;
},{"../view/Config/PlayerData":25}],22:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * 旋转脚本
 *
 */
var Round = /** @class */ (function (_super) {
    __extends(Round, _super);
    function Round() {
        return _super.call(this) || this;
    }
    Round.prototype.onEnable = function () {
    };
    Round.prototype.onUpdate = function () {
        this.owner.rotation += 0.06;
    };
    return Round;
}(Laya.Script));
exports.default = Round;
},{}],23:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
var View = Laya.View;
var Dialog = Laya.Dialog;
var Scene = Laya.Scene;
var ui;
(function (ui) {
    var GameView;
    (function (GameView) {
        var GameMenuUI = /** @class */ (function (_super) {
            __extends(GameMenuUI, _super);
            function GameMenuUI() {
                return _super.call(this) || this;
            }
            GameMenuUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(GameMenuUI.uiView);
            };
            GameMenuUI.uiView = { "type": "View", "props": { "width": 480, "hitTestPrior": true, "height": 800 }, "compId": 1, "child": [{ "type": "Image", "props": { "y": -68, "x": -77, "width": 1002, "skin": "publicAssets/black.jpg", "height": 1531, "alpha": 0.6 }, "compId": 9 }, { "type": "Label", "props": { "y": 15, "x": 5, "width": 208, "visible": false, "text": "最高得分：", "height": 55, "fontSize": 40, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true }, "compId": 2 }, { "type": "Label", "props": { "y": 15, "x": 206, "width": 228, "visible": false, "var": "Label_Score", "text": "212313213", "height": 67, "font": "30", "color": "#ffffff" }, "compId": 3 }, { "type": "Button", "props": { "y": 269, "x": 93, "width": 440, "var": "btn_Continue", "stateNum": 1, "skin": "publicAssets/btn_1.png", "scaleY": 0.6, "scaleX": 0.64, "name": "", "labelStrokeColor": "#000000", "labelStroke": 2, "labelSize": 40, "labelPadding": "0,0,010", "labelFont": "Microsoft YaHei", "labelColors": "#fff", "labelBold": true, "label": "继续", "height": 131 }, "compId": 4 }, { "type": "Button", "props": { "y": 370, "x": 93, "width": 440, "var": "btn_SelectRound", "stateNum": 1, "skin": "publicAssets/btn_1.png", "scaleY": 0.6, "scaleX": 0.64, "name": "", "labelStrokeColor": "#000000", "labelStroke": 2, "labelSize": 40, "labelPadding": "0,0,010", "labelFont": "Microsoft YaHei", "labelColors": "#fff", "labelBold": true, "label": "选择关卡", "height": 131 }, "compId": 5 }, { "type": "Button", "props": { "y": 477, "x": 93, "width": 440, "var": "btn_MainMenu", "stateNum": 1, "skin": "publicAssets/btn_1.png", "scaleY": 0.6, "scaleX": 0.64, "name": "", "labelStrokeColor": "#000000", "labelStroke": 2, "labelSize": 40, "labelPadding": "0,0,010", "labelFont": "Microsoft YaHei", "labelColors": "#fff", "labelBold": true, "label": "主菜单", "height": 131 }, "compId": 6 }, { "type": "Image", "props": { "y": 586, "x": 196, "width": 124, "var": "btn_Super", "skin": "publicAssets/aniu1.png", "scaleY": 0.6, "scaleX": 0.64, "name": "", "height": 122 }, "compId": 7 }, { "type": "Image", "props": { "y": 595, "x": 209, "skin": "publicAssets/super.png", "scaleY": 0.6, "scaleX": 0.64 }, "compId": 8 }], "loadList": ["publicAssets/black.jpg", "publicAssets/btn_1.png", "publicAssets/aniu1.png", "publicAssets/super.png"], "loadList3D": [] };
            return GameMenuUI;
        }(View));
        GameView.GameMenuUI = GameMenuUI;
        var GameViewDoorUI = /** @class */ (function (_super) {
            __extends(GameViewDoorUI, _super);
            function GameViewDoorUI() {
                return _super.call(this) || this;
            }
            GameViewDoorUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(GameViewDoorUI.uiView);
            };
            GameViewDoorUI.uiView = { "type": "View", "props": { "width": 480, "visible": true, "height": 800 }, "compId": 1, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "width": 377, "var": "img_doorL", "skin": "gameView/gameDoor/boxDoor_1.png", "scaleY": 0.6, "scaleX": 0.64, "height": 1800 }, "compId": 2, "child": [{ "type": "Image", "props": { "y": 0, "x": 332.2, "width": 44, "visible": false, "var": "img_jiaodaiL", "skin": "unpackage/jiaodao_l.png", "height": 1809.5454545454545 }, "compId": 6 }] }, { "type": "Image", "props": { "y": 0, "x": 480, "width": 381, "visible": true, "var": "img_doorR", "skin": "gameView/gameDoor/boxDoor_1.png", "scaleY": 0.6, "scaleX": -0.64, "height": 1800 }, "compId": 3, "child": [{ "type": "Image", "props": { "y": 0, "x": 331, "width": 50, "visible": false, "var": "img_jiaodaiR", "skin": "unpackage/jiaodai_r.png", "height": 1805.875 }, "compId": 5 }] }, { "type": "Image", "props": { "y": 1117, "x": 23, "visible": true, "var": "img_xiaodao", "skin": "gameView/gameDoor/dao.png", "scaleY": 0.6, "scaleX": 0.64 }, "compId": 7 }, { "type": "Image", "props": { "y": 1065, "x": 176, "width": 160, "visible": true, "var": "img_jiaodai", "skin": "gameView/gameDoor/jiaodai.png", "scaleY": 0.6, "scaleX": 0.64, "height": 215 }, "compId": 8 }, { "type": "Panel", "props": { "y": -2, "x": 192, "width": 145, "scaleY": 0.6, "scaleX": 0.64, "height": 1821 }, "compId": 47, "child": [{ "type": "Image", "props": { "y": -114, "x": 27, "width": 101, "visible": true, "var": "img_jiaodaiM", "skin": "unpackage/jiaodai_m.png", "height": 1920 }, "compId": 4 }] }, { "type": "Sprite", "props": { "y": 0, "x": -12, "width": 763, "visible": false, "var": "ui", "height": 1314, "alpha": 1 }, "compId": 25, "child": [{ "type": "Image", "props": { "y": 301, "x": 85, "width": 163, "var": "img_star1", "skin": "gameView/gameDoor/getStar.png", "scaleY": 0.64, "scaleX": 0.64, "height": 163 }, "compId": 24 }, { "type": "Image", "props": { "y": 301, "x": 311, "width": 163, "var": "img_star2", "skin": "gameView/gameDoor/getStar.png", "scaleY": 0.64, "scaleX": 0.64, "height": 163 }, "compId": 32 }, { "type": "Image", "props": { "y": 301, "x": 199, "width": 163, "var": "img_star3", "skin": "gameView/gameDoor/getStar.png", "scaleY": 0.64, "scaleX": 0.64, "height": 163 }, "compId": 33 }, { "type": "Label", "props": { "y": 146, "x": -128, "width": 752, "var": "lab_Content", "text": "真棒", "strokeColor": "#e0d09e", "stroke": 2, "height": 103, "fontSize": 80, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center" }, "compId": 34 }, { "type": "Button", "props": { "y": 495, "x": 34, "width": 295, "var": "btn_Replay", "stateNum": 1, "skin": "publicAssets/btn_1.png", "scaleY": 0.64, "scaleX": 0.64, "labelStrokeColor": "#1b1b1b", "labelStroke": 2, "labelSize": 40, "labelPadding": "0,0,10", "labelFont": "Microsoft YaHei", "labelColors": "#fff", "labelBold": true, "label": "重玩", "height": 88 }, "compId": 44 }, { "type": "Button", "props": { "y": 569, "x": 156, "width": 295, "var": "btn_ReturnRound", "stateNum": 1, "skin": "publicAssets/btn_1.png", "scaleY": 0.64, "scaleX": 0.64, "labelStroke": 2, "labelSize": 40, "labelPadding": "0,0,10,0", "labelFont": "Microsoft YaHei", "labelColors": "#fff", "labelBold": true, "label": "菜单", "height": 88 }, "compId": 45 }, { "type": "Button", "props": { "y": 495, "x": 281, "width": 295, "var": "btn_Next", "stateNum": 1, "skin": "publicAssets/btn_1.png", "scaleY": 0.64, "scaleX": 0.64, "labelStroke": 2, "labelSize": 40, "labelPadding": "0,0,10", "labelFont": "Microsoft YaHei", "labelColors": "#fff", "labelBold": true, "label": "下一关", "height": 88 }, "compId": 46 }] }], "animations": [{ "nodes": [{ "target": 3, "keyframes": { "y": [{ "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "y", "index": 0 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 3, "label": null, "key": "y", "index": 5 }, { "value": -41, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "y", "index": 11 }, { "value": -107, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "y", "index": 15 }, { "value": -291, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "y", "index": 20 }], "x": [{ "value": 480, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "x", "index": 0 }, { "value": 480, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "x", "index": 5 }, { "value": 480, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "x", "index": 11 }, { "value": 480, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "x", "index": 15 }, { "value": 480, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "x", "index": 20 }], "width": [{ "value": 381, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "width", "index": 0 }, { "value": 381, "tweenMethod": "linearNone", "tween": true, "target": 3, "label": null, "key": "width", "index": 5 }, { "value": 200, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "width", "index": 15 }, { "value": 3, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "width", "index": 20 }], "height": [{ "value": 1800, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "height", "index": 0 }, { "value": 1800, "tweenMethod": "linearNone", "tween": true, "target": 3, "label": null, "key": "height", "index": 5 }, { "value": 1900, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "height", "index": 11 }, { "value": 2000, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "height", "index": 15 }, { "value": 2200, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "height", "index": 20 }] } }, { "target": 2, "keyframes": { "y": [{ "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 2, "key": "y", "index": 0 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 2, "label": null, "key": "y", "index": 5 }, { "value": -36, "tweenMethod": "linearNone", "tween": true, "target": 2, "key": "y", "index": 11 }, { "value": -115, "tweenMethod": "linearNone", "tween": true, "target": 2, "key": "y", "index": 15 }, { "value": -288, "tweenMethod": "linearNone", "tween": true, "target": 2, "key": "y", "index": 20 }], "x": [{ "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 2, "key": "x", "index": 0 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 2, "label": null, "key": "x", "index": 5 }, { "value": -3, "tweenMethod": "linearNone", "tween": true, "target": 2, "key": "x", "index": 15 }, { "value": -11, "tweenMethod": "linearNone", "tween": true, "target": 2, "key": "x", "index": 20 }], "width": [{ "value": 377, "tweenMethod": "linearNone", "tween": true, "target": 2, "key": "width", "index": 0 }, { "value": 377, "tweenMethod": "linearNone", "tween": true, "target": 2, "label": null, "key": "width", "index": 5 }, { "value": 203, "tweenMethod": "linearNone", "tween": true, "target": 2, "key": "width", "index": 15 }, { "value": 2, "tweenMethod": "linearNone", "tween": true, "target": 2, "key": "width", "index": 20 }], "height": [{ "value": 1800, "tweenMethod": "linearNone", "tween": true, "target": 2, "key": "height", "index": 0 }, { "value": 1800, "tweenMethod": "linearNone", "tween": true, "target": 2, "label": null, "key": "height", "index": 5 }, { "value": 1900, "tweenMethod": "linearNone", "tween": true, "target": 2, "key": "height", "index": 11 }, { "value": 2000, "tweenMethod": "linearNone", "tween": true, "target": 2, "key": "height", "index": 15 }, { "value": 2200, "tweenMethod": "linearNone", "tween": true, "target": 2, "key": "height", "index": 20 }] } }, { "target": 5, "keyframes": { "y": [{ "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "y", "index": 0 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "y", "index": 2 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 5, "label": null, "key": "y", "index": 5 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "y", "index": 8 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "y", "index": 11 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "y", "index": 15 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "y", "index": 20 }], "x": [{ "value": 331, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "x", "index": 0 }, { "value": 331, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "x", "index": 2 }, { "value": 331, "tweenMethod": "linearNone", "tween": true, "target": 5, "label": null, "key": "x", "index": 5 }, { "value": 294, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "x", "index": 8 }, { "value": 243, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "x", "index": 11 }, { "value": 173, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "x", "index": 15 }, { "value": -6, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "x", "index": 20 }], "width": [{ "value": 50, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "width", "index": 0 }, { "value": 50, "tweenMethod": "linearNone", "tween": true, "target": 5, "label": null, "key": "width", "index": 5 }, { "value": 31, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "width", "index": 8 }, { "value": 30, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "width", "index": 11 }, { "value": 28, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "width", "index": 15 }, { "value": 9, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "width", "index": 20 }], "visible": [{ "value": false, "tweenMethod": "linearNone", "tween": false, "target": 5, "key": "visible", "index": 0 }, { "value": true, "tweenMethod": "linearNone", "tween": false, "target": 5, "key": "visible", "index": 2 }], "height": [{ "value": 1800, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "height", "index": 0 }, { "value": 1847, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "height", "index": 8 }, { "value": 1903, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "height", "index": 11 }, { "value": 1999, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "height", "index": 15 }] } }, { "target": 6, "keyframes": { "y": [{ "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "y", "index": 0 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "y", "index": 2 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 6, "label": null, "key": "y", "index": 5 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "y", "index": 11 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "y", "index": 15 }, { "value": 387, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "y", "index": 20 }], "x": [{ "value": 333, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "x", "index": 0 }, { "value": 329, "tweenMethod": "linearNone", "tween": true, "target": 6, "label": null, "key": "x", "index": 5 }, { "value": 249, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "x", "index": 11 }, { "value": 179, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "x", "index": 15 }, { "value": -6, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "x", "index": 20 }], "width": [{ "value": 44, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "width", "index": 0 }, { "value": 44, "tweenMethod": "linearNone", "tween": true, "target": 6, "label": null, "key": "width", "index": 5 }, { "value": 33, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "width", "index": 11 }, { "value": 26, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "width", "index": 15 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "width", "index": 20 }], "visible": [{ "value": false, "tweenMethod": "linearNone", "tween": false, "target": 6, "key": "visible", "index": 0 }, { "value": true, "tweenMethod": "linearNone", "tween": false, "target": 6, "key": "visible", "index": 2 }], "height": [{ "value": 1800, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "height", "index": 0 }, { "value": 1905, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "height", "index": 11 }, { "value": 2004, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "height", "index": 15 }] } }, { "target": 4, "keyframes": { "y": [{ "value": 10, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "y", "index": 0 }, { "value": -114, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "y", "index": 1 }], "x": [{ "value": 22, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "x", "index": 0 }, { "value": 27, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "x", "index": 1 }], "visible": [{ "value": true, "tweenMethod": "linearNone", "tween": false, "target": 4, "key": "visible", "index": 0 }, { "value": false, "tweenMethod": "linearNone", "tween": false, "target": 4, "key": "visible", "index": 2 }] } }, { "target": 25, "keyframes": { "visible": [{ "value": false, "tweenMethod": "linearNone", "tween": false, "target": 25, "key": "visible", "index": 0 }, { "value": false, "tweenMethod": "linearNone", "tween": false, "target": 25, "key": "visible", "index": 1 }, { "value": false, "tweenMethod": "linearNone", "tween": false, "target": 25, "key": "visible", "index": 20 }] } }, { "target": 7, "keyframes": { "y": [{ "value": 1117, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "y", "index": 0 }], "x": [{ "value": 23, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "x", "index": 0 }] } }, { "target": 8, "keyframes": { "y": [{ "value": 1065, "tweenMethod": "linearNone", "tween": true, "target": 8, "key": "y", "index": 0 }] } }], "name": "ani1", "id": 1, "frameRate": 24, "action": 0 }, { "nodes": [{ "target": 7, "keyframes": { "y": [{ "value": 1485, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "y", "index": 0 }], "visible": [{ "value": true, "tweenMethod": "linearNone", "tween": false, "target": 7, "key": "visible", "index": 0 }] } }, { "target": 3, "keyframes": { "y": [{ "value": -208, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "y", "index": 0 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "y", "index": 20 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "y", "index": 51 }], "x": [{ "value": 480, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "x", "index": 0 }, { "value": 480, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "x", "index": 20 }], "width": [{ "value": 13, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "width", "index": 0 }, { "value": 380, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "width", "index": 20 }, { "value": 380, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "width", "index": 51 }], "height": [{ "value": 2200, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "height", "index": 0 }, { "value": 1800, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "height", "index": 20 }, { "value": 1800, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "height", "index": 51 }] } }, { "target": 2, "keyframes": { "y": [{ "value": -213, "tweenMethod": "linearNone", "tween": true, "target": 2, "key": "y", "index": 0 }, { "value": -1, "tweenMethod": "linearNone", "tween": true, "target": 2, "key": "y", "index": 20 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 2, "key": "y", "index": 51 }], "x": [{ "value": -11, "tweenMethod": "linearNone", "tween": true, "target": 2, "key": "x", "index": 0 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 2, "key": "x", "index": 20 }], "width": [{ "value": 13, "tweenMethod": "linearNone", "tween": true, "target": 2, "key": "width", "index": 0 }, { "value": 380, "tweenMethod": "linearNone", "tween": true, "target": 2, "key": "width", "index": 20 }, { "value": 380, "tweenMethod": "linearNone", "tween": true, "target": 2, "key": "width", "index": 51 }], "height": [{ "value": 2200, "tweenMethod": "linearNone", "tween": true, "target": 2, "key": "height", "index": 0 }, { "value": 1800, "tweenMethod": "linearNone", "tween": true, "target": 2, "key": "height", "index": 20 }, { "value": 1800, "tweenMethod": "linearNone", "tween": true, "target": 2, "key": "height", "index": 51 }] } }, { "target": 4, "keyframes": { "visible": [{ "value": false, "tweenMethod": "linearNone", "tween": false, "target": 4, "key": "visible", "index": 0 }, { "value": false, "tweenMethod": "linearNone", "tween": false, "target": 4, "key": "visible", "index": 20 }, { "value": true, "tweenMethod": "linearNone", "tween": false, "target": 4, "key": "visible", "index": 24 }, { "value": true, "tweenMethod": "linearNone", "tween": false, "target": 4, "key": "visible", "index": 25 }] } }, { "target": 8, "keyframes": { "y": [{ "value": -173, "tweenMethod": "linearNone", "tween": true, "target": 8, "key": "y", "index": 0 }, { "value": -173, "tweenMethod": "linearNone", "tween": true, "target": 8, "label": null, "key": "y", "index": 20 }, { "value": -58, "tweenMethod": "linearNone", "tween": true, "target": 8, "key": "y", "index": 24 }, { "value": 89.5, "tweenMethod": "linearNone", "tween": true, "target": 8, "key": "y", "index": 31 }, { "value": 382, "tweenMethod": "linearNone", "tween": true, "target": 8, "key": "y", "index": 37 }, { "value": 716, "tweenMethod": "linearNone", "tween": true, "target": 8, "key": "y", "index": 49 }, { "value": 1342, "tweenMethod": "linearNone", "tween": true, "target": 8, "key": "y", "index": 51 }], "x": [{ "value": 176.5, "tweenMethod": "linearNone", "tween": true, "target": 8, "key": "x", "index": 0 }, { "value": 176.5, "tweenMethod": "linearNone", "tween": true, "target": 8, "label": null, "key": "x", "index": 20 }, { "value": 176.5, "tweenMethod": "linearNone", "tween": true, "target": 8, "key": "x", "index": 24 }, { "value": 176.5, "tweenMethod": "linearNone", "tween": true, "target": 8, "key": "x", "index": 25 }, { "value": 176.5, "tweenMethod": "linearNone", "tween": true, "target": 8, "key": "x", "index": 31 }, { "value": 176.5, "tweenMethod": "linearNone", "tween": true, "target": 8, "key": "x", "index": 37 }, { "value": 176.5, "tweenMethod": "linearNone", "tween": true, "target": 8, "key": "x", "index": 49 }], "visible": [{ "value": true, "tweenMethod": "linearNone", "tween": false, "target": 8, "key": "visible", "index": 0 }, { "value": true, "tweenMethod": "linearNone", "tween": false, "target": 8, "key": "visible", "index": 20 }, { "value": true, "tweenMethod": "linearNone", "tween": false, "target": 8, "key": "visible", "index": 25 }] } }, { "target": 47, "keyframes": { "visible": [{ "value": false, "tweenMethod": "linearNone", "tween": false, "target": 47, "key": "visible", "index": 0 }, { "value": true, "tweenMethod": "linearNone", "tween": false, "target": 47, "key": "visible", "index": 24 }], "height": [{ "value": 1121, "tweenMethod": "linearNone", "tween": true, "target": 47, "key": "height", "index": 0 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 47, "key": "height", "index": 24 }, { "value": 10, "tweenMethod": "linearNone", "tween": true, "target": 47, "key": "height", "index": 25 }, { "value": 165, "tweenMethod": "linearNone", "tween": true, "target": 47, "key": "height", "index": 31 }, { "value": 654, "tweenMethod": "linearNone", "tween": true, "target": 47, "key": "height", "index": 37 }, { "value": 1229, "tweenMethod": "linearNone", "tween": true, "target": 47, "key": "height", "index": 49 }, { "value": 1800, "tweenMethod": "linearNone", "tween": true, "target": 47, "key": "height", "index": 51 }] } }, { "target": 25, "keyframes": { "visible": [{ "value": false, "tweenMethod": "linearNone", "tween": false, "target": 25, "key": "visible", "index": 0 }] } }], "name": "ani2", "id": 2, "frameRate": 26, "action": 0 }, { "nodes": [{ "target": 2, "keyframes": { "y": [{ "value": -107, "tweenMethod": "linearNone", "tween": true, "target": 2, "key": "y", "index": 0 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 2, "label": null, "key": "y", "index": 27 }], "width": [{ "value": 3, "tweenMethod": "linearNone", "tween": true, "target": 2, "key": "width", "index": 0 }, { "value": 380, "tweenMethod": "linearNone", "tween": true, "target": 2, "label": null, "key": "width", "index": 27 }, { "value": 388, "tweenMethod": "linearNone", "tween": true, "target": 2, "key": "width", "index": 29 }], "height": [{ "value": 2200, "tweenMethod": "linearNone", "tween": true, "target": 2, "key": "height", "index": 0 }, { "value": 1800, "tweenMethod": "linearNone", "tween": true, "target": 2, "label": null, "key": "height", "index": 27 }] } }, { "target": 3, "keyframes": { "y": [{ "value": -97, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "y", "index": 0 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 3, "label": null, "key": "y", "index": 27 }], "width": [{ "value": 8, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "width", "index": 0 }, { "value": 380, "tweenMethod": "linearNone", "tween": true, "target": 3, "label": null, "key": "width", "index": 27 }, { "value": 385, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "width", "index": 29 }], "visible": [{ "value": true, "tweenMethod": "linearNone", "tween": false, "target": 3, "key": "visible", "index": 0 }, { "value": true, "tweenMethod": "linearNone", "tween": false, "target": 3, "label": null, "key": "visible", "index": 27 }], "height": [{ "value": 2200, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "height", "index": 0 }, { "value": 1800, "tweenMethod": "linearNone", "tween": true, "target": 3, "label": null, "key": "height", "index": 27 }] } }, { "target": 25, "keyframes": { "visible": [{ "value": true, "tweenMethod": "linearNone", "tween": false, "target": 25, "key": "visible", "index": 0 }], "alpha": [{ "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 25, "key": "alpha", "index": 0 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 25, "key": "alpha", "index": 10 }] } }, { "target": 4, "keyframes": { "visible": [{ "value": false, "tweenMethod": "linearNone", "tween": false, "target": 4, "key": "visible", "index": 0 }] } }, { "target": 6, "keyframes": { "visible": [{ "value": false, "tweenMethod": "linearNone", "tween": false, "target": 6, "key": "visible", "index": 0 }] } }, { "target": 5, "keyframes": { "visible": [{ "value": false, "tweenMethod": "linearNone", "tween": false, "target": 5, "key": "visible", "index": 0 }, { "value": false, "tweenMethod": "linearNone", "tween": false, "target": 5, "label": null, "key": "visible", "index": 27 }] } }, { "target": 8, "keyframes": { "y": [{ "value": 1343, "tweenMethod": "linearNone", "tween": true, "target": 8, "key": "y", "index": 0 }, { "value": 1218, "tweenMethod": "linearNone", "tween": true, "target": 8, "key": "y", "index": 24 }] } }, { "target": 7, "keyframes": { "y": [{ "value": 1261, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "y", "index": 0 }] } }], "name": "ani3", "id": 3, "frameRate": 24, "action": 0 }, { "nodes": [{ "target": 25, "keyframes": { "visible": [{ "value": true, "tweenMethod": "linearNone", "tween": false, "target": 25, "key": "visible", "index": 0 }, { "value": false, "tweenMethod": "linearNone", "tween": false, "target": 25, "key": "visible", "index": 12 }], "alpha": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 25, "key": "alpha", "index": 0 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 25, "key": "alpha", "index": 12 }] } }, { "target": 2, "keyframes": { "y": [{ "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 2, "key": "y", "index": 0 }, { "value": -120, "tweenMethod": "linearNone", "tween": true, "target": 2, "key": "y", "index": 24 }], "width": [{ "value": 383, "tweenMethod": "linearNone", "tween": true, "target": 2, "key": "width", "index": 0 }, { "value": 5, "tweenMethod": "linearNone", "tween": true, "target": 2, "key": "width", "index": 24 }], "height": [{ "value": 1800, "tweenMethod": "linearNone", "tween": true, "target": 2, "key": "height", "index": 0 }, { "value": 2200, "tweenMethod": "linearNone", "tween": true, "target": 2, "key": "height", "index": 24 }] } }, { "target": 3, "keyframes": { "y": [{ "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "y", "index": 0 }, { "value": -108, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "y", "index": 24 }], "width": [{ "value": 392, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "width", "index": 0 }, { "value": 5, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "width", "index": 24 }], "height": [{ "value": 1800, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "height", "index": 0 }, { "value": 2200, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "height", "index": 24 }] } }, { "target": 7, "keyframes": { "y": [{ "value": 1266, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "y", "index": 0 }, { "value": 1258, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "y", "index": 24 }], "x": [{ "value": 23, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "x", "index": 0 }, { "value": 16.5, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "x", "index": 24 }] } }, { "target": 8, "keyframes": { "y": [{ "value": 1211, "tweenMethod": "linearNone", "tween": true, "target": 8, "key": "y", "index": 0 }, { "value": 1229, "tweenMethod": "linearNone", "tween": true, "target": 8, "key": "y", "index": 24 }] } }], "name": "ani4", "id": 4, "frameRate": 24, "action": 0 }, { "nodes": [{ "target": 2, "keyframes": { "y": [{ "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 2, "key": "y", "index": 0 }, { "value": -120, "tweenMethod": "linearNone", "tween": true, "target": 2, "key": "y", "index": 24 }], "width": [{ "value": 378, "tweenMethod": "linearNone", "tween": true, "target": 2, "key": "width", "index": 0 }, { "value": 5, "tweenMethod": "linearNone", "tween": true, "target": 2, "key": "width", "index": 24 }], "height": [{ "value": 1334, "tweenMethod": "linearNone", "tween": true, "target": 2, "key": "height", "index": 0 }, { "value": 1585, "tweenMethod": "linearNone", "tween": true, "target": 2, "key": "height", "index": 24 }] } }, { "target": 3, "keyframes": { "y": [{ "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "y", "index": 0 }, { "value": -108, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "y", "index": 24 }], "width": [{ "value": 377, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "width", "index": 0 }, { "value": 5, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "width", "index": 24 }], "height": [{ "value": 1334, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "height", "index": 0 }, { "value": 1571, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "height", "index": 24 }] } }], "name": "ani5", "id": 4, "frameRate": 24, "action": 0 }], "loadList": ["gameView/gameDoor/boxDoor_1.png", "unpackage/jiaodao_l.png", "unpackage/jiaodai_r.png", "gameView/gameDoor/dao.png", "gameView/gameDoor/jiaodai.png", "unpackage/jiaodai_m.png", "gameView/gameDoor/getStar.png", "publicAssets/btn_1.png"], "loadList3D": [] };
            return GameViewDoorUI;
        }(View));
        GameView.GameViewDoorUI = GameViewDoorUI;
    })(GameView = ui.GameView || (ui.GameView = {}));
})(ui = exports.ui || (exports.ui = {}));
(function (ui) {
    var LoadingUI = /** @class */ (function (_super) {
        __extends(LoadingUI, _super);
        function LoadingUI() {
            return _super.call(this) || this;
        }
        LoadingUI.prototype.createChildren = function () {
            _super.prototype.createChildren.call(this);
            this.loadScene("Loading");
        };
        return LoadingUI;
    }(View));
    ui.LoadingUI = LoadingUI;
    var SelectUI = /** @class */ (function (_super) {
        __extends(SelectUI, _super);
        function SelectUI() {
            return _super.call(this) || this;
        }
        SelectUI.prototype.createChildren = function () {
            _super.prototype.createChildren.call(this);
            this.loadScene("Select");
        };
        return SelectUI;
    }(View));
    ui.SelectUI = SelectUI;
    var StartGameUI = /** @class */ (function (_super) {
        __extends(StartGameUI, _super);
        function StartGameUI() {
            return _super.call(this) || this;
        }
        StartGameUI.prototype.createChildren = function () {
            _super.prototype.createChildren.call(this);
            this.loadScene("StartGame");
        };
        return StartGameUI;
    }(View));
    ui.StartGameUI = StartGameUI;
    var topLeftUI = /** @class */ (function (_super) {
        __extends(topLeftUI, _super);
        function topLeftUI() {
            return _super.call(this) || this;
        }
        topLeftUI.prototype.createChildren = function () {
            _super.prototype.createChildren.call(this);
            this.createView(topLeftUI.uiView);
        };
        topLeftUI.uiView = { "type": "Scene", "props": { "width": 100, "mouseThrough": true, "height": 200 }, "compId": 2, "child": [{ "type": "Image", "props": { "y": 118, "x": 21, "width": 73, "var": "btn_Teach", "skin": "selectBox/shop.png", "height": 73 }, "compId": 3 }, { "type": "Image", "props": { "y": 20, "x": 21, "width": 73, "var": "btn_Super", "skin": "selectBox/super.png", "height": 73 }, "compId": 4 }, { "type": "Sprite", "props": { "y": 7, "x": 13, "width": 103, "visible": false, "var": "sho", "texture": "publicAssets/super.png", "height": 98 }, "compId": 6 }], "animations": [{ "nodes": [{ "target": 6, "keyframes": { "x": [{ "value": 13, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "x", "index": 0 }, { "value": 13, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "x", "index": 32 }], "visible": [{ "value": true, "tweenMethod": "linearNone", "tween": false, "target": 6, "key": "visible", "index": 0 }], "alpha": [{ "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "alpha", "index": 0 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "alpha", "index": 16 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 6, "label": null, "key": "alpha", "index": 20 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "alpha", "index": 32 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "alpha", "index": 35 }] } }], "name": "ani1", "id": 1, "frameRate": 24, "action": 0 }], "loadList": ["selectBox/shop.png", "selectBox/super.png", "publicAssets/super.png"], "loadList3D": [] };
        return topLeftUI;
    }(Scene));
    ui.topLeftUI = topLeftUI;
})(ui = exports.ui || (exports.ui = {}));
(function (ui) {
    var SelectBox;
    (function (SelectBox) {
        var BoxUI = /** @class */ (function (_super) {
            __extends(BoxUI, _super);
            function BoxUI() {
                return _super.call(this) || this;
            }
            BoxUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(BoxUI.uiView);
            };
            BoxUI.uiView = { "type": "View", "props": { "width": 500, "hitTestPrior": true, "height": 500 }, "compId": 1, "child": [{ "type": "Image", "props": { "y": 271, "x": 173, "width": 177, "skin": "publicAssets/black.jpg", "height": 143 }, "compId": 3 }, { "type": "Sprite", "props": { "y": 281, "x": 67, "width": 193, "var": "sprite_BoxParent", "height": 150 }, "compId": 6 }, { "type": "Image", "props": { "y": 24, "x": 54, "width": 407, "var": "img_box", "skin": "selectBox/Box (1).png", "height": 435, "alpha": 1 }, "compId": 9 }, { "type": "Image", "props": { "y": 215, "x": 36, "width": 438, "var": "img_lock", "skin": "selectBox/boxLock.png", "height": 198 }, "compId": 11, "child": [{ "type": "Image", "props": { "y": 103, "x": 233, "visible": false, "var": "img_StarCount", "skin": "selectBox/lockStar.png" }, "compId": 12 }, { "type": "Image", "props": { "y": 110, "x": 207, "visible": false, "var": "img_Count3", "skin": "publicAssets/0.png" }, "compId": 13 }, { "type": "Image", "props": { "y": 109, "x": 183, "visible": false, "var": "img_Count2", "skin": "publicAssets/6.png" }, "compId": 14 }, { "type": "Image", "props": { "y": 109, "x": 160, "visible": false, "var": "img_Count1", "skin": "publicAssets/6.png" }, "compId": 25 }] }, { "type": "Image", "props": { "y": 346, "x": 349, "var": "img_IsAllThree", "skin": "selectBox/allThree.png" }, "compId": 24 }], "loadList": ["publicAssets/black.jpg", "selectBox/Box (1).png", "selectBox/boxLock.png", "selectBox/lockStar.png", "publicAssets/0.png", "publicAssets/6.png", "selectBox/allThree.png"], "loadList3D": [] };
            return BoxUI;
        }(View));
        SelectBox.BoxUI = BoxUI;
        var SelectBoxUI = /** @class */ (function (_super) {
            __extends(SelectBoxUI, _super);
            function SelectBoxUI() {
                return _super.call(this) || this;
            }
            SelectBoxUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.loadScene("SelectBox/SelectBox");
            };
            return SelectBoxUI;
        }(View));
        SelectBox.SelectBoxUI = SelectBoxUI;
    })(SelectBox = ui.SelectBox || (ui.SelectBox = {}));
})(ui = exports.ui || (exports.ui = {}));
(function (ui) {
    var SelectRound;
    (function (SelectRound) {
        var RoundItemUI = /** @class */ (function (_super) {
            __extends(RoundItemUI, _super);
            function RoundItemUI() {
                return _super.call(this) || this;
            }
            RoundItemUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(RoundItemUI.uiView);
            };
            RoundItemUI.uiView = { "type": "View", "props": { "width": 140, "height": 140, "cacheAs": "bitmap" }, "compId": 1, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "width": 140, "var": "img_RoundBox", "skin": "selectRound/unlock.png", "height": 140 }, "compId": 4 }, { "type": "Image", "props": { "y": 95, "x": 43, "width": 90, "var": "img_Star", "skin": "selectRound/star0.png", "hitTestPrior": true, "height": 50 }, "compId": 5, "child": [{ "type": "Image", "props": { "y": -56, "x": -19, "width": 25, "visible": false, "var": "img_Count3", "skin": "publicAssets/2.png", "height": 50 }, "compId": 10 }, { "type": "Image", "props": { "y": -56, "x": 6, "width": 25, "visible": false, "var": "img_Count1", "skin": "publicAssets/2.png", "height": 50 }, "compId": 7 }, { "type": "Image", "props": { "y": -56, "x": 31.5, "width": 25, "var": "img_Count2", "skin": "publicAssets/2.png", "height": 50 }, "compId": 9 }] }], "loadList": ["selectRound/unlock.png", "selectRound/star0.png", "publicAssets/2.png"], "loadList3D": [] };
            return RoundItemUI;
        }(View));
        SelectRound.RoundItemUI = RoundItemUI;
    })(SelectRound = ui.SelectRound || (ui.SelectRound = {}));
})(ui = exports.ui || (exports.ui = {}));
(function (ui) {
    var Shop;
    (function (Shop) {
        var ShopDialogUI = /** @class */ (function (_super) {
            __extends(ShopDialogUI, _super);
            function ShopDialogUI() {
                return _super.call(this) || this;
            }
            ShopDialogUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(ShopDialogUI.uiView);
            };
            ShopDialogUI.uiView = { "type": "Dialog", "props": { "width": 750, "height": 1334 }, "compId": 2, "child": [{ "type": "Image", "props": { "y": 141, "x": 139, "width": 506, "var": "shopskinTop", "skin": "shop/shop1Top.png", "height": 83 }, "compId": 3 }, { "type": "Image", "props": { "y": 218, "x": 138, "width": 508, "var": "shopskinMain", "skin": "shop/shop1Main.png", "height": 956 }, "compId": 4 }, { "type": "Sprite", "props": { "y": 154.5, "x": 150, "width": 74, "var": "btn_shop1", "texture": "shop/2 (1).png", "height": 56 }, "compId": 7 }, { "type": "Sprite", "props": { "y": 156, "x": 263, "width": 51, "var": "btn_shop2", "texture": "shop/2 (3).png", "height": 53 }, "compId": 8 }, { "type": "Sprite", "props": { "y": 283, "x": 242, "width": 300, "var": "shop1", "texture": "shop/2 (4).png", "height": 251 }, "compId": 9, "child": [{ "type": "Text", "props": { "y": 391, "x": -85, "wordWrap": true, "width": 470, "text": "点击右上角 ，观看广告直接通关！", "height": 351, "fontSize": 40, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "center", "runtime": "laya.display.Text" }, "compId": 17 }] }, { "type": "Sprite", "props": { "y": 322.5, "x": 203, "width": 378, "var": "shop2", "texture": "shop/2 (27).png", "height": 172 }, "compId": 10, "child": [{ "type": "Text", "props": { "y": 255, "x": -25, "wordWrap": true, "width": 428, "text": "使用超能力！！让盒子变为密闭空间！！糖果不在掉落，用手指可推动糖果！并且糖果不会背破坏！", "height": 219, "fontSize": 40, "font": "Microsoft YaHei", "color": "#ffffff", "bold": true, "align": "left", "runtime": "laya.display.Text" }, "compId": 18 }, { "type": "Sprite", "props": { "y": -53, "x": 368, "var": "film", "texture": "shop/2 (12).png" }, "compId": 11, "child": [{ "type": "Sprite", "props": { "y": 10.5, "x": 6, "texture": "shop/2 (19).png" }, "compId": 12 }] }] }, { "type": "Image", "props": { "y": 1174, "x": 138, "width": 508, "var": "imgBottom", "skin": "shop/2 (15).png", "height": 27 }, "compId": 16 }, { "type": "Image", "props": { "y": 189, "x": 575, "var": "btn_close", "skin": "publicAssets/aniu1.png" }, "compId": 15 }, { "type": "Sprite", "props": { "y": 207, "x": 590, "texture": "shop/2 (22).png" }, "compId": 6 }], "loadList": ["shop/shop1Top.png", "shop/shop1Main.png", "shop/2 (1).png", "shop/2 (3).png", "shop/2 (4).png", "shop/2 (27).png", "shop/2 (12).png", "shop/2 (19).png", "shop/2 (15).png", "publicAssets/aniu1.png", "shop/2 (22).png"], "loadList3D": [] };
            return ShopDialogUI;
        }(Dialog));
        Shop.ShopDialogUI = ShopDialogUI;
    })(Shop = ui.Shop || (ui.Shop = {}));
})(ui = exports.ui || (exports.ui = {}));
},{}],24:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("../ui/layaMaxUI");
var PlayerData_1 = require("./Config/PlayerData");
/**
* 盒子
*/
var Box = /** @class */ (function () {
    function Box(view, selectId, boxId, skin) {
        this.initX = 102;
        this.initY = 29;
        this.selectId = selectId;
        this.boxId = boxId;
        this.boxUI = new layaMaxUI_1.ui.SelectBox.BoxUI();
        if (skin) {
            this.boxUI.img_box.skin = skin;
        }
        else {
            this.boxUI.img_box.skin = 'selectBox/Box (1).png';
        }
        this.boxUI.x = this.initX;
        this.boxUI.y = this.initY;
        view.panel_ShowBox.addChild(this.boxUI);
        this.parseUnlock();
        this.isAllThree();
    }
    /**是否开锁 */
    Box.prototype.parseUnlock = function () {
        var boxs = Laya.WeakObject.I.get(this.selectId).boxLimit;
        // console.log(boxs);
        if (boxs[this.boxId] === undefined)
            return;
        if (boxs[this.boxId] < PlayerData_1.PlayerData.ins.starNum || this.boxId == 0) {
            this.boxUI.img_lock.visible = false;
        }
        else {
            if (this.boxId != 0) { //显示  星星限""
                this.boxUI.img_Count3.visible = true;
                this.boxUI.img_StarCount.visible = true;
                if (boxs[this.boxId] >= 100) {
                    this.boxUI.img_Count1.visible = true;
                    this.boxUI.img_Count1.skin = "publicAssets/" + Math.floor(boxs[this.boxId] / 100) + ".png";
                }
                if (boxs[this.boxId] >= 10) {
                    this.boxUI.img_Count2.visible = true;
                    this.boxUI.img_Count2.skin = "publicAssets/" + Math.floor(boxs[this.boxId] % 100 / 10) + ".png";
                }
                this.boxUI.img_Count3.skin = "publicAssets/" + boxs[this.boxId] % 10 + ".png";
            }
        }
    };
    /**是全三星 */
    Box.prototype.isAllThree = function () {
        var totle = 0;
        var boxs = Laya.WeakObject.I.get(this.selectId + "-" + this.boxId);
        if (boxs === undefined) {
            for (var i = 0; i < boxs.length; i++) {
                totle += boxs[i];
            }
        }
        if (totle != 25) {
            this.boxUI.img_IsAllThree.visible = false;
        }
    };
    return Box;
}());
exports.Box = Box;
},{"../ui/layaMaxUI":23,"./Config/PlayerData":25}],25:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * 玩家数据
 */
var PlayerData = /** @class */ (function () {
    function PlayerData() {
        //测试数据
        this.init();
    }
    /**初始化 */
    PlayerData.prototype.init = function () {
        this.arr_LimitSelect = new Array();
        this.boxLimtDic = new Laya.WeakObject();
        this.round_Star = new Laya.WeakObject();
        this.select_Star = new Laya.WeakObject();
    };
    /**是否能解开该关卡？ @select : 关卡数 0 1 2*/
    PlayerData.prototype.isSelect = function (select) {
        var SelectNum;
        return this.starNum >= this.arr_LimitSelect[select] ? true : false;
    };
    /**解析对应季度的星星数 */
    PlayerData.prototype.parseSelect_Star = function () {
    };
    /**解析获得关卡的星星数 */
    PlayerData.prototype.parseRound_Star = function () {
    };
    PlayerData.ins = new PlayerData();
    return PlayerData;
}());
exports.PlayerData = PlayerData;
},{}],26:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("../ui/layaMaxUI");
var MapConfig_1 = require("../config/MapConfig");
var Hook_1 = require("../prefab/Hook");
var Rope_1 = require("../prefab/Rope");
var Candy_1 = require("../prefab/Candy");
var Tail_1 = require("../Tool/Tail");
var GameConfig_1 = require("../config/GameConfig");
var Monster_1 = require("../prefab/Monster");
var Star_1 = require("../prefab/Star");
var Balloon_1 = require("../prefab/Balloon");
var MagicHat_1 = require("../prefab/MagicHat");
var Knife_1 = require("../prefab/Knife");
var PlayerData_1 = require("./Config/PlayerData");
var ForceBall_1 = require("../prefab/ForceBall");
var Laser_1 = require("../prefab/Laser");
var Spider_1 = require("../prefab/Spider");
var bounceDrum_1 = require("../prefab/bounceDrum");
/**
* 游戏界面 ani  1：开门动画 2：
*/
var GamePage = /** @class */ (function (_super) {
    __extends(GamePage, _super);
    function GamePage() {
        var _this = _super.call(this) || this;
        //hook 需要重置
        _this.arr_Hook = new Array();
        //-------------------------------------------
        /**透明度转折变量 */
        _this.alphaZ = 0;
        return _this;
    }
    GamePage.prototype.onEnable = function () {
    };
    GamePage.prototype.onOpened = function (arr) {
        this.quarterIndex = arr[0];
        this.boxIndex = arr[1];
        this.cardIndex = arr[2];
        this.init();
    };
    GamePage.prototype.init = function () {
        ///物理线
        Laya.PhysicsDebugDraw.enable();
        //舞台尺寸
        Laya.stage.width = 480;
        Laya.stage.height = 800;
        // ui初始化
        // ui初始化
        this.newShopUi();
        this.initBgSkin();
        this.menuUI = new layaMaxUI_1.ui.GameView.GameMenuUI();
        this.scene.addChild(this.menuUI);
        this.newDoorUi();
        this.doorOpen.alpha = 0.3;
        //鼠标拖尾初始化
        this.initMouseTail();
        //界面数据 数值初始化
        this.scene.img_replay.alpha = 0;
        this.alphaZ = 1;
        this.score = 0;
        this.roadIndex = 0;
        this.lastMousePos = {};
        this.isOpenSuper = false;
        this.isReplay = false;
        this.isEated = false;
        this.isToOne = false;
        Laya.Physics.I.gravity = { x: 0, y: GameConfig_1.default.WOLDE_G };
        //界面 可视 初始化
        Laya.MouseManager.enabled = false;
        // this.doorOpen.ani1.play(0,false);
        this.menuUI.visible = false;
        /**屏幕适配 */
        this.gameShow();
        //添加事件
        this.addEvents();
        //第一次更新游戏
        this.UpdateData(this.quarterIndex + "-" + this.boxIndex, this.cardIndex, true);
        //鼠标joint
        // let joint=new Laya.MouseJoint();
        // joint.maxForce=1000000;
        // this.candy.arr_Sp[0].addComponentIntance(joint);
    };
    /**屏幕适配 */
    GamePage.prototype.gameShow = function () {
        this.screenHeight = 480 * (Laya.Browser.clientHeight / Laya.Browser.clientWidth);
        this.scene.img_gameBg.height = this.screenHeight;
        // this.scene.panel_GameWorld.height = this.screenHeight;
        this.scene.starAni.y = this.screenHeight - this.scene.starAni.height;
    };
    GamePage.prototype.initBgSkin = function () {
        this.scene.img_gameBg.skin = "gameView/gameBg/boxBg_" + (this.boxIndex + 1) + ".png";
    };
    GamePage.prototype.newShopUi = function () {
        this.shopDoor = new layaMaxUI_1.ui.topLeftUI();
        this.shopDialog = Laya.WeakObject.I.get("dialog");
        this.scene.addChild(this.shopDoor);
        this.shopDoor.btn_Super.scale(0.7, 0.7);
        this.shopDoor.btn_Teach.scale(0.7, 0.7);
        this.shopDoor.btn_Teach.y -= 25;
        this.shopDoor.sho.scale(0.7, 0.7);
        this.shopDoor.sho.y += 5;
        this.shopDoor.x = -8;
        this.shopDoor.y = 113;
        this.updateSuper();
    };
    GamePage.prototype.updateSuper = function () {
        var playerData = PlayerData_1.PlayerData.ins;
        if (playerData.super > 0) {
            this.shopDoor.ani1.play(0, true);
        }
        else {
            this.shopDoor.sho.visible = false;
            this.shopDoor.ani1.stop();
        }
    };
    GamePage.prototype.newDoorUi = function () {
        if (!this.doorOpen) {
            this.doorOpen = new layaMaxUI_1.ui.GameView.GameViewDoorUI();
            this.scene.addChild(this.doorOpen);
        }
        var skins = Laya.WeakObject.I.get("boxSkin");
        this.doorOpen.img_doorL.skin = skins[this.quarterIndex + "-" + this.boxIndex][1];
        this.doorOpen.img_doorR.skin = skins[this.quarterIndex + "-" + this.boxIndex][1];
    };
    GamePage.prototype.initMouseTail = function () {
        this.mouseTail = new Tail_1.default(this.scene.panel_GameWorld);
        this.mouseTail.Init(0.5, 1600);
        this.mouseTail.setSingle("cirle", "gameView/mouseTail/tail1.png");
        this.mouseTail.start();
    };
    /**添加事件 */
    GamePage.prototype.addEvents = function () {
        this.scene.btn_ReGame.on(Laya.Event.CLICK, this, this.onReGame);
        this.scene.btn_Menu.on(Laya.Event.CLICK, this, this.onMenu);
        this.menuUI.btn_Continue.on(Laya.Event.CLICK, this, this.onContinue);
        this.menuUI.btn_SelectRound.on(Laya.Event.CLICK, this, this.onSelectRound);
        this.menuUI.btn_Super.on(Laya.Event.CLICK, this, this.onShopSuper);
        this.menuUI.btn_MainMenu.on(Laya.Event.CLICK, this, this.onMainMenu);
        this.doorOpen.btn_Next.on(Laya.Event.CLICK, this, this.onNextRound);
        this.doorOpen.btn_Replay.on(Laya.Event.CLICK, this, this.onReplay);
        this.doorOpen.btn_ReturnRound.on(Laya.Event.CLICK, this, this.onSelectRound);
        this.shopDoor.btn_Teach.on(Laya.Event.CLICK, this, this.onTeach);
        this.shopDoor.btn_Super.on(Laya.Event.CLICK, this, this.onSuper);
        //
        Laya.stage.on(Laya.Event.MOUSE_DOWN, this, this.onMouseDown);
        Laya.stage.on(Laya.Event.MOUSE_UP, this, this.onMouseUp);
        //按钮效果添加
        this.doorOpen.btn_Next.on(Laya.Event.MOUSE_DOWN, this, this.onBtn, ["down", this.doorOpen.btn_Next]);
        this.doorOpen.btn_Replay.on(Laya.Event.MOUSE_DOWN, this, this.onBtn, ["down", this.doorOpen.btn_Replay]);
        this.doorOpen.btn_ReturnRound.on(Laya.Event.MOUSE_DOWN, this, this.onBtn, ["down", this.doorOpen.btn_ReturnRound]);
        this.doorOpen.btn_Next.on(Laya.Event.MOUSE_OUT, this, this.onBtn, ["", this.doorOpen.btn_Next]);
        this.doorOpen.btn_Replay.on(Laya.Event.MOUSE_OUT, this, this.onBtn, ["", this.doorOpen.btn_Replay]);
        this.doorOpen.btn_ReturnRound.on(Laya.Event.MOUSE_OUT, this, this.onBtn, ["", this.doorOpen.btn_ReturnRound]);
        this.menuUI.btn_Continue.on(Laya.Event.MOUSE_DOWN, this, this.onBtn, ["down", this.menuUI.btn_Continue]);
        this.menuUI.btn_SelectRound.on(Laya.Event.MOUSE_DOWN, this, this.onBtn, ["down", this.menuUI.btn_SelectRound]);
        this.menuUI.btn_MainMenu.on(Laya.Event.MOUSE_DOWN, this, this.onBtn, ["down", this.menuUI.btn_MainMenu]);
        this.menuUI.btn_Continue.on(Laya.Event.MOUSE_OUT, this, this.onBtn, ["", this.menuUI.btn_Continue]);
        this.menuUI.btn_SelectRound.on(Laya.Event.MOUSE_OUT, this, this.onBtn, ["", this.menuUI.btn_SelectRound]);
        this.menuUI.btn_MainMenu.on(Laya.Event.MOUSE_OUT, this, this.onBtn, ["", this.menuUI.btn_MainMenu]);
        this.addAnimationOver();
    };
    /**str  down up */
    GamePage.prototype.onBtn = function (str, obj) {
        if (str == "down") {
            obj.skin = "publicAssets/btn2_1.png";
        }
        else {
            obj.skin = "publicAssets/btn_1.png";
        }
    };
    /**需要销毁的事件 */
    GamePage.prototype.removeEvents = function () {
        Laya.timer.clear(this, this.ropeToCandy);
        Laya.timer.clear(this, this.mouseCute);
        Laya.timer.clear(this, this.candyTest);
        Laya.timer.clear(this, this.star_MoveBySelf); //清除星星的定时器
        Laya.timer.clear(this, this.star_RotateByOnePoint); //清除星星的定时器
        this.arr_Rope.forEach(function (rope) {
            rope.clearTimer();
        });
        if (this.arr_Rope2) {
            this.arr_Rope2.forEach(function (rope) {
                rope.clearTimer();
            });
        }
        this.candy.clearTimer(); //取消糖果中的定时器
        if (this.candy2)
            this.candy2.clearTimer(); //取消糖果中的定时器
        if (this.arr_Balloon) //取消泡泡定时器
         {
            this.arr_Balloon.forEach(function (balloon) {
                balloon.clearTimer();
            });
        }
        if (this.arr_Knife) //取消锥子定时器
         {
            this.arr_Knife.forEach(function (knife) {
                knife.clearTimer();
                knife.destroy();
            });
        }
        if (this.arr_MagicHat) //取消帽子定时球
         {
            this.arr_MagicHat.forEach(function (magicHat) {
                magicHat.destroy();
                magicHat.clearTimer();
            });
        }
        if (this.arr_Hook) //hook销毁
         {
            this.arr_Hook.forEach(function (hook) {
                hook.hookDestroy();
            });
        }
        if (this.arr_ForceBall) //forceball销毁
         {
            this.arr_ForceBall.forEach(function (forceball) {
                forceball.removeEvent();
                forceball.destroy();
            });
        }
        if (this.arr_Laser) //laser销毁
         {
            this.arr_Laser.forEach(function (laser) {
                laser.clearTimer();
                laser.destroy();
            });
        }
        if (this.arr_Spider) //蜘蛛销毁
         {
            this.arr_Spider.forEach(function (spider) {
                spider.clearTimer();
            });
        }
        if (this.arr_bounceDrum) {
            this.arr_bounceDrum.forEach(function (bounceDrum) {
                bounceDrum.clearTimer();
            });
        }
    };
    /**鼠标点下 */
    GamePage.prototype.onMouseDown = function () {
        this.isMouseDown = true;
    };
    /**鼠标抬起 */
    GamePage.prototype.onMouseUp = function () {
        this.isMouseDown = false;
        this.lastMousePos.x = null;
        this.lastMousePos.y = null;
    };
    GamePage.prototype.onTeach = function () {
        this.shopDialog.set(1, true);
    };
    GamePage.prototype.onSuper = function () {
        console.log("获得超能力");
        if (PlayerData_1.PlayerData.ins.super > 0) {
            PlayerData_1.PlayerData.ins.super--;
            this.isOpenSuper = true;
            this.updateSuper();
        }
        else {
            this.shopDialog.show();
            this.shopDialog.set(2, true);
        }
    };
    GamePage.prototype.oncleic = function (e) {
        console.log(e.traget);
    };
    /**绑定动画完成 */
    GamePage.prototype.addAnimationOver = function () {
        this.doorOpen.ani5.on(Laya.Event.COMPLETE, this, this.doorAniEvent, [5]);
        this.doorOpen.ani4.on(Laya.Event.COMPLETE, this, this.doorAniEvent, [4]);
        this.doorOpen.ani3.on(Laya.Event.COMPLETE, this, this.doorAniEvent, [3]);
        this.doorOpen.ani2.on(Laya.Event.COMPLETE, this, this.doorAniEvent, [2]);
        this.doorOpen.ani1.on(Laya.Event.COMPLETE, this, this.doorAniEvent, [1]);
    };
    ////////////////////////////////////////////////////////////////////////////////////////事件处理
    /**开门动画完成处理时间 */
    GamePage.prototype.doorAniEvent = function (index) {
        switch (index) {
            case 1: //用刀划开盒子
                this.afterCute();
                this.scene.ani1.visible = false;
                this.doorOpen.visible = false; //关闭动画层  
                Laya.MouseManager.enabled = true;
                break;
            case 2: //用胶带封住盒子
                this.closeDoor();
                this.scene.ani2.visible = false;
                this.doorOpen.visible = false; //关闭动画层  
                break;
            case 3: //吃到糖果显示计分板
                this.scene.ani3.visible = false;
                Laya.MouseManager.enabled = true;
                break;
            case 4:
                this.scene.ani4.visible = false;
                this.doorOpen.visible = false; //关闭动画层  
                break;
            case 5: //重新开始 或者 下一关。关闭计分板 打开箱子操作
                this.scene.ani5.visible = false;
                this.doorOpen.visible = false; //关闭动画层
                // this.doorOpen.visible = false;//关闭动画层                  
                break;
        }
    };
    /**事件 重玩 效果闪白光 ，重开*/
    GamePage.prototype.onReGame = function () {
        console.log("重玩");
        this.removeEvents();
        Laya.timer.loop(10, this, this.shooooo);
        this.score = 0;
        this.isEated = false;
        this.isToOne = false;
        this.isReplay = true;
        this.showSocre();
        this.UpdateData(this.quarterIndex + "-" + this.boxIndex, this.cardIndex, false);
        //禁止鼠标事件
        Laya.MouseManager.enabled = false;
    };
    /**白闪效果 */
    GamePage.prototype.shooooo = function () {
        if (this.scene.img_replay.alpha >= 1) {
            this.alphaZ = -1;
        }
        else if (this.scene.img_replay.alpha <= 0) {
            if (this.alphaZ == -1) {
                Laya.timer.clear(this, this.shooooo);
                this.alphaZ = 1;
                return;
            }
            this.alphaZ = 1;
        }
        this.scene.img_replay.alpha += this.alphaZ * 0.01 + this.alphaZ * (1 - this.scene.img_replay.alpha) / 5;
    };
    /**事件 菜单 */
    GamePage.prototype.onMenu = function () {
        console.log("菜单");
        this.menuUI.visible = true;
    };
    /**事件 吃到糖果->下一关*/
    GamePage.prototype.onNextRound = function () {
        this.removeEvents();
        this.score = 0;
        this.showSocre();
        //如果是最后一个关卡，跳到下一个盒子
        this.nextBox();
        /**需要初始化的数据 */
        this.DataInit();
        this.UpdateData(this.quarterIndex + "-" + this.boxIndex, ++this.cardIndex, false);
        this.doorOpen.ani1.gotoAndStop(0);
        // this.doorOpen.img_xiaodao.y = 850;
    };
    /**需要初始化的数据 */
    GamePage.prototype.DataInit = function () {
        this.arr_RemRope = undefined;
        this.arr_RemRope2 = undefined;
        this.isReplay = false;
        Laya.MouseManager.enabled = false;
        //设置是否被吃
        this.isEated = false;
        this.isToOne = false;
        //开门动画可是
        this.doorOpen.visible = true;
        this.doorOpen.img_xiaodao.visible = true;
        //路径重置
        this.roadIndex = 0;
        //背景皮肤恢复
        this.scene.img_gameBg2.skin = "";
        this.scene.img_gameBg3.skin = "";
        //按钮状态初始化
        this.scene.doorOpen.btn_Next.skin = "publicAssets/btn_1.png";
    };
    /**如果是最后一个关卡，跳到下一个盒子 （未测试）*/
    GamePage.prototype.nextBox = function () {
        if (this.cardIndex == 24) {
            this.boxIndex++;
            this.cardIndex = -1;
            if (this.boxIndex == 4) {
                this.quarterIndex++;
                this.boxIndex = 0;
            }
            if (this.quarterIndex == 2) {
                //通关逻辑
            }
        }
    };
    /**事件 吃到糖果->重玩  效果开门重开 */
    GamePage.prototype.onReplay = function () {
        console.log("重玩  效果开门重开");
        this.removeEvents();
        this.showSocre();
        Laya.MouseManager.enabled = false;
        this.score = 0;
        this.doorOpen.visible = true;
        this.isReplay = true;
        this.isEated = false;
        this.isToOne = false;
        this.doorOpen.ani4.play(0, false);
        // this.doorOpen.img_xiaodao.y = 840;
        this.UpdateData(this.quarterIndex + "-" + this.boxIndex, this.cardIndex, false);
    };
    /**事件 继续游戏 */
    GamePage.prototype.onContinue = function () {
        this.menuUI.visible = false;
        //开始游戏
    };
    /**事件 选择关卡*/
    GamePage.prototype.onSelectRound = function () {
        //选择关卡
        this.isMain = false;
        this.doorOpen.visible = true;
        // this.doorOpen.ani2.gotoAndStop(25);    
        this.doorOpen.img_xiaodao.visible = false;
        this.doorOpen.ani2.play(25, false);
        // GameManager.ins_.getMediator(GameData.SELECT_ROUND_MEDIATOR).runRound();
    };
    /**事件 主界面 */
    GamePage.prototype.onMainMenu = function () {
        //跳到主界面    
        this.isMain = true;
        this.doorOpen.visible = true;
        this.doorOpen.ani2.play(0, false);
        this.doorOpen.img_xiaodao.visible = false;
        // GameManager.ins_.getMediator(GameData.START_GAME_MEDIATOR).runRound();        
    };
    /**事件 超能力获取 */
    GamePage.prototype.onShopSuper = function () {
        console.log("获得超能力");
        if (PlayerData_1.PlayerData.ins.super > 0) {
            PlayerData_1.PlayerData.ins.super--;
            this.isOpenSuper = true;
        }
        else {
            this.shopDialog.show();
        }
    };
    /**退出游戏界面 */
    GamePage.prototype.exitGame = function () {
        // this.dispose();
    };
    /////////////////////////////////////////////////////////////////////////////状态处理
    /**用刀划开盒子后 */
    GamePage.prototype.afterCute = function () {
        Laya.stage.on(Laya.Event.MOUSE_DOWN, this, this.onMouseDown);
        Laya.stage.on(Laya.Event.MOUSE_UP, this, this.onMouseUp);
    };
    /**用胶带封住盒子后*/
    GamePage.prototype.closeDoor = function () {
        if (this.isMain) {
            Laya.Scene.open("StartGame.scene");
        }
        else {
            Laya.Scene.open("SelectRound/SelectRound.scene", true, [this.quarterIndex, this.boxIndex]);
        }
        //舞台尺寸
        Laya.stage.width = 750;
        Laya.stage.height = 1334;
    };
    /**吃到糖果显示计分面板 */
    GamePage.prototype.showSocreMenu = function () {
        var door = this.doorOpen;
        var str = "";
        door.img_star1.skin = "gameView/gameDoor/noStar.png";
        door.img_star2.skin = "gameView/gameDoor/noStar.png";
        door.img_star3.skin = "gameView/gameDoor/noStar.png";
        switch (this.score) {
            case 0:
                str = "菜鸡";
                break;
            case 1:
                str = "可怜一颗星";
                door.img_star1.skin = "gameView/gameDoor/getStar.png";
                break;
            case 2:
                str = "中规中矩";
                door.img_star1.skin = "gameView/gameDoor/getStar.png";
                door.img_star3.skin = "gameView/gameDoor/getStar.png";
                break;
            case 3:
                str = "超级厉害";
                door.img_star1.skin = "gameView/gameDoor/getStar.png";
                door.img_star3.skin = "gameView/gameDoor/getStar.png";
                door.img_star2.skin = "gameView/gameDoor/getStar.png";
                break;
            default:
                console.error("没有这个分数");
        }
        door.lab_Content.text = str;
    };
    /**吃到星星数量 */
    GamePage.prototype.showSocre = function () {
        switch (this.score) {
            case 0:
                this.scene.ani1.gotoAndStop(0);
                this.scene.ani2.gotoAndStop(0);
                this.scene.ani3.gotoAndStop(0);
                break;
            case 1:
                this.scene.ani1.play(0, false);
                break;
            case 2:
                this.scene.ani2.play(0, false);
                break;
            case 3:
                this.scene.ani3.play(0, false);
                break;
        }
    };
    ////////////////////////////////////////////////界面逻辑处理
    GamePage.prototype.UpdateData = function (mapWhere, mapId, isNew) {
        Laya.Physics.enable({ allowSleeping: true, gravity: 12 });
        // Laya.PhysicsDebugDraw.enable();
        this.mapConfig = MapConfig_1.Config.ConfigManger.ins.getMapConfig(mapWhere, mapId);
        if (!this.mapConfig) {
            alert("关卡为配置，请配置后再调试");
            Laya.stage.height = 1334;
            Laya.stage.width = 750;
            Laya.Scene.open("SelectRound/SelectRound.scene", true, [this.quarterIndex, this.boxIndex]);
        }
        console.log(this.mapConfig);
        //背景初始化
        this.setBackground(this.mapConfig.arr_MapSkin, this.mapConfig.arr_MapSkinPos, this.mapConfig.screenRoad);
        //怪物初始化
        this.monsterInit(this.mapConfig.monster);
        //钩子
        this.hookInit(this.mapConfig.arr_Hook);
        //绳子数据初始化
        this.ropeInit(this.mapConfig.arr_Rope, this.mapConfig.arr_Rope2, this.arr_Hook);
        //星星数据初始化
        this.starInit(this.mapConfig.arr_Star);
        //糖果数据初始化
        this.candyInit(this.mapConfig.candyConfig, this.mapConfig.candyConfig2, this.mapConfig.arr_Rope.length, this.mapConfig.arr_Rope2.length, this.mapConfig.arr_Knife, this.mapConfig.arr_Laser);
        //泡泡数据初始化
        this.balloonInit(this.mapConfig.arr_Balloon);
        //帽子数据初始化
        this.magicHatInit(this.mapConfig.arr_MagicHat);
        //锥子数据初始化
        this.knifeInit(this.mapConfig.arr_Knife);
        //蜘蛛数据初始化
        this.spiderInit(this.mapConfig.arr_Spider);
        //推力球数据初始化
        this.forceBallInit(this.mapConfig.arr_Forceball);
        //初始化开门动画
        this.openDoorInit(this.mapConfig.arr_Rope, this.mapConfig.arr_Rope2);
        //激光数据初始化
        this.laserInit(this.mapConfig.arr_Laser);
        //弹力鼓数据初始化
        this.bounceDrumInit(this.mapConfig.arr_bounceDrum);
        //绳子寻找糖果
        Laya.timer.loop(1, this, this.ropeToCandy);
        //绳子寻找破碎糖果
        if (this.candy2)
            Laya.timer.loop(1, this, this.ropeToCandy2);
        //割绳检测
        Laya.timer.loop(16, this, this.mouseCute);
        //糖果检测 
        Laya.timer.loop(1, this, this.candyTest);
    };
    /***场景初始化*/
    GamePage.prototype.setBackground = function (arr_MapSkin, arr_MapSkinPos, screenRoad) {
        if (!this.screenRoad)
            this.screenRoad = [];
        this.screenRoad = screenRoad;
        //滚动设置
        this.scene.panel_GameWorld.y = 0;
        var bi = this.screenHeight / 800;
        //创建数组 装上img
        var arr_Bg = [];
        arr_Bg[0] = this.scene.img_gameBg;
        arr_Bg[1] = this.scene.img_gameBg2;
        arr_Bg[2] = this.scene.img_gameBg3;
        for (var i = 0; i < arr_MapSkin.length; i++) {
            if (i == 0) {
                this.scene.img_gameBg.skin = "gameView/gameBg/boxBg_" + (this.boxIndex + 1) + ".png";
                continue;
            }
            if (arr_MapSkinPos[i].height) {
                arr_Bg[i].height = arr_MapSkinPos[i].height;
            }
            if (arr_MapSkinPos[i].width) {
                arr_Bg[i].width = arr_MapSkinPos[i].width;
            }
            //设置皮肤
            arr_Bg[i].skin = arr_MapSkin[i];
            arr_Bg[i].height = arr_MapSkinPos[i].height * bi;
            //位置设置
            arr_Bg[i].x = arr_MapSkinPos[i].x;
            arr_Bg[i].y = arr_MapSkinPos[i].y * bi;
            if (arr_Bg[i].x == arr_Bg[i - 1].x) { //竖
                arr_Bg[i].width = arr_Bg[i - 1].width;
            }
            else { //横
                arr_Bg[i].height = this.screenHeight;
            }
        }
        //地图高度初始化
        this.mapHight = this.screenHeight;
        //地图宽度初始化
        this.mapWidth = 480;
        if (arr_MapSkin.length >= 2) {
            //获取地图总高
            this.mapHight = arr_Bg[arr_Bg.length - 1].y + arr_Bg[arr_Bg.length - 1].height;
            //获取地图总宽
            this.mapWidth = arr_Bg[arr_Bg.length - 1].x + arr_Bg[arr_Bg.length - 1].width;
        }
        //sprite 高度
        this.scene.panel_GameWorld.height = this.mapHight;
        //屏幕位置初始化
        this.initMapPos();
        //如果地图的皮肤大于1 开始滚动
        this.newDoorUi();
    };
    /**屏幕位置初始化 */
    GamePage.prototype.initMapPos = function () {
        if (this.screenRoad) {
            if (this.mapHight > this.screenHeight)
                this.scene.panel_GameWorld.y = -this.screenRoad[this.roadIndex];
            if (this.mapWidth > 480)
                this.scene.panel_GameWorld.x = -this.screenRoad[this.roadIndex];
        }
        else {
            this.scene.panel_GameWorld.y = 0;
            this.scene.panel_GameWorld.x = 0;
        }
    };
    /**背景移动 */
    GamePage.prototype.runBg = function () {
        //是否可运动    
        if (!this.screenRoad[this.roadIndex + 1] && this.screenRoad[this.roadIndex] == 0) {
            Laya.timer.clear(this, this.runBg);
            return;
        }
        //获取方向
        var Ca = this.screenRoad[this.roadIndex + 1] - this.screenRoad[this.roadIndex];
        Ca = -Ca / 400;
        //竖排
        if (this.mapHight > this.screenHeight) {
            this.scene.panel_GameWorld.y += Ca;
            if (this.scene.panel_GameWorld.y < -this.screenRoad[this.roadIndex + 1] + 10 && this.scene.panel_GameWorld.y > -this.screenRoad[this.roadIndex + 1] - 10) { //检测到到达目标点
                this.roadIndex++;
                if (!this.screenRoad[this.roadIndex + 1]) {
                    Laya.MouseManager.enabled = true;
                    Laya.timer.clear(this, this.runBg);
                    Laya.timer.loop(1, this, this.followCandy, [90]);
                    //一出现就在线上的蜘蛛
                    this.spiderMove();
                    //星星是否开始计时
                    this.arr_Star.forEach(function (star) {
                        star.startToCount();
                    });
                    //开启鼠标事件
                    return;
                }
            }
        }
        //横排
        if (this.mapWidth > 480) {
            this.scene.panel_GameWorld.x += Ca;
            if (this.scene.panel_GameWorld.x < -this.screenRoad[this.roadIndex + 1] + 10 && this.scene.panel_GameWorld.x > -this.screenRoad[this.roadIndex + 1]) { //检测到到达目标点
                this.roadIndex++;
                if (!this.screenRoad[this.roadIndex + 1]) {
                    Laya.MouseManager.enabled = true;
                    Laya.timer.clear(this, this.runBg);
                    //蜘蛛
                    this.spiderMove();
                    Laya.timer.loop(1, this, this.followCandy, [0]);
                    //星星是否开始计时
                    this.arr_Star.forEach(function (star) {
                        star.startToCount();
                    });
                    //开启鼠标事件
                    return;
                }
            }
        }
        //同步移动
        this.moveTogether();
    };
    GamePage.prototype.spiderMove = function () {
        if (this.mapConfig.arr_Spider.length == 0)
            return;
        if (this.arr_Spider) {
            this.arr_Spider.forEach(function (spider) {
                if (spider.candy)
                    spider.moveStart();
            });
        }
    };
    /**跟踪糖果 */
    GamePage.prototype.followCandy = function (rotation) {
        var candyPosValue;
        var followValue;
        if (rotation == 0) { //水平
            candyPosValue = this.candy.arr_Sp[0].x;
            followValue = 480 / 2;
            this.mouseTail.setPosX(+this.scene.panel_GameWorld.x, 0);
        }
        else { //竖直
            this.mouseTail.setPosX(0, -this.scene.panel_GameWorld.y);
            candyPosValue = this.candy.arr_Sp[0].y;
            followValue = this.screenHeight / 2;
        }
        //**设置位置差 拖尾 */
        //跟随    0     
        if (rotation == 90 && candyPosValue > followValue && candyPosValue < this.mapHight - followValue) {
            this.scene.panel_GameWorld.y -= candyPosValue - followValue + this.scene.panel_GameWorld.y;
            if (this.mapHight + this.scene.panel_GameWorld.y <= this.screenHeight) {
                Laya.timer.clear(this, this.followCandy);
            }
            this.moveTogether();
        }
        //跟随 90
        //跟随         
        if (rotation == 0 && candyPosValue > followValue && candyPosValue < this.mapWidth - followValue) {
            this.scene.panel_GameWorld.x -= candyPosValue - followValue + this.scene.panel_GameWorld.x;
            if (this.mapWidth + this.scene.panel_GameWorld.x <= 480) {
                Laya.timer.clear(this, this.followCandy);
            }
            this.moveTogether();
        }
    };
    /**绳子寻找破碎糖果**/
    GamePage.prototype.ropeToCandy2 = function () {
        var _this = this;
        var obj = {};
        var rope;
        var add = 0;
        var speContorl = 1;
        var dic;
        var speed = GameConfig_1.default.ROPE_TO_CANDY_SPEED;
        for (var i = 0; i < this.arr_Rope2.length; i++) {
            rope = this.arr_Rope2[i];
            dic = Math.sqrt(Math.pow(rope.ropePointsArray[rope.ropePointsArray.length - 1].sp.x - this.candy2.getCandySprite(0).x, 2) + Math.pow(rope.ropePointsArray[rope.ropePointsArray.length - 1].sp.y - this.candy2.getCandySprite(0).y, 2));
            if (rope.ropePointsArray[1].style == "hook3") { //弹性绳子
                if (dic < 200) { //进入加速范围
                    speContorl = 0.1;
                }
                speed = GameConfig_1.default.ROPE_JUMP__TO_CANDY_SPEED;
            }
            obj.x = speed / speContorl * this.rotationDeal(rope.ropePointsArray[rope.ropePointsArray.length - 1].sp.x, rope.ropePointsArray[rope.ropePointsArray.length - 1].sp.y, this.candy2.getCandySprite(0).x, this.candy2.getCandySprite(0).y, "cos");
            obj.y = speed / speContorl * this.rotationDeal(rope.ropePointsArray[rope.ropePointsArray.length - 1].sp.x, rope.ropePointsArray[rope.ropePointsArray.length - 1].sp.y, this.candy2.getCandySprite(0).x, this.candy2.getCandySprite(0).y, "sin");
            rope.ropePointsArray[rope.ropePointsArray.length - 1].body.setVelocity(obj);
            // rope.ropePointsArray[rope.ropePointsArray.length - 1].body.applyForceToCenter({x:obj.x,y:obj.y});
            if (dic < 15) {
                add++;
            }
            speContorl = 1;
        }
        //检测绳子是否全部帮上    
        if (add == this.arr_Rope2.length) {
            Laya.timer.clear(this, this.ropeToCandy2);
            var _loop_1 = function (i) {
                this_1.arr_Rope2[i].connectCandy(this_1.candy2, i);
                this_1.arr_Rope2[i].ropePointsArray[this_1.arr_Rope2.length - 1].sp.getComponents(Laya.RigidBody)[0].setVelocity({ x: 0, y: 0 });
                if (this_1.arr_Spider) {
                    this_1.arr_Spider.forEach(function (spider) {
                        if (spider.sp.x <= _this.arr_Rope2[i].ropePointsArray[0].sp.x + 1 && spider.sp.x >= _this.arr_Rope2[i].ropePointsArray[0].sp.x - 1 && spider.sp.y >= _this.arr_Rope2[i].ropePointsArray[0].sp.y - 1 && spider.sp.y <= _this.arr_Rope2[i].ropePointsArray[0].sp.y + 1) {
                            if (!spider.candy)
                                spider.foundCandy(_this.arr_Rope2[i], _this.candy2, true);
                            else {
                                spider.foundCandy(_this.arr_Rope2[i], _this.candy2, false);
                            }
                        }
                    });
                }
            };
            var this_1 = this;
            //连接糖果
            for (var i = 0; i < this.arr_Rope2.length; i++) {
                _loop_1(i);
            }
            this.candy2.set("useg");
            //获取记录位置信息
            for (var z = 0; z < this.arr_Rope2.length; z++) {
                if (this.arr_RemRope2 === undefined) {
                    this.arr_RemRope2 = new Array();
                }
                this.arr_RemRope2.push(this.arr_Rope2[z].getRemRope());
            }
        }
    };
    /**ropeToCandy */
    GamePage.prototype.ropeToCandy = function () {
        var _this = this;
        var obj = {};
        var rope;
        var add = 0;
        var speContorl = 1;
        var dic;
        var speed = GameConfig_1.default.ROPE_TO_CANDY_SPEED;
        for (var i = 0; i < this.arr_Rope.length; i++) {
            rope = this.arr_Rope[i];
            dic = Math.sqrt(Math.pow(rope.ropePointsArray[rope.ropePointsArray.length - 1].sp.x - this.candy.getCandySprite(0).x, 2) + Math.pow(rope.ropePointsArray[rope.ropePointsArray.length - 1].sp.y - this.candy.getCandySprite(0).y, 2));
            if (rope.ropePointsArray[1].style == "hook3") { //弹性绳子
                if (dic < 200) { //进入加速范围
                    speContorl = 0.1;
                }
                speed = GameConfig_1.default.ROPE_JUMP__TO_CANDY_SPEED;
            }
            obj.x = speed / speContorl * this.rotationDeal(rope.ropePointsArray[rope.ropePointsArray.length - 1].sp.x, rope.ropePointsArray[rope.ropePointsArray.length - 1].sp.y, this.candy.getCandySprite(0).x, this.candy.getCandySprite(0).y, "cos");
            obj.y = speed / speContorl * this.rotationDeal(rope.ropePointsArray[rope.ropePointsArray.length - 1].sp.x, rope.ropePointsArray[rope.ropePointsArray.length - 1].sp.y, this.candy.getCandySprite(0).x, this.candy.getCandySprite(0).y, "sin");
            rope.ropePointsArray[rope.ropePointsArray.length - 1].body.setVelocity(obj);
            // rope.ropePointsArray[rope.ropePointsArray.length - 1].body.applyForceToCenter({x:obj.x,y:obj.y});
            if (dic < 15) {
                add++;
            }
            speContorl = 1;
            ///////////////开门等待
            if (i == this.maxLongIndex) {
                this.doorOpen.img_xiaodao.y = (this.screenHeight + 100) * dic / this.maxLongRope - 339;
            }
        }
        //检测绳子是否全部帮上    
        if (add == this.arr_Rope.length) {
            Laya.timer.clear(this, this.ropeToCandy);
            var _loop_2 = function (i) {
                this_2.arr_Rope[i].connectCandy(this_2.candy, i);
                this_2.arr_Rope[i].ropePointsArray[this_2.arr_Rope.length - 1].sp.getComponents(Laya.RigidBody)[0].setVelocity({ x: 0, y: 0 });
                if (this_2.arr_Spider) {
                    this_2.arr_Spider.forEach(function (spider) {
                        if (spider.sp.x <= _this.arr_Rope[i].ropePointsArray[0].sp.x + 1 && spider.sp.x >= _this.arr_Rope[i].ropePointsArray[0].sp.x - 1 && spider.sp.y >= _this.arr_Rope[i].ropePointsArray[0].sp.y - 1 && spider.sp.y <= _this.arr_Rope[i].ropePointsArray[0].sp.y + 1) {
                            if (!spider.candy)
                                spider.foundCandy(_this.arr_Rope[i], _this.candy, true);
                            else {
                                spider.foundCandy(_this.arr_Rope[i], _this.candy, false);
                            }
                        }
                    });
                }
            };
            var this_2 = this;
            //连接糖果
            for (var i = 0; i < this.arr_Rope.length; i++) {
                _loop_2(i);
            }
            this.candy.set("useg");
            //获取记录位置信息
            for (var z = 0; z < this.arr_Rope.length; z++) {
                if (this.arr_RemRope === undefined) {
                    this.arr_RemRope = new Array();
                }
                this.arr_RemRope.push(this.arr_Rope[z].getRemRope());
            }
            //开门动画处理
            // if(this.isInit)
            if (!this.isReplay) {
                if (this.doorOpen.img_xiaodao.y > -200) {
                    // this.doorOpen.img_xiaodao.visible = true;
                    var num = this.doorOpen.img_xiaodao.y + 339;
                    num = num / 15;
                    Laya.timer.loop(50, this, this.openDoorDeal, [num]);
                }
                else {
                    this.openDoorEnd();
                }
            }
            else {
                //开启鼠标事件
                Laya.MouseManager.enabled = true;
            }
        }
    };
    GamePage.prototype.openDoorDeal = function (num) {
        this.doorOpen.img_xiaodao.y += -num;
        if (this.doorOpen.img_xiaodao.y < -330) {
            this.openDoorEnd();
            Laya.timer.clear(this, this.openDoorDeal);
        }
    };
    GamePage.prototype.openDoorEnd = function () {
        this.doorOpen.visible = true;
        this.doorOpen.ani1.play(0, false);
        this.doorOpen.img_xiaodao.y = -339;
        this.doorOpen.img_xiaodao.visible = false;
        // Laya.MouseManager.enabled = true;
        if (this.mapHight > this.screenHeight || this.mapWidth > 480) {
            //关闭鼠标事件
            Laya.MouseManager.enabled = false;
            Laya.timer.loop(1, this, this.runBg);
            return;
        }
        //一出现就在线上的蜘蛛
        this.spiderMove();
        //星星是否运动
        this.arr_Star.forEach(function (star) {
            star.startToCount();
        });
    };
    /**开门动画初始化 */
    GamePage.prototype.openDoorInit = function (arr_Rope, arr_Rope2) {
        this.maxLongIndex = 0;
        this.maxLongRope = Math.sqrt(Math.pow(this.arr_Rope[0].ropePointsArray[this.arr_Rope[0].ropePointsArray.length - 1].sp.x - this.candy.getCandySprite(0).x, 2) + Math.pow(this.arr_Rope[0].ropePointsArray[this.arr_Rope[0].ropePointsArray.length - 1].sp.y - this.candy.getCandySprite(0).y, 2));
        for (var i = 0; i < arr_Rope.length; i++) {
            var dic = Math.sqrt(Math.pow(this.arr_Rope[i].ropePointsArray[this.arr_Rope[i].ropePointsArray.length - 1].sp.x - this.candy.getCandySprite(0).x, 2) + Math.pow(this.arr_Rope[i].ropePointsArray[this.arr_Rope[i].ropePointsArray.length - 1].sp.y - this.candy.getCandySprite(0).y, 2));
            if (this.maxLongRope < dic) {
                this.maxLongIndex = i;
                this.maxLongRope = dic;
            }
        }
    };
    /**弹力鼓初始化 */
    GamePage.prototype.bounceDrumInit = function (arr_bounceDrum) {
        if (!arr_bounceDrum)
            return;
        if (!this.arr_bounceDrum) {
            this.arr_bounceDrum = new Array();
        }
        var bounceDrum;
        for (var i = 0; i < arr_bounceDrum.length; i++) {
            if (this.arr_bounceDrum[i] === undefined) {
                bounceDrum = new bounceDrum_1.BouceDrum(this.scene.panel_GameWorld);
                this.arr_bounceDrum.push(bounceDrum);
            }
            this.arr_bounceDrum[i].init(arr_bounceDrum[i]);
        }
    };
    /**蜘蛛数据初始化 */
    GamePage.prototype.spiderInit = function (arr_Spider) {
        if (!arr_Spider[0])
            return;
        if (this.arr_Spider == undefined)
            this.arr_Spider = new Array();
        for (var i = 0; i < arr_Spider.length; i++) {
            if (this.arr_Spider[i]) {
                this.arr_Spider[i].update({ "spider_X": arr_Spider[i].spider_X, "spider_Y": arr_Spider[i].spider_Y });
            }
            else {
                this.arr_Spider[i] = new Spider_1.default(this.scene.panel_GameWorld);
                this.arr_Spider[i].init({ "spider_X": arr_Spider[i].spider_X, "spider_Y": arr_Spider[i].spider_Y }, this, this.failGame);
            }
            // 
        }
        console.log(this.arr_Spider);
    };
    /**星星初始化 */
    GamePage.prototype.starInit = function (starConfig) {
        if (this.arr_Star === undefined)
            this.arr_Star = new Array();
        var moveArray = new Array();
        var rotateArray = new Array();
        var configArray1 = new Array();
        var configArray2 = new Array();
        for (var i = 0; i < 3; i++) {
            if (this.arr_Star[i]) {
                this.arr_Star[i].update(starConfig[i]);
                //检查是否有移动星星
                if (starConfig[i].move[0]) {
                    starConfig[i].star_X = this.arr_Star[i].sp.x;
                    starConfig[i].star_Y = this.arr_Star[i].sp.y;
                    this.arr_Star[i].isGoing = true;
                    moveArray.push(this.arr_Star[i]);
                    configArray1.push(starConfig[i]);
                }
                //检查是否有旋转星星
                if (starConfig[i].rotateLength != 0) {
                    rotateArray.push(this.arr_Star[i]);
                    configArray2.push(starConfig[i]);
                }
            }
            else {
                this.arr_Star[i] = new Star_1.default(this.scene.panel_GameWorld);
                this.arr_Star[i].init(starConfig[i]);
                //检查是否有移动星星
                if (starConfig[i].move[0]) {
                    starConfig[i].star_X = this.arr_Star[i].sp.x;
                    starConfig[i].star_Y = this.arr_Star[i].sp.y;
                    this.arr_Star[i].isGoing = true;
                    moveArray.push(this.arr_Star[i]);
                    configArray1.push(starConfig[i]);
                }
                //检查是否有旋转星星
                if (starConfig[i].rotateLength != 0) {
                    rotateArray.push(this.arr_Star[i]);
                    configArray2.push(starConfig[i]);
                }
            }
        }
        if (moveArray[0]) {
            Laya.timer.frameLoop(1, this, this.star_MoveBySelf, [moveArray, configArray1]);
        }
        if (rotateArray[0]) {
            Laya.timer.frameLoop(1, this, this.star_RotateByOnePoint, [rotateArray, configArray2]);
        }
    };
    /**怪物数据初始化 */
    GamePage.prototype.monsterInit = function (monsterConfig) {
        if (this.monster) {
            this.monster.update(monsterConfig);
        }
        else {
            this.monster = new Monster_1.default(monsterConfig, this.scene.panel_GameWorld);
        }
        this.scene.gamePos.x = this.monster.sp.x;
        this.scene.gamePos.y = this.monster.sp.y;
        this.scene.gamePos.skin = "gameView/gamePos/pos" + (this.boxIndex + 1) + ".png";
    };
    /**糖果数据初始化 */
    GamePage.prototype.candyInit = function (candyConfig, candyConfig2, num, num2, arr_Knife, arr_Laser) {
        if (!this.candy) {
            this.candy = new Candy_1.default(this.scene.panel_GameWorld);
            this.candy.init({ "x": candyConfig.candy_X, "y": candyConfig.candy_Y, "style": candyConfig.style }, num);
            this.candy.ToOneAnimation();
            /**-------是否初始化糖果碎片----- */
            if (arr_Knife[0] || arr_Laser[0]) {
                this.candy.createCandyApart();
            }
        }
        else {
            this.candy.update({ "x": candyConfig.candy_X, "y": candyConfig.candy_Y, "style": candyConfig.style }, num);
            /**-------是否初始化糖果碎片----- */
            if (arr_Knife[0] || arr_Laser[0]) {
                this.candy.createCandyApart();
            }
        }
        ////////////第二个糖果初始化
        if (!candyConfig2) {
            this.isToOne = true;
            return;
        } //没有糖果二，就默认为已经融合了。
        if (!this.candy2) {
            this.candy2 = new Candy_1.default(this.scene.panel_GameWorld);
            this.candy2.init({ "x": candyConfig2.candy_X, "y": candyConfig2.candy_Y, "style": candyConfig2.style }, num2);
            /**-------是否初始化糖果碎片----- */
            if (arr_Knife[0] || arr_Laser[0]) {
                this.candy2.createCandyApart();
            }
        }
        else {
            this.candy2.update({ "x": candyConfig2.candy_X, "y": candyConfig2.candy_Y, "style": candyConfig2.style }, num2);
            /**-------是否初始化糖果碎片----- */
            if (arr_Knife[0] || arr_Laser[0]) {
                this.candy2.createCandyApart();
            }
        }
        // Laya.timer.loop(500,this,function(){
        //     console.log(this.candy.arr_Sp[0].x + " , " + this.candy.arr_Sp[0].y );
        //     console.log(this.candy.arr_Sp[0].parent);
        // });
    };
    /**钩子数据初始化 */
    GamePage.prototype.hookInit = function (arr_Hook) {
        if (this.arr_Hook === undefined)
            this.arr_Hook = new Array();
        for (var i = 0; i < arr_Hook.length; i++) {
            if (this.arr_Hook[i]) {
                this.arr_Hook[i].update({ "hook_X": arr_Hook[i].hook_X, "hook_Y": arr_Hook[i].hook_Y, "style": arr_Hook[i].style, "rotation": arr_Hook[i].rotation, "length": arr_Hook[i].length, "percent": arr_Hook[i].percent }, arr_Hook[i].size);
            }
            else {
                this.arr_Hook[i] = new Hook_1.default(this.scene.panel_GameWorld);
                this.arr_Hook[i].init({ "hook_X": arr_Hook[i].hook_X, "hook_Y": arr_Hook[i].hook_Y, "style": arr_Hook[i].style, "rotation": arr_Hook[i].rotation, "length": arr_Hook[i].length, "percent": arr_Hook[i].percent }, arr_Hook[i].size);
            }
        }
        console.log(this.arr_Hook);
    };
    /**绳子数据初始化 */
    GamePage.prototype.ropeInit = function (arr_Rope, arr_Rope2, arr_Hook) {
        var rope;
        var hIndex;
        this.arr_Rope = new Array();
        ///普通rope
        for (var i = 0; i < arr_Rope.length; i++) {
            rope = new Rope_1.default(this.scene.panel_GameWorld);
            if (this.arr_RemRope === undefined || this.arr_Hook[arr_Rope[i].hookIndex].style == "hook3") {
                rope.setHookIndex(arr_Rope[i].hookIndex); //铆钉节点
                rope.init(arr_Hook[rope.hookIndex].hook_X, arr_Hook[rope.hookIndex].hook_Y, arr_Rope[i].num, arr_Hook[rope.hookIndex].style);
            }
            else {
                //TO DO
                rope.setHookIndex(arr_Rope[i].hookIndex); //铆钉节点                
                rope.rePlay(this.arr_RemRope[i], arr_Hook[arr_Rope[i].hookIndex].style);
            }
            this.arr_Rope.push(rope);
            // rope.ropePointsArray[0].isCanMove(arr_Hook[i]);
        }
        ///碎糖果需求的绳子
        if (arr_Rope2) {
            this.arr_Rope2 = new Array();
            for (var i = 0; i < arr_Rope2.length; i++) {
                rope = new Rope_1.default(this.scene.panel_GameWorld);
                if (this.arr_RemRope2 === undefined || this.arr_Hook[arr_Rope2[i].hookIndex].style == "hook3") {
                    rope.setHookIndex(arr_Rope2[i].hookIndex);
                    rope.init(arr_Hook[rope.hookIndex].hook_X, arr_Hook[rope.hookIndex].hook_Y, arr_Rope2[i].num, arr_Hook[rope.hookIndex].style);
                }
                else {
                    rope.setHookIndex(arr_Rope2[i].hookIndex);
                    rope.rePlay(this.arr_RemRope2[i], arr_Hook[arr_Rope2[i].hookIndex].style);
                }
                this.arr_Rope2.push(rope);
            }
        }
        //滑动条需要绑定绳子
        for (var i = 0; i < this.arr_Hook.length; i++) {
            for (var h = 0; h < this.arr_Rope.length; h++) {
                if (this.arr_Rope[h].hookIndex == i && this.arr_Hook[i].length)
                    this.arr_Hook[i].setRopePoint(this.arr_Rope[h].ropePointsArray[0]);
            }
            for (var h = 0; h < this.arr_Rope2.length; h++) {
                if (this.arr_Rope2[h].hookIndex == i && this.arr_Hook[i].length)
                    this.arr_Hook[i].setRopePoint(this.arr_Rope2[h].ropePointsArray[0]);
            }
        }
    };
    /**泡泡数据初始化 */
    GamePage.prototype.balloonInit = function (arr_Balloon) {
        if (!arr_Balloon[0])
            return;
        if (this.arr_Balloon == undefined)
            this.arr_Balloon = new Array();
        for (var i = 0; i < arr_Balloon.length; i++) {
            if (this.arr_Balloon[i]) {
                this.arr_Balloon[i].update({ "balloon_X": arr_Balloon[i].balloon_X, "balloon_Y": arr_Balloon[i].balloon_Y });
            }
            else {
                this.arr_Balloon[i] = new Balloon_1.default(this.scene.panel_GameWorld);
                this.arr_Balloon[i].init({ "balloon_X": arr_Balloon[i].balloon_X, "balloon_Y": arr_Balloon[i].balloon_Y });
            }
        }
        console.log(this.arr_Balloon);
    };
    /**锥子数据初始化 */
    GamePage.prototype.knifeInit = function (arr_Knife) {
        if (!arr_Knife[0])
            return;
        if (this.arr_Knife == undefined)
            this.arr_Knife = new Array();
        for (var i = 0; i < arr_Knife.length; i++) {
            if (this.arr_Knife[i]) {
                this.arr_Knife[i].update({ "knife_X": arr_Knife[i].knife_X, "knife_Y": arr_Knife[i].knife_Y, "style": arr_Knife[i].style, "rotation": arr_Knife[i].rotation, "v": arr_Knife[i].v, "move": arr_Knife[i].move });
            }
            else {
                this.arr_Knife[i] = new Knife_1.default(this.scene.panel_GameWorld);
                this.arr_Knife[i].init({ "knife_X": arr_Knife[i].knife_X, "knife_Y": arr_Knife[i].knife_Y, "style": arr_Knife[i].style, "rotation": arr_Knife[i].rotation, "v": arr_Knife[i].v, "move": arr_Knife[i].move });
            }
        }
        console.log(this.arr_Knife);
    };
    /**推力球数据初始化 */
    GamePage.prototype.forceBallInit = function (arr_ForceBall) {
        if (!arr_ForceBall[0])
            return;
        if (this.arr_ForceBall == undefined)
            this.arr_ForceBall = new Array();
        for (var i = 0; i < arr_ForceBall.length; i++) {
            if (this.arr_ForceBall[i]) {
                this.arr_ForceBall[i].update({ "forceball_X": arr_ForceBall[i].forceball_X, "forceball_Y": arr_ForceBall[i].forceball_Y, "rotation": arr_ForceBall[i].rotation });
                //碎糖果的推力球注册
                if (!this.candy2)
                    this.arr_ForceBall[i].sp.on(Laya.Event.MOUSE_DOWN, this.arr_ForceBall[i], this.arr_ForceBall[i].forceball_applyForce, [this.candy, this.arr_Balloon]);
                else
                    this.arr_ForceBall[i].sp.on(Laya.Event.MOUSE_DOWN, this.arr_ForceBall[i], this.arr_ForceBall[i].forceball_applyForce, [this.candy, this.arr_Balloon, this.candy2]);
            }
            else {
                this.arr_ForceBall[i] = new ForceBall_1.default(this.scene.panel_GameWorld);
                this.arr_ForceBall[i].init({ "forceball_X": arr_ForceBall[i].forceball_X, "forceball_Y": arr_ForceBall[i].forceball_Y, "rotation": arr_ForceBall[i].rotation });
                //碎糖果的推力球注册
                if (!this.candy2)
                    this.arr_ForceBall[i].sp.on(Laya.Event.MOUSE_DOWN, this.arr_ForceBall[i], this.arr_ForceBall[i].forceball_applyForce, [this.candy, this.arr_Balloon]);
                else
                    this.arr_ForceBall[i].sp.on(Laya.Event.MOUSE_DOWN, this.arr_ForceBall[i], this.arr_ForceBall[i].forceball_applyForce, [this.candy, this.arr_Balloon, this.candy2]);
            }
        }
        console.log(this.arr_ForceBall);
    };
    /**激光数据初始化 */
    GamePage.prototype.laserInit = function (arr_Laser) {
        if (!arr_Laser[0])
            return;
        if (this.arr_Laser == undefined)
            this.arr_Laser = new Array();
        for (var i = 0; i < arr_Laser.length; i++) {
            if (this.arr_Laser[i]) {
                this.arr_Laser[i].update({ "laser_X": arr_Laser[i].laser_X, "laser_Y": arr_Laser[i].laser_Y, "rotation": arr_Laser[i].rotation, "isAdvanceLaser": arr_Laser[i].isAdvanceLaser, "time": arr_Laser[i].time, "move": arr_Laser[i].move });
            }
            else {
                this.arr_Laser[i] = new Laser_1.default(this.scene.panel_GameWorld);
                this.arr_Laser[i].init({ "laser_X": arr_Laser[i].laser_X, "laser_Y": arr_Laser[i].laser_Y, "rotation": arr_Laser[i].rotation, "isAdvanceLaser": arr_Laser[i].isAdvanceLaser, "time": arr_Laser[i].time, "move": arr_Laser[i].move });
            }
        }
        console.log(this.arr_Laser);
    };
    /**帽子初始化 */
    GamePage.prototype.magicHatInit = function (arr_MagicHat) {
        if (!arr_MagicHat[0])
            return;
        if (this.arr_MagicHat == undefined) {
            this.arr_MagicHat = new Array();
        }
        for (var i = 0; i < arr_MagicHat.length; i++) {
            if (this.arr_MagicHat[i]) {
                this.arr_MagicHat[i].update({ "magicHat_X1": arr_MagicHat[i].magicHat_X1, "magicHat_Y1": arr_MagicHat[i].magicHat_Y1, "rotation1": arr_MagicHat[i].rotation1, "move1": arr_MagicHat[i].move1, "rotate1": arr_MagicHat[i].rotate1, "v1": arr_MagicHat[i].v1,
                    "magicHat_X2": arr_MagicHat[i].magicHat_X2, "magicHat_Y2": arr_MagicHat[i].magicHat_Y2, "rotation2": arr_MagicHat[i].rotation2, "move2": arr_MagicHat[i].move2, "rotate2": arr_MagicHat[i].rotate2, "v2": arr_MagicHat[i].v2,
                    "color": arr_MagicHat[i].color });
            }
            else {
                this.arr_MagicHat[i] = new MagicHat_1.default(this.scene.panel_GameWorld);
                this.arr_MagicHat[i].init({ "magicHat_X1": arr_MagicHat[i].magicHat_X1, "magicHat_Y1": arr_MagicHat[i].magicHat_Y1, "rotation1": arr_MagicHat[i].rotation1, "move1": arr_MagicHat[i].move1, "rotate1": arr_MagicHat[i].rotate1, "v1": arr_MagicHat[i].v1,
                    "magicHat_X2": arr_MagicHat[i].magicHat_X2, "magicHat_Y2": arr_MagicHat[i].magicHat_Y2, "rotation2": arr_MagicHat[i].rotation2, "move2": arr_MagicHat[i].move2, "rotate2": arr_MagicHat[i].rotate2, "v2": arr_MagicHat[i].v2,
                    "color": arr_MagicHat[i].color });
            }
        }
        console.log(this.arr_MagicHat);
    };
    ///////////////////////////////////////////////////////////////////////////////////////////////////游戏逻辑↓
    /***糖果检测*/
    GamePage.prototype.candyTest = function () {
        //x 
        var x = this.candy.arr_Sp[0].x - this.scene.panel_GameWorld.x;
        var y = this.candy.arr_Sp[0].y - this.scene.panel_GameWorld.y;
        // console.log(x + "," + y);
        //与怪物的距离检测 - 碎糖果已处理 没测试
        this.testMonster(x, y);
        //与边界的距离检测 - 碎糖果已处理 没测试
        this.testStage(x, y);
        //与星星的距离检测 - 碎糖果已处理 没测试
        this.testStars(x, y);
        //与泡泡的距离检测 - 碎糖果已处理 没测试
        this.testBalloon(x, y);
        //与帽子的距离检测 - 碎糖果已处理 没测试
        this.testHat(x, y);
        //与hook道具的检测 - 碎糖果已处理 没测试
        this.testHook(x, y);
        //与锥子的距离检测 - 碎糖果已处理 没测试 
        this.testKnife(x, y);
        //与推力球的距离检测 - 碎糖果已处理 没测试
        this.testForceBall(x, y);
        //与激光的距离检测  - 碎糖果已处理 没测试
        this.testLaser(x, y);
        //与弹力鼓的距离检测 - 碎糖果已处理 没测试 -注册
        this.testBounceDrum(x, y);
        //与鼠标的距离检测 - 超能力 - 碎糖果已处理
        this.testSuper(x, y);
        //碎糖果与碎糖果的距离检测 
        if (this.candy2)
            this.testCandyAndCandy(x, y);
        // console.log(this.candy.isExistBalloon);
    };
    /**弹力鼓与弹力鼓的距离检测 */
    GamePage.prototype.testBounceDrum = function (x, y) {
        if (!this.arr_bounceDrum)
            return;
        for (var i = 0; i < this.arr_bounceDrum.length; i++) {
            this.arr_bounceDrum[i].testBounceDrum(this.candy, this.candy2, this.scene.panel_GameWorld.x, this.scene.panel_GameWorld.y);
        }
    };
    /**碎糖果与碎糖果的距离检测 */
    GamePage.prototype.testCandyAndCandy = function (x, y) {
        var _this = this;
        var candyOneX = x + this.scene.panel_GameWorld.x;
        var candyOneY = y + this.scene.panel_GameWorld.y;
        var candyTwoX = this.candy2.arr_Sp[0].x + this.scene.panel_GameWorld.x;
        var candyTwoY = this.candy2.arr_Sp[0].y + this.scene.panel_GameWorld.y;
        var dic = this.countDic_Object({ x: candyOneX, y: candyOneY }, { x: candyTwoX, y: candyTwoY });
        if (dic < 40 && this.isToOne == false) { //合并
            this.candy2.CandytoOne(this.candy.arr_Sp[0]);
            this.candy.playAni(this.candy.arr_Sp[0].x, this.candy.arr_Sp[0].y);
            if (this.arr_Balloon) {
                if (this.arr_Balloon[this.candy2.balloonIndex])
                    this.arr_Balloon[this.candy2.balloonIndex].balloon_ClickBoom(this.candy2);
            }
            this.isToOne = true;
            //判断是否有再泡泡中,参数重置
            if (!this.arr_Balloon)
                return;
            this.arr_Balloon.forEach(function (Balloon) {
                if (_this.candy.isExistBalloon) {
                    _this.candy.arr_Body.forEach(function (body) {
                        body.linearVelocity = _this.candy2.arr_Body[0].linearVelocity;
                    });
                    Balloon.isFirst = true;
                }
                Balloon.isToOne = true;
            });
        }
    };
    /** 超能力 */
    GamePage.prototype.testSuper = function (x, y) {
        if (!this.isOpenSuper || !this.isMouseDown)
            return;
        //超能力
        var mX = Laya.stage.mouseX - this.scene.panel_GameWorld.x;
        var mY = Laya.stage.mouseY - this.scene.panel_GameWorld.y;
        var dic = this.countDic_Object({ "x": x, "y": y }, { "x": mX, 'y': mY });
        if (dic < 100) {
            var vX = GameConfig_1.default.SUPER_V * this.rotationDeal(mX, mY, x, y, "cos");
            var vY = GameConfig_1.default.SUPER_V * this.rotationDeal(mX, mY, x, y, "sin");
            this.candy.superSetV(vX, vY);
            if (this.candy2) {
                vX = GameConfig_1.default.SUPER_V * this.rotationDeal(mX, mY, this.candy.arr_Sp[0].x, this.candy.arr_Sp[0].y, "cos");
                vY = GameConfig_1.default.SUPER_V * this.rotationDeal(mX, mY, this.candy.arr_Sp[0].x, this.candy.arr_Sp[0].y, "sin");
                this.candy2.superSetV(vX, vY);
            }
        }
    };
    /** 与hook道具的检测*/
    GamePage.prototype.testHook = function (x, y) {
        this.testPublicHook(this.candy);
        if (this.candy2)
            this.testPublicHook(this.candy2);
        // for(let i = 0; i< this.arr_Hook.length ; i++)
        // {
        //     if(this.arr_Hook[i].style=="hookslider"){
        //         this.arr_Rope[i].ropePointsArray[0].sp.pos(this.arr_Hook[i].sp.x,this.arr_Hook[i].sp.y);
        //     }
        // }
    };
    /** 与Hook的检测 */
    GamePage.prototype.testPublicHook = function (candy) {
        var _this = this;
        var dic;
        var rope;
        var _loop_3 = function (i) {
            if (this_3.arr_Hook[i].style != "hook2")
                return "continue";
            if (this_3.arr_Hook[i].isCreate == true)
                return "continue";
            //hook逻辑
            dic = this_3.countDic_Object({ "x": candy.arr_Sp[0].x, "y": candy.arr_Sp[0].y }, { "x": this_3.arr_Hook[i].sp.x, 'y': this_3.arr_Hook[i].sp.y });
            if (dic < this_3.arr_Hook[i].size) { //创建绳子
                rope = new Rope_1.default(this_3.scene.panel_GameWorld);
                rope.initRopeHook2(this_3.arr_Hook[i].sp.x, this_3.arr_Hook[i].sp.y, candy.arr_Sp[0].x, candy.arr_Sp[0].y);
                this_3.arr_Hook[i].isCreate = true;
                this_3.arr_Rope.push(rope);
                rope.connectCandy(candy, -1);
                if (this_3.arr_Spider) {
                    this_3.arr_Spider.forEach(function (spider) {
                        if (spider.sp.x == _this.arr_Hook[i].sp.x && spider.sp.y == _this.arr_Hook[i].sp.y) {
                            console.log("有怪物！！");
                            spider.foundCandy(rope, candy);
                        }
                    });
                }
                this_3.arr_Hook[i].spp.visible = false;
                this_3.arr_Hook[i].setRopePoint(rope.ropePointsArray[0]);
            }
        };
        var this_3 = this;
        for (var i = 0; i < this.arr_Hook.length; i++) {
            _loop_3(i);
        }
    };
    /** 与星星的距离检测*/
    GamePage.prototype.testStars = function (x, y) {
        this.candyTestStar(this.candy);
        if (this.candy2)
            this.candyTestStar(this.candy2);
    };
    /** 与星星的距离检测  已添加碎糖果*/
    GamePage.prototype.candyTestStar = function (candy) {
        var _this = this;
        var dic;
        this.arr_Star.forEach(function (star) {
            if (!star.isDestroy) {
                dic = _this.countDic_Object({ "x": candy.arr_Sp[0].x, "y": candy.arr_Sp[0].y }, { "x": star.sp.x, 'y': star.sp.y });
                if (dic < (star.sp.width)) {
                    star.starDestroy(star.style);
                    _this.monster.monsterAction(GameConfig_1.default.ANI_MONSTER_HAPPYE, false);
                    _this.score++;
                    _this.showSocre();
                }
            }
        });
    };
    /**与怪物的距离检测 碎糖果已处理*/
    GamePage.prototype.testMonster = function (x, y) {
        if (!this.isToOne)
            return; //没有融合就不用检测
        if (this.isEated)
            return;
        var dic = this.countDic_Object({ "x": this.candy.arr_Sp[0].x, "y": this.candy.arr_Sp[0].y }, { "x": this.monster.x, 'y': this.monster.y });
        if (dic < GameConfig_1.default.MONSTER_EAT_DIC) {
            // console.log("吃糖果");
            this.candyEated();
        }
        else if (dic < GameConfig_1.default.MONSTER_OPEN_MOUSE) {
            // console.log("张大嘴");
            this.monster.monsterAction(GameConfig_1.default.ANI_MONSTER_OPEN, false);
            // this.monster.wantEat();
        }
        else if (dic < GameConfig_1.default.MONSTER_OPEN_MOUSE + 20) {
            this.monster.monsterAction(GameConfig_1.default.ANI_MONSTER_STAND, true);
        }
    };
    /**糖果被吃 事件处理 */
    GamePage.prototype.candyEated = function () {
        Laya.timer.clear(this, this.candyTest);
        if (this.arr_Balloon) {
            for (var i = 0; i < this.arr_Balloon.length; i++) {
                if (this.candy.isExistBalloon) {
                    this.arr_Balloon[i].balloon_ClickBoom(this.candy);
                }
            }
        }
        this.isOpenSuper = false;
        this.monster.monsterAction(GameConfig_1.default.ANI_MONSTER_EAT, true);
        this.candy.candyDestroy(this.monster.sp.x, this.monster.sp.y);
        Laya.timer.once(1250, this, this.showMenu);
        this.showSocreMenu();
        //分数记录
        this.writeData(this.score);
    };
    /**与泡泡的距离检测 */
    GamePage.prototype.testBalloon = function (x, y) {
        if (!this.arr_Balloon)
            return;
        //检测与糖果得距离，碰撞到则启动泡泡效果,在GamePage中开启此检测方法，obj1为糖果的sprite
        this.balloonPublicTest(this.candy);
        if (this.candy2)
            this.balloonPublicTest(this.candy2);
    };
    /**处理泡泡碰撞逻辑 - 通用*/
    GamePage.prototype.balloonPublicTest = function (candy) {
        var dic;
        var balloon;
        for (var i = 0; i < this.arr_Balloon.length; i++) {
            balloon = this.arr_Balloon[i];
            if (!balloon.isCollision) {
                dic = this.countDic_Object({ "x": candy.arr_Sp[0].x, "y": candy.arr_Sp[0].y }, { "x": balloon.sp.x, 'y': balloon.sp.y });
                if (dic < balloon.sp.width / 2 + 10) {
                    balloon.isCollision = true;
                    //检测是否有其他泡泡与糖果相撞
                    if (candy.isExistBalloon) {
                        balloon.balloon_Boom();
                    }
                    else {
                        candy.balloonIndex = i; //记录所撞泡泡的index
                        candy.isExistBalloon = true;
                        balloon.sp.alpha = 0;
                        balloon.anim1.visible = true;
                        balloon.anim1.play(0, true);
                        Laya.timer.frameLoop(1, balloon, balloon.balloon_Float, [candy.arr_Sp[0], candy.arr_Body, this.candy2, this.isToOne]);
                        balloon.sp.on(Laya.Event.MOUSE_DOWN, balloon, balloon.balloon_ClickBoom, [candy]);
                    }
                }
            }
        }
    };
    /**与魔法帽的检测 **/
    GamePage.prototype.testHat = function (x, y) {
        if (!this.arr_MagicHat)
            return;
        this.testPublicTest(this.candy);
        if (this.candy2)
            this.testPublicTest(this.candy2);
    };
    /**魔法帽的检测  通用*/
    GamePage.prototype.testPublicTest = function (candy) {
        var _this = this;
        if (!this.isToOne)
            return;
        this.arr_MagicHat.forEach(function (magicHat) {
            var collide1 = magicHat.sp1.hitTestPoint(candy.arr_Sp[0].x + _this.scene.panel_GameWorld.x, candy.arr_Sp[0].y + _this.scene.panel_GameWorld.y);
            var collide2 = magicHat.sp2.hitTestPoint(candy.arr_Sp[0].x + _this.scene.panel_GameWorld.x, candy.arr_Sp[0].y + _this.scene.panel_GameWorld.y);
            //如果糖果未与这对帽子的任意一个碰撞
            if (!collide1 && !collide2) {
                magicHat.isCollision = false;
            }
            //检测是否与这对帽子的任意一个碰撞
            if (collide1) {
                //碰撞到了，但是检测时否还在另一个帽子的检测范围内
                if (!magicHat.isCollision) {
                    //检测帽子碰撞的方向，若与帽子口相反，则不进行糖果位移
                    if (((Math.cos(magicHat.sp1.rotation / 180 * Math.PI) >= 0 && candy.arr_Body[0].linearVelocity.y >= 0 && magicHat.rotate1 == 0) ||
                        (Math.cos(magicHat.sp1.rotation / 180 * Math.PI) <= 0 && candy.arr_Body[0].linearVelocity.y <= 0 && magicHat.rotate1 == 0))
                        || ((Math.cos((magicHat.sp1.rotation + 90) / 180 * Math.PI) >= 0 && candy.arr_Body[0].linearVelocity.y >= 0 && magicHat.rotate1 != 0) ||
                            (Math.cos((magicHat.sp1.rotation + 90) / 180 * Math.PI) <= 0 && candy.arr_Body[0].linearVelocity.y <= 0 && magicHat.rotate1 != 0))) {
                        //断开joint
                        candy.candyDestroyJoint();
                        _this.arr_Rope.forEach(function (rope) {
                            if (!rope.isCuted) {
                                rope.ropeJointDestroy();
                            }
                        });
                        //设置速度 -----测试-----                  
                        var velocity = Math.sqrt(Math.pow(candy.arr_Body[0].linearVelocity.x, 2) + Math.pow(candy.arr_Body[0].linearVelocity.y, 2));
                        //使小球换位置出现的方法
                        for (var i = 0; i < candy.arr_Sp.length; i++) {
                            //根据帽子锚点位置调整距离
                            if (magicHat.rotate2 == 0) {
                                candy.arr_Sp[i].pos(magicHat.sp2.x, magicHat.sp2.y);
                            }
                            else {
                                candy.arr_Sp[i].pos(magicHat.sp2.x + Math.sin((magicHat.sp2.rotation + 180) / 180 * Math.PI) * (Math.abs(magicHat.rotate2) + magicHat.sp2.height / 2), magicHat.sp2.y - Math.cos((magicHat.sp2.rotation + 180) / 180 * Math.PI) * (Math.abs(magicHat.rotate2) + magicHat.sp2.height / 2));
                            }
                            candy.arr_Body[i].setVelocity({ x: 0, y: 0 });
                            candy.arr_Body[i].setVelocity({ x: Math.sin(magicHat.rotation2 / 180 * Math.PI) * velocity, y: -Math.cos(magicHat.rotation2 / 180 * Math.PI) * velocity });
                        }
                        magicHat.isCollision = true;
                    }
                }
                else {
                    magicHat.isCollision = true;
                }
            }
            if (collide2) {
                if (!magicHat.isCollision) {
                    if (((Math.cos(magicHat.sp2.rotation / 180 * Math.PI) >= 0 && candy.arr_Body[0].linearVelocity.y >= 0 && !magicHat.rotate2[0]) ||
                        (Math.cos(magicHat.sp2.rotation / 180 * Math.PI) <= 0 && candy.arr_Body[0].linearVelocity.y <= 0 && !magicHat.rotate2[0]))
                        || ((Math.cos(magicHat.sp2.rotation / 180 * Math.PI) >= 0 && candy.arr_Body[0].linearVelocity.y <= 0 && magicHat.rotate2[0]) ||
                            (Math.cos(magicHat.sp2.rotation / 180 * Math.PI) <= 0 && candy.arr_Body[0].linearVelocity.y >= 0 && magicHat.rotate2[0]))) {
                        //断裂joint
                        candy.candyDestroyJoint();
                        _this.arr_Rope.forEach(function (rope) {
                            if (!rope.isCuted) {
                                rope.ropeJointDestroy();
                            }
                        });
                        var velocity = Math.sqrt(Math.pow(candy.arr_Body[0].linearVelocity.x, 2) + Math.pow(candy.arr_Body[0].linearVelocity.y, 2));
                        //使小球换位置出现的方法
                        for (var i = 0; i < candy.arr_Sp.length; i++) {
                            //根据帽子锚点位置调整距离
                            if (magicHat.rotate1 == 0) {
                                candy.arr_Sp[i].pos(magicHat.sp1.x, magicHat.sp1.y);
                                candy.arr_Body[i].setVelocity({ x: 0, y: 0 });
                                candy.arr_Body[i].setVelocity({ x: Math.sin(magicHat.rotation1 / 180 * Math.PI) * velocity, y: -Math.cos(magicHat.rotation1 / 180 * Math.PI) * velocity });
                            }
                            else {
                                candy.arr_Sp[i].pos(magicHat.sp1.x + Math.sin((magicHat.sp1.rotation + 180) / 180 * Math.PI) * (Math.abs(magicHat.rotate1) + magicHat.sp1.height / 2), magicHat.sp1.y - Math.cos((magicHat.sp1.rotation + 180) / 180 * Math.PI) * (Math.abs(magicHat.rotate1) + magicHat.sp1.height / 2));
                                candy.arr_Body[i].setVelocity({ x: 0, y: 0 });
                                candy.arr_Body[i].setVelocity({ x: Math.sin(magicHat.rotation1 / 180 * Math.PI) * velocity, y: -Math.cos(magicHat.rotation1 / 180 * Math.PI) * velocity });
                            }
                        }
                        magicHat.isCollision = true;
                    }
                    else {
                        magicHat.isCollision = true;
                    }
                }
            }
        });
    };
    /**与锥子的距离检测 */
    GamePage.prototype.testKnife = function (x, y) {
        if (!this.arr_Knife)
            return;
        if (this.isOpenSuper)
            return;
        //检测与锥子得距离，碰撞到则播放哭泣动画结束游戏,在GamePage中开启此检测方法
        this.testPublicKnife(this.candy);
        if (this.candy2)
            this.testPublicKnife(this.candy2);
    };
    GamePage.prototype.testPublicKnife = function (candy) {
        var _this = this;
        var collide;
        this.arr_Knife.forEach(function (knife) {
            if (!knife.isCollision) {
                // collide=knife.sp.hitTestPoint(this.candy.arr_Sp[0].x - this.scene.panel_GameWorld.x,this.candy.arr_Sp[0].y - this.scene.panel_GameWorld.y);
                // 
                collide = knife.knife.hitTestPoint(candy.arr_Sp[0].x + _this.scene.panel_GameWorld.x, candy.arr_Sp[0].y + _this.scene.panel_GameWorld.y);
                if (collide) {
                    knife.isCollision = true;
                    //糖果破碎
                    candy.becomeApart(candy.arr_Sp[0].x, candy.arr_Sp[0].y);
                    _this.failGame();
                }
            }
        });
    };
    GamePage.prototype.testForceBall = function (x, y) {
        if (!this.arr_ForceBall)
            return;
        //检测糖果是否进入推力球检测区域，若在区域内点击推力球触发推力功能
        this.testPublicForceBall(this.candy, 1);
        if (this.candy2)
            this.testPublicForceBall(this.candy2, 2);
    };
    /**1是 主糖果  2是 副糖果 */
    GamePage.prototype.testPublicForceBall = function (candy, index) {
        var _this = this;
        var collide;
        this.arr_ForceBall.forEach(function (forceball) {
            // console.log(candy.arr_Sp[0].x + "   " + candy.arr_Sp[0].y);
            // console.log(forceball.spRect.x + "   -    " +  forceball.spRect.y);
            collide = forceball.spRect.hitTestPoint(candy.arr_Sp[0].x + _this.scene.panel_GameWorld.x, candy.arr_Sp[0].y + _this.scene.panel_GameWorld.y);
            if (collide) {
                if (index == 1)
                    forceball.isApplyForce = true;
                else
                    forceball.isApplyForce_candy2 = true;
                // console.log(forceball.clickCount);
            }
            else {
                if (index == 1)
                    forceball.isApplyForce = false;
                else
                    forceball.isApplyForce_candy2 = false;
<<<<<<< HEAD
                forceball.clickCount = 0;
=======
>>>>>>> mbfetch
            }
        });
    };
    GamePage.prototype.testLaser = function (x, y) {
        if (!this.arr_Laser)
            return;
        //检测糖果是否进入激光检测区域，若在区域内则糖果破裂
        this.testPublicLaser(this.candy);
        if (this.candy2)
            this.testPublicLaser(this.candy2);
    };
    GamePage.prototype.testPublicLaser = function (candy) {
        var _this = this;
        var collide;
        this.arr_Laser.forEach(function (laser) {
            if (!laser.isCollision) {
                collide = laser.spRect.hitTestPoint(candy.arr_Sp[0].x + _this.scene.panel_GameWorld.x, candy.arr_Sp[0].y + _this.scene.panel_GameWorld.y);
                if (!laser.isAdvanceLaser) {
                    if (collide) {
                        laser.isCollision = true;
                        //糖果破碎
                        candy.becomeApart(candy.arr_Sp[0].x, candy.arr_Sp[0].y);
                        _this.monster.monsterAction(GameConfig_1.default.ANI_MONSTER_SAD, false);
                        Laya.timer.once(1250, _this, _this.onReGame);
                    }
                }
            }
        });
    };
    /**显示菜单 */
    GamePage.prototype.showMenu = function () {
        Laya.timer.clear(this, this.showMenu);
        this.doorOpen.visible = true;
        this.doorOpen.ani3.play(0, false);
        this.doorOpen.img_xiaodao.y = 800;
        Laya.MouseManager.enabled = false;
        //比较之前在此关获得的星星，若比之前多则更新总分数
    };
    /**边界检测 */
    GamePage.prototype.testStage = function (x, y) {
        if (this.isOpenSuper) {
            var candy = this.candy.arr_Sp[0].getComponents(Laya.RigidBody)[0];
            this.superPower(y, candy, x);
            if (this.candy2) {
                var candy2 = this.candy2.arr_Sp[0];
                this.superPower(candy2.y, candy2.getComponents(Laya.RigidBody)[0], candy2.x);
            }
        }
        else if (y < -200 || y > this.mapHight) {
            this.candyFall();
        }
        else if (this.candy2) { //碎糖果的边界检测
            if (this.candy2.arr_Sp[0].y < -200 || this.candy2.arr_Sp[0].y > this.mapHight) {
                this.candyFall();
            }
        }
    };
    /**超能力效果 */
    GamePage.prototype.superPower = function (y, candy, x) {
        if (y > this.mapHight) {
            candy.applyLinearImpulseToCenter({ x: 0, y: -4 });
        }
        if (y < 10) {
            candy.applyLinearImpulseToCenter({ x: 0, y: 4 });
        }
        if (x < 10) {
            candy.applyLinearImpulseToCenter({ x: 4, y: 0 });
        }
        if (x > this.mapWidth) {
            candy.applyLinearImpulseToCenter({ x: -4, y: 0 });
        }
    };
    /**糖果掉落出边界，游戏失败重开 */
    GamePage.prototype.candyFall = function () {
        console.log("游戏失败");
        this.monster.monsterAction(GameConfig_1.default.ANI_MONSTER_SAD, false);
        Laya.timer.clear(this, this.candyTest);
        this.onReGame();
    };
    ///////////////////////////////////////mouseCute
    GamePage.prototype.mouseCute = function () {
        //检测是否正按下鼠标移动钩子，若未按下则可开启割绳子检测
        var isDown = true;
        for (var i = 0; i < this.arr_Hook.length; i++) {
            if (this.arr_Hook[i].isDown) {
                isDown = false;
            }
        }
        if (this.isMouseDown && isDown) {
            var mX = Laya.stage.mouseX - this.scene.panel_GameWorld.x;
            var mY = Laya.stage.mouseY - this.scene.panel_GameWorld.y;
            var cos = this.rotationDeal(this.lastMousePos.x, this.lastMousePos.y, mX, mY, "cos");
            var sin = this.rotationDeal(this.lastMousePos.x, this.lastMousePos.y, mX, mY, "sin");
            var dic = void 0;
            //hook切割点
            var hookHead = void 0;
            var candyEnd = void 0;
            if (this.lastMousePos.x != null && this.lastMousePos.y != null) {
                dic = this.countDic_Object({ x: this.lastMousePos.x, y: this.lastMousePos.y }, { x: mX, y: mY });
                // console.log("dic::" + Math.floor(dic));
            }
            //普通绳子
            this.testMouseCandy(dic, mX, mY, cos, sin, hookHead, this.candyEated, this.arr_Rope);
            //破碎糖果的绳子
            if (this.candy2)
                this.testMouseCandy(dic, mX, mY, cos, sin, hookHead, this.candyEated, this.arr_Rope2);
            this.lastMousePos.x = mX;
            this.lastMousePos.y = mY;
            // console.log(this.lastMousePos.x + ","  + this.lastMousePos.y);
        }
    };
    /**鼠标绳子检测 */
    GamePage.prototype.testMouseCandy = function (dic, mX, mY, cos, sin, hookHead, candyEnd, ropeArray) {
        var _this = this;
        ropeArray.forEach(function (Rope) {
            if (!Rope.isCuted) {
                for (var i = 0; i < Rope.ropePointsArray.length; i++) {
                    var ropePoint = Rope.ropePointsArray[i];
                    var f = {};
                    var s = {};
                    var count = 1;
                    f.x = ropePoint.sp.x;
                    f.y = ropePoint.sp.y;
                    if (dic) //计算需求数量
                     {
                        count = count + Math.floor(dic / 25);
                        // console.log("pointCount::" + Math.floor(dic));
                    }
                    for (var z = 0; z < count; z++) //循环检测
                     {
                        if (z == count - 1) //最后一个鼠标点
                         {
                            s.x = mX;
                            s.y = mY;
                        }
                        else //其他点
                         {
                            s.x = _this.lastMousePos.x + cos * z * 25;
                            s.y = _this.lastMousePos.y + sin * z * 25;
                            // console.log("testPoint(" + s.x + "," + s.y + ")");
                        }
                        //切割优化
                        hookHead = 5;
                        candyEnd = Rope.ropePointsArray.length - 6;
                        if (Rope.ropePointsArray.length < 20) {
                            hookHead = 0;
                            candyEnd += 2;
                        }
                        //开始检测
                        if (_this.countDic_Object(f, s) < 15 && hookHead < i && i < candyEnd) //优化绳子切割
                         {
                            // console.log(Rope.ropePointsArray.length + " :::::::::: index ::::::::: " + i);
                            //对蜘蛛进行操作
                            if (_this.arr_Spider) {
                                _this.arr_Spider.forEach(function (Spider) {
                                    if (Spider.rope == Rope) {
                                        Spider.stopEatCandy();
                                    }
                                });
                            }
                            //断开连接
                            if (ropePoint.sp.getComponent(Laya.RevoluteJoint)) {
                                ropePoint.sp.getComponent(Laya.RevoluteJoint).destroy();
                                Rope.ropeCuted();
                                _this.ropeJonitCute(Rope);
                                break;
                            }
                        }
                    }
                    if (Rope.isCuted)
                        break;
                }
            }
        });
    };
    GamePage.prototype.ropeJonitCute = function (Rope) {
        var ropeJoint = Rope.ropePointsArray[0].sp.getComponents(Laya.RopeJoint);
        if (ropeJoint) {
            ropeJoint[0].destroy();
        }
    };
    /**游戏失败，统一处理 */
    GamePage.prototype.failGame = function () {
        this.isEated = true;
        this.monster.monsterAction(GameConfig_1.default.ANI_MONSTER_SAD, false);
        Laya.timer.once(1500, this, this.onReGame);
    };
    /////////////////////////////Tool
    /**
     * 距离计算
     * 2 对象
     * first
     * second
     */
    GamePage.prototype.countDic_Object = function (f, s) {
        return Math.sqrt(Math.pow(f.x - s.x, 2) + Math.pow(f.y - s.y, 2));
    };
    GamePage.prototype.rotationDeal = function (fx, fy, sx, sy, getString) {
        /**斜边 */
        var c = Math.sqrt(Math.pow(fx - sx, 2) + Math.pow(fy - sy, 2));
        /**临边 */
        var a = sx - fx;
        /**对边 */
        var b = sy - fy;
        if (getString == "sin") {
            //console.log("#sin ==" + (b/c));
            return (b / c);
        }
        else if (getString == "cos") {
            //console.log("#cos ==" + (a/c));
            return (a / c);
        }
        else {
            //console.log("#tan ==" + (b/a));//对边 比 临边 
            return (b / a);
        }
    };
    /**数据写入 星星数量*/
    GamePage.prototype.writeData = function (stars) {
        var playerData = PlayerData_1.PlayerData.ins;
        //[0,1,2,3,3,1,-1]
        var boxData = Laya.WeakObject.I.get(this.quarterIndex + "-" + this.boxIndex);
        //加总星星数量
        if (boxData[this, this.cardIndex] != undefined) {
            playerData.starNum += stars - boxData[this.cardIndex];
        }
        else {
            playerData.starNum += stars;
        }
        //关卡推移
        if (boxData[this.cardIndex] == -1 && this.cardIndex != 24) {
            boxData[this.cardIndex + 1] = -1;
        }
        if (boxData[this.cardIndex] == 24) {
            var boxDataNext = Laya.WeakObject.I.get(this.quarterIndex + "-" + (++this.boxIndex));
            if (boxDataNext)
                boxDataNext[0] = -1;
        }
        boxData[this.cardIndex] = stars;
        this.score = 0;
    };
    /**同移动运行方法 */
    GamePage.prototype.moveTogether = function () {
        GameConfig_1.default.CaX = this.scene.panel_GameWorld.x;
        GameConfig_1.default.CaY = this.scene.panel_GameWorld.y;
        //气泡移动同步
        if (this.arr_Balloon) {
            this.arr_Balloon.forEach(function (ball) {
                ball.moveTogether();
            });
        }
        //糖果移动同步
        this.candy.moveTogether();
        if (this.candy2)
            this.candy2.moveTogether();
        //绳子移动同步
        if (this.arr_Rope) {
            this.arr_Rope.forEach(function (rope) {
                rope.moveTogether();
            });
        }
        //锥子移动同步
        if (this.arr_Knife) {
            this.arr_Knife.forEach(function (knife) {
                knife.moveTogether();
            });
        }
    };
    //星星来回移动
    GamePage.prototype.star_MoveBySelf = function (moveArray, configArray) {
        for (var i = 0; i < moveArray.length; i++) {
            var x_Add = this.rotationDeal(configArray[i].star_X, configArray[i].star_Y, configArray[i].move[0], configArray[i].move[1], "cos");
            var y_Add = this.rotationDeal(configArray[i].star_X, configArray[i].star_Y, configArray[i].move[0], configArray[i].move[1], "sin");
            if (moveArray[i].isGoing) {
                moveArray[i].sp.x += x_Add;
                moveArray[i].sp.y += y_Add;
                if (x_Add == 0) {
                    if (moveArray[i].sp.y == configArray[i].move[1]) {
                        moveArray[i].isGoing = false;
                    }
                }
                else if (y_Add == 0) {
                    if (moveArray[i].sp.x == configArray[i].move[0]) {
                        moveArray[i].isGoing = false;
                    }
                }
                else {
                    if (Math.abs(moveArray[i].sp.x - configArray[i].move[0]) < 0.3) {
                        moveArray[i].sp.x = configArray[i].move[0];
                        moveArray[i].sp.y = configArray[i].move[1];
                        moveArray[i].isGoing = false;
                    }
                }
            }
            else {
                moveArray[i].sp.x -= x_Add;
                moveArray[i].sp.y -= y_Add;
                if (x_Add == 0) {
                    if (moveArray[i].sp.y == configArray[i].star_Y) {
                        moveArray[i].isGoing = true;
                    }
                }
                else if (y_Add == 0) {
                    if (moveArray[i].sp.x == configArray[i].star_X) {
                        moveArray[i].isGoing = true;
                    }
                }
                else {
                    if (Math.abs(moveArray[i].sp.x - configArray[i].star_X) < 0.3) {
                        moveArray[i].sp.x = configArray[i].star_X;
                        moveArray[i].sp.y = configArray[i].star_Y;
                        moveArray[i].isGoing = true;
                    }
                }
            }
        }
    };
    //星星来回旋转
    GamePage.prototype.star_RotateByOnePoint = function (rotateArray, configArray) {
        for (var i = 0; i < rotateArray.length; i++) {
            rotateArray[i].rotation += configArray[i].v;
            rotateArray[i].sp.pos(configArray[i].star_X + configArray[i].rotateLength * Math.sin(rotateArray[i].rotation / 180 * Math.PI), configArray[i].star_Y + configArray[i].rotateLength * Math.cos(rotateArray[i].rotation / 180 * Math.PI));
        }
    };
    return GamePage;
}(Laya.Scene));
exports.default = GamePage;
},{"../Tool/Tail":3,"../config/GameConfig":6,"../config/MapConfig":7,"../prefab/Balloon":8,"../prefab/Candy":9,"../prefab/ForceBall":10,"../prefab/Hook":11,"../prefab/Knife":12,"../prefab/Laser":13,"../prefab/MagicHat":14,"../prefab/Monster":15,"../prefab/Rope":16,"../prefab/Spider":18,"../prefab/Star":19,"../prefab/bounceDrum":20,"../ui/layaMaxUI":23,"./Config/PlayerData":25}],27:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("../ui/layaMaxUI");
var LoadingPage = /** @class */ (function (_super) {
    __extends(LoadingPage, _super);
    function LoadingPage() {
        return _super.call(this) || this;
    }
    LoadingPage.prototype.onEnable = function () {
        var src = [
            { url: "res/atlas/publicAssets.atlas" },
            { url: "res/atlas/selectBox.atlas" },
            { url: "res/atlas/selectRound.atlas" },
            { url: "res/atlas/select.atlas" },
            { url: "res/atlas/gameView.atlas" },
            { url: "res/atlas/gameView/gameBg.atlas" },
            { url: "res/atlas/gameView/gameDoor.atlas" },
            { url: "res/atlas/gameView/gamePos.atlas" },
            { url: "res/atlas/gameView/gameBtn.atlas" },
            { url: "res/atlas/comp.atlas" },
            { url: "res/atlas/gameView/stardestory.atlas" },
            { url: "res/atlas/shop.atlas" },
            { url: "res/atlas/gameView/mouseTail.atlas" },
            { url: "res/atlas/gameView/paopao.atlas" },
            { url: "res/atlas/gameView/spider.atlas" },
            { url: "res/atlas/gameView/starTime.atlas" },
            { url: "res/atlas/gameView/monster.atlas" },
            //大图加载
            { url: "unpackage/startGameBg.jpg" },
            { url: "unpackage/cutRope.png" },
            { url: "gameView/gameBg/boxBg_1.png" }
        ];
        Laya.loader.load(src, Laya.Handler.create(this, this.onLoad), Laya.Handler.create(this, this.onPro, null, false));
    };
    LoadingPage.prototype.onLoad = function () {
        this.lab_Progress.text = "加载完成，进入游戏";
        Laya.Scene.open("StartGame.scene");
    };
    LoadingPage.prototype.onPro = function (pro, e) {
        console.log(pro + "," + e);
        this.lab_Progress.text = "Loading …… " + Math.floor(pro * 100) + "%";
        this.img_Progress.width = 499 * pro;
    };
    return LoadingPage;
}(layaMaxUI_1.ui.LoadingUI));
exports.default = LoadingPage;
},{"../ui/layaMaxUI":23}],28:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("../ui/layaMaxUI");
/**
* Round
*/
var RoundPage = /** @class */ (function (_super) {
    __extends(RoundPage, _super);
    function RoundPage() {
        return _super.call(this) || this;
    }
    RoundPage.prototype.onEnable = function () {
    };
    RoundPage.prototype.onOpened = function (arr) {
        this.quarterIndex = arr[0];
        this.boxIndex = arr[1];
        this.arr_Card = new Array();
        this.shopDoor = new layaMaxUI_1.ui.topLeftUI();
        this.scene.addChild(this.shopDoor);
        this.shopDoor.x = 0;
        this.shopDoor.y = 0;
        var skins = Laya.WeakObject.I.get("boxSkin");
        this.scene.img_DoorR.skin = skins[this.quarterIndex + "-" + this.boxIndex][1];
        this.scene.img_DoorL.skin = skins[this.quarterIndex + "-" + this.boxIndex][1];
        this.Start();
    };
    RoundPage.prototype.Start = function () {
        this.scene.img_DoorR.height = 750 * (Laya.Browser.clientHeight / Laya.Browser.clientWidth);
        this.scene.img_DoorL.height = 750 * (Laya.Browser.clientHeight / Laya.Browser.clientWidth);
        //初始化界面
        this.createUI();
        //事件绑定
        this.addEvents();
        //界面排版
        this.listUiItem();
        //卡片显示状态
        this.showStyle();
    };
    /**事件绑定 */
    RoundPage.prototype.addEvents = function () {
        // for(let i=0;i<this.arr_Card.length;i++)
        // {
        //     this.arr_Card[i].on(Laya.Event.CLICK,this,this.onClick,[i])
        // }
        this.scene.btn_Exit.y = 750 * (Laya.Browser.clientHeight / Laya.Browser.clientWidth) - 142;
        this.scene.btn_Exit.on(Laya.Event.CLICK, this, this.onExit);
        this.scene.btn_Exit.on(Laya.Event.MOUSE_DOWN, this, this.onDown);
        this.scene.btn_Exit.on(Laya.Event.MOUSE_OUT, this, this.onUp);
        this.shopDoor.btn_Teach.on(Laya.Event.CLICK, this, this.onTeach);
        this.shopDoor.btn_Super.on(Laya.Event.CLICK, this, this.onSuper);
    };
    RoundPage.prototype.onDown = function () {
        this.scene.btn_Exit.skin = "publicAssets/exit_Y.png";
    };
    RoundPage.prototype.onUp = function () {
        this.scene.btn_Exit.skin = "publicAssets/exit_R.png";
    };
    RoundPage.prototype.onTeach = function () {
        this.shopDialog.set(1, false);
    };
    RoundPage.prototype.onSuper = function () {
        this.shopDialog.set(2, false);
    };
    RoundPage.prototype.onExit = function () {
        Laya.Scene.open("SelectBox/SelectBox.scene", true, this.quarterIndex);
    };
    /**事件处理 */
    RoundPage.prototype.onClick = function (index) {
        Laya.Scene.open("GameView/GameBackground.scene", true, [this.quarterIndex, this.boxIndex, index]);
    };
    /**UI创建 */
    RoundPage.prototype.createUI = function () {
        var card;
        for (var i = 0; i < 25; i++) {
            card = new layaMaxUI_1.ui.SelectRound.RoundItemUI();
            this.scene.addChild(card);
            this.arr_Card.push(card);
        }
        this.shopDialog = Laya.WeakObject.I.get("dialog");
    };
    /**界面排版 */
    RoundPage.prototype.listUiItem = function () {
        for (var i = 0; i < this.arr_Card.length; i++) {
            this.arr_Card[i].y = 300;
            this.arr_Card[i].x = 20;
            this.arr_Card[i].x += (i % 5) * (this.arr_Card[i].width);
            this.arr_Card[i].y += Math.floor(i / 5) * (this.arr_Card[i].height + 10);
        }
    };
    /**卡片状态 */
    RoundPage.prototype.showStyle = function () {
        var thisCard = Laya.WeakObject.I.get(this.quarterIndex + "-" + this.boxIndex);
        if (thisCard) { //有
            this.showCard(thisCard);
        }
        else { //无
            this.closeCard();
        }
    };
    /**显示卡片状态 */
    RoundPage.prototype.showCard = function (thisCard) {
        for (var i = 0; i < thisCard.length; i++) {
            if (thisCard[i] != undefined)
                this.addRoundEvents(this.arr_Card[i], i);
            if (thisCard[i] != -1) {
                this.arr_Card[i].img_Star.skin = this.setStars(thisCard[i]);
                this.setCount(i);
            }
            else {
                this.arr_Card[i].img_Star.skin = "selectRound/star0.png";
                this.setCount(i);
                for (var h = i + 1; h < this.arr_Card.length; h++) {
                    this.arr_Card[h].img_Star.visible = false;
                    this.arr_Card[h].img_RoundBox.skin = "selectRound/lock.png";
                }
                break;
            }
        }
    };
    /**没有一个卡片处理方法 */
    RoundPage.prototype.closeCard = function () {
        this.arr_Card.forEach(function (card) {
            card.img_Star.visible = false;
            card.img_RoundBox.skin = "selectRound/lock.png";
        });
    };
    /**加入 关卡事件 */
    RoundPage.prototype.addRoundEvents = function (object, index) {
        object.on(Laya.Event.CLICK, this, this.onClick, [index]);
    };
    /**卡牌星星和数字 处理 */
    RoundPage.prototype.setStars = function (starsNum) {
        return "selectRound/star" + starsNum + ".png";
    };
    /**数字的处理 */
    RoundPage.prototype.setCount = function (index) {
        var indexCount = (this.quarterIndex) * 125 + (this.boxIndex) * 25 + index;
        //312
        if (indexCount + 1 >= 100) {
            this.arr_Card[index].img_Count1.visible = true;
            this.arr_Card[index].img_Count3.visible = true;
            this.arr_Card[index].img_Count2.skin = "publicAssets/" + (indexCount + 1) % 100 % 10 + ".png";
            this.arr_Card[index].img_Count1.skin = "publicAssets/" + Math.floor((indexCount + 1) / 10) % 10 + ".png";
            this.arr_Card[index].img_Count3.skin = "publicAssets/" + Math.floor((indexCount + 1) / 100) + ".png";
        }
        else if (indexCount + 1 >= 10) {
            this.arr_Card[index].img_Count1.visible = true;
            this.arr_Card[index].img_Count1.skin = "publicAssets/" + Math.floor((indexCount + 1) / 10) + ".png";
            this.arr_Card[index].img_Count2.skin = "publicAssets/" + (indexCount + 1) % 10 + ".png";
        }
        else {
            this.arr_Card[index].img_Count2.skin = "publicAssets/" + (indexCount + 1) + ".png";
            this.arr_Card[index].img_Count2.x = 20;
        }
    };
    return RoundPage;
}(Laya.Scene));
exports.default = RoundPage;
},{"../ui/layaMaxUI":23}],29:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("../ui/layaMaxUI");
var Box_1 = require("./Box");
/**
*
*/
var SelectBoxPage = /** @class */ (function (_super) {
    __extends(SelectBoxPage, _super);
    function SelectBoxPage() {
        return _super.call(this) || this;
    }
    SelectBoxPage.prototype.onAwake = function () {
        this.arr_Box = new Array();
        this.arr_Point = new Array();
        this.posX = 250;
        this.index = 0;
        this.btn_Exit.y = 750 * (Laya.Browser.clientHeight / Laya.Browser.clientWidth) - 142;
        this.shopDoor = new layaMaxUI_1.ui.topLeftUI();
        this.shopDialog = Laya.WeakObject.I.get("dialog");
        this.addChild(this.shopDoor);
        this.shopDoor.x = 0;
        this.shopDoor.y = 0;
        this.panel_ShowBox.hScrollBar.changeHandler = new Laya.Handler(this, this.scrollChange);
        this.panel_ShowBox.on(Laya.Event.MOUSE_DOWN, this, this.onMouseDow);
        this.on(Laya.Event.MOUSE_UP, this, this.onMouseUp);
        this.shopDoor.btn_Teach.on(Laya.Event.CLICK, this, this.onTeach);
        this.shopDoor.btn_Super.on(Laya.Event.CLICK, this, this.onSuper);
        this.btn_Exit.on(Laya.Event.CLICK, this, this.onEixt);
        this.btn_Exit.on(Laya.Event.MOUSE_DOWN, this, this.onDown);
        this.btn_Exit.on(Laya.Event.MOUSE_OUT, this, this.onUp);
        this.scrollBarSetting();
    };
    SelectBoxPage.prototype.onDown = function () {
        this.btn_Exit.skin = "publicAssets/exit_Y.png";
    };
    SelectBoxPage.prototype.onUp = function () {
        this.btn_Exit.skin = "publicAssets/exit_R.png";
    };
    SelectBoxPage.prototype.onTeach = function () {
        this.shopDialog.set(1, false);
    };
    SelectBoxPage.prototype.onSuper = function () {
        this.shopDialog.set(2, false);
    };
    SelectBoxPage.prototype.onEixt = function (e) {
        Laya.Scene.open("Select.scene", true);
    };
    /**scrollBar 设置 */
    SelectBoxPage.prototype.scrollBarSetting = function () {
        this.panel_ShowBox.hScrollBar.visible = false;
        this.panel_ShowBox.hScrollBar.elasticDistance = 0;
        this.panel_ShowBox.hScrollBar.rollRatio = 0;
    };
    SelectBoxPage.prototype.onEnable = function () {
    };
    SelectBoxPage.prototype.onOpened = function (index) {
        this.quarter = index;
        this.createBox();
        this.addBoxEvent();
    };
    //盒子 102,29   50 = 200
    /**创建盒子UI */
    SelectBoxPage.prototype.createBox = function () {
        var box;
        var img_Point;
        this.boxCount = 5; //测试
        var skins = Laya.WeakObject.I.get("boxSkin");
        for (var i = 0; i < this.boxCount; i++) {
            box = new Box_1.Box(this, this.quarter, i, skins[this.quarter + "-" + i][0]);
            img_Point = new Laya.Image();
            img_Point.skin = "selectBox/point1.png";
            img_Point.x += 70 * i;
            this.sprite_SelectBox.addChild(img_Point);
            box.boxUI.x += (box.boxUI.width + 50) * i;
            this.arr_Point.push(img_Point);
            this.arr_Box.push(box);
            if (i == this.boxCount - 1) {
                box.boxUI.width += 125;
            }
        }
        this.setCurrentPoint(0);
        var lastBox = this.arr_Box[this.arr_Box.length - 1];
        var lastPoint = this.arr_Point[this.arr_Point.length - 1];
        this.scale_ = (lastPoint.x + lastPoint.width) / (lastBox.initX + lastBox.boxUI.x + lastBox.boxUI.width);
    };
    /**事件 面板被点下   2250*/
    SelectBoxPage.prototype.onMouseDow = function () {
        this.mouseMoveX = Laya.stage.mouseX;
    };
    /**时间 鼠标抬起 */
    SelectBoxPage.prototype.onMouseUp = function () {
        var value = this.panel_ShowBox.hScrollBar.value;
        var ca = this.mouseMoveX - Laya.stage.mouseX;
        var i = this.mouseJudge(value);
        if (ca > 100) {
            this.index++;
        }
        else if (ca < -100) {
            this.index--;
        }
        if (this.index == 0) {
            Laya.Tween.to(this.panel_ShowBox.hScrollBar, { value: 0 }, 100);
        }
        else {
            Laya.Tween.to(this.panel_ShowBox.hScrollBar, { value: (550 * this.index - 20) }, 100);
        }
    };
    /**面板滚动*/
    SelectBoxPage.prototype.scrollChange = function (value) {
        var box;
        this.img_SelectBox.x = value * (this.scale_ + 0.0289) - 10; //0.289距离宽就变大，距离低就变小
        for (var i = 0; i < this.arr_Box.length; i++) {
            if (value <= 130 - 5) {
                this.arr_Box[0].boxUI.sprite_BoxParent.addChild(this.moster);
                this.moster.x = 123;
                this.moster.y = 0;
                this.mosterMove(value, i);
                break;
            }
            else if (i != 0 && value <= (i * (550) + 100 - 5) && value >= ((i - 1) * 550 + 160 + this.posX + 5)) {
                this.arr_Box[i].boxUI.sprite_BoxParent.addChild(this.moster);
                this.moster.x = 0;
                this.moster.y = 0;
                // console.log("变化"  +  i);
                this.mosterMove(value, i, (i - 1) * 550 + 100 + this.posX);
                break;
            }
            else {
                this.moster.removeSelf();
            }
        }
        this.setCurrentPoint(value);
    };
    /**怪物移动 */
    SelectBoxPage.prototype.mosterMove = function (value, i, mix) {
        if (i == 0) {
            this.moster.x = value + 123;
        }
        else {
            this.moster.x = value - mix - 60;
        }
    };
    /**当前选择点 */
    SelectBoxPage.prototype.setCurrentPoint = function (value) {
        var i = this.mouseJudge(value);
        if (this.currentPoint != this.arr_Point[i]) {
            if (this.currentPoint == null) {
                this.currentPoint = this.arr_Point[0];
            }
            else {
                this.currentPoint.skin = "selectBox/point1.png";
                this.currentPoint = this.arr_Point[i];
            }
            this.currentPoint.skin = "selectBox/point.png";
            this.img_SelectBox.zOrder = 10;
        }
        this.listPoint();
    };
    /**点点排版 */
    SelectBoxPage.prototype.listPoint = function () {
        for (var i = 0; i < this.arr_Point.length; i++) {
            this.arr_Point[i].y = 0;
            this.arr_Point[i].x = 0;
            this.arr_Point[i].x += 70 * i;
        }
        this.currentPoint.y = -15;
        this.currentPoint.x -= 10;
    };
    /**判断在哪个店 */
    SelectBoxPage.prototype.mouseJudge = function (value) {
        for (var i = 0; i < this.arr_Box.length; i++) {
            if (i == 0 && value < 275) {
                return 0;
            }
            else if (value >= 275 + 550 * (i - 1) && value < 275 + 550 * i) {
                return i;
            }
        }
    };
    /**事件绑定 给盒子 */
    SelectBoxPage.prototype.addBoxEvent = function () {
        for (var i = 0; i < this.arr_Box.length; i++) {
            this.arr_Box[i].boxUI.img_box.on(Laya.Event.CLICK, this, this.clickBox, [i]);
        }
    };
    /**事件 点击盒子 */
    SelectBoxPage.prototype.clickBox = function (index) {
        Laya.Scene.open("SelectRound/SelectRound.scene", true, [this.quarter, index]);
    };
    return SelectBoxPage;
}(layaMaxUI_1.ui.SelectBox.SelectBoxUI));
exports.default = SelectBoxPage;
},{"../ui/layaMaxUI":23,"./Box":24}],30:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("../ui/layaMaxUI");
/**
* 选择界面
*/
var SelectPage = /** @class */ (function (_super) {
    __extends(SelectPage, _super);
    function SelectPage() {
        return _super.call(this) || this;
    }
    SelectPage.prototype.onEnable = function () {
        this.btn_Exit.y = this.thisWidth.width * (Laya.Browser.clientHeight / Laya.Browser.clientWidth) - 142;
        this.btn_First.on(Laya.Event.CLICK, this, this.onSelectBoxStart, [0]);
        this.btn_Second.on(Laya.Event.CLICK, this, this.onSelectBoxStart, [1]);
        this.btn_Third.on(Laya.Event.CLICK, this, this.onSelectBoxStart, [2]);
        this.btn_First_.on(Laya.Event.CLICK, this, this.onSelectBoxStart, [0]);
        this.btn_Second_.on(Laya.Event.CLICK, this, this.onSelectBoxStart, [1]);
        this.btn_Third_.on(Laya.Event.CLICK, this, this.onSelectBoxStart, [2]);
        this.btn_Exit.on(Laya.Event.CLICK, this, this.onExit);
        //鼠标点击效果
        this.btn_Exit.on(Laya.Event.MOUSE_DOWN, this, this.onDown, [0]);
        this.btn_Exit.on(Laya.Event.MOUSE_OUT, this, this.onUp, [0]);
        this.btn_First.on(Laya.Event.MOUSE_DOWN, this, this.onDown, [1]);
        this.btn_First_.on(Laya.Event.MOUSE_DOWN, this, this.onDown, [1]);
        this.btn_First.on(Laya.Event.MOUSE_OUT, this, this.onUp, [1]);
        this.btn_First.on(Laya.Event.MOUSE_OUT, this, this.onUp, [1]);
        this.btn_Second_.on(Laya.Event.MOUSE_DOWN, this, this.onDown, [2]);
        this.btn_Second.on(Laya.Event.MOUSE_DOWN, this, this.onDown, [2]);
        this.btn_Second_.on(Laya.Event.MOUSE_OUT, this, this.onUp, [2]);
        this.btn_Second.on(Laya.Event.MOUSE_OUT, this, this.onUp, [2]);
        this.btn_Third_.on(Laya.Event.MOUSE_DOWN, this, this.onDown, [3]);
        this.btn_Third.on(Laya.Event.MOUSE_DOWN, this, this.onDown, [3]);
        this.btn_Third_.on(Laya.Event.MOUSE_OUT, this, this.onUp, [3]);
        this.btn_Third.on(Laya.Event.MOUSE_OUT, this, this.onUp, [3]);
    };
    /**鼠标点下 */
    SelectPage.prototype.onDown = function (i) {
        switch (i) {
            case 0:
                this.btn_Exit.skin = "publicAssets/exit_Y.png";
                break;
            case 1:
                this.btn_First_.skin = "select/sure.png";
                break;
            case 2:
                this.btn_Second_.skin = "select/sure.png";
                break;
            case 3:
                this.btn_Third_.skin = "select/sure.png";
                break;
        }
    };
    /**鼠标抬起 */
    SelectPage.prototype.onUp = function (i) {
        switch (i) {
            case 0:
                this.btn_Exit.skin = "publicAssets/exit_R.png";
                break;
            case 1:
                this.btn_First_.skin = "select/s1s2sure.png";
                break;
            case 2:
                this.btn_Second_.skin = "select/s1s2sure.png";
                break;
            case 3:
                this.btn_Third_.skin = "select/s3sure.png";
                break;
        }
    };
    /*退出 */
    SelectPage.prototype.onExit = function () {
        Laya.Scene.open("StartGame.scene", true);
    };
    /**按钮事件 进入季度关卡 */
    SelectPage.prototype.onSelectBoxStart = function (index) {
        console.log("进入第：" + index + "季");
        //进入选择关卡
        Laya.Scene.open("SelectBox/SelectBox.scene", true, index);
    };
    return SelectPage;
}(layaMaxUI_1.ui.SelectUI));
exports.default = SelectPage;
},{"../ui/layaMaxUI":23}],31:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("../ui/layaMaxUI");
/**
 * shopdilog
 */
var ShopDialog = /** @class */ (function (_super) {
    __extends(ShopDialog, _super);
    function ShopDialog() {
        var _this = _super.call(this) || this;
        _this.init();
        return _this;
    }
    ShopDialog.prototype.init = function () {
        this.btn_close.on(Laya.Event.CLICK, this, this.onClose);
        this.btn_shop1.on(Laya.Event.CLICK, this, this.showShop, [1]);
        this.btn_shop2.on(Laya.Event.CLICK, this, this.showShop, [2]);
        this.btn_close.on(Laya.Event.MOUSE_DOWN, this, this.onMouseDow);
        this.btn_close.on(Laya.Event.MOUSE_OUT, this, this.onMouseOut);
        // this.film.on(Laya.Event.CLICK)
    };
    ShopDialog.prototype.onMouseDow = function () {
        this.btn_close.skin = "shop/2 (13).png";
    };
    ShopDialog.prototype.onMouseOut = function () {
        this.btn_close.skin = "shop/2 (12).png";
    };
    ShopDialog.prototype.onClose = function () {
        this.close();
    };
    ShopDialog.prototype.showShop = function (index) {
        var shopTopSkin = "shop/shop1Top.png";
        var shopskinMian = "shop/shop1Main.png";
        var shopBottom = "shop/2 (15).png";
        this.btn_close.skin = "shop/2 (12).png";
        var shopContent = true;
        if (index == 2) {
            shopContent = false;
            shopTopSkin = "shop/shop2Top.png";
            shopskinMian = "shop/shop2main.png";
            shopBottom = "shop/2 (5).png";
        }
        this.shop1.visible = shopContent;
        this.shop2.visible = !shopContent;
        this.shopskinTop.skin = shopTopSkin;
        this.imgBottom.skin = shopBottom;
        this.shopskinMain.skin = shopskinMian;
    };
    ShopDialog.prototype.set = function (lookShop, gameView) {
        if (gameView) {
            //检查道具
            if (true) {
                return;
            }
        }
        this.showShop(lookShop);
        this.popup();
    };
    return ShopDialog;
}(layaMaxUI_1.ui.Shop.ShopDialogUI));
exports.default = ShopDialog;
},{"../ui/layaMaxUI":23}],32:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("../ui/layaMaxUI");
var StartGame = /** @class */ (function (_super) {
    __extends(StartGame, _super);
    function StartGame() {
        return _super.call(this) || this;
    }
    StartGame.prototype.onEnable = function () {
        this.btn_StartGame.on(Laya.Event.CLICK, this, this.onBtn);
        this.btn_Imgs.on(Laya.Event.CLICK, this, this.onBtn);
        this.btn_About.on(Laya.Event.CLICK, this, this.onBtn);
        this.btn_StartGame.on(Laya.Event.MOUSE_DOWN, this, this.btnDown);
        this.btn_StartGame.on(Laya.Event.MOUSE_OUT, this, this.btnUp);
    };
    StartGame.prototype.btnDown = function () {
        this.btn_StartGame.skin = "publicAssets/btn2_2.png";
    };
    StartGame.prototype.btnUp = function () {
        this.btn_StartGame.skin = "publicAssets/btn1_2.png";
    };
    StartGame.prototype.onBtn = function (e) {
        switch (e.target) {
            case this.btn_StartGame:
                Laya.Scene.open("Select.scene");
                break;
            case this.btn_Imgs: break;
            case this.btn_About: break;
        }
    };
    return StartGame;
}(layaMaxUI_1.ui.StartGameUI));
exports.default = StartGame;
<<<<<<< HEAD
},{"../ui/layaMaxUI":23}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
=======
},{"../ui/layaMaxUI":22}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
>>>>>>> mbfetch
